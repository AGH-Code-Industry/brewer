{
  "api/Application.GameManager.html": {
    "href": "api/Application.GameManager.html",
    "title": "Class GameManager | Czasoport Documentation",
    "keywords": "Class GameManager Namespace Application public class GameManager : MonoBehaviour Inheritance object GameManager"
  },
  "api/Application.StartupManager.html": {
    "href": "api/Application.StartupManager.html",
    "title": "Class StartupManager | Czasoport Documentation",
    "keywords": "Class StartupManager Namespace Application public class StartupManager : MonoBehaviour Inheritance object StartupManager"
  },
  "api/Application.html": {
    "href": "api/Application.html",
    "title": "Namespace Application | Czasoport Documentation",
    "keywords": "Namespace Application Classes GameManager StartupManager"
  },
  "api/CustomInput.CInput.html": {
    "href": "api/CustomInput.CInput.html",
    "title": "Class CInput | Czasoport Documentation",
    "keywords": "Class CInput Namespace CustomInput Wrapper for automatically generated InputActions. Provides easier access to reading values from input, takes care of processing for common input values. Incorporates locking mechanism if added in the project. public static class CInput Inheritance object CInput Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields InputActions InputActions object that CInput is based on. Should be used if there is no wrapper implemented by CInput. public static readonly InputActions InputActions Field Value InputActions Properties DormMousePosition Normal mouse position from InputActions. If you want point in game over which mouse is hovering, use MouseWorldPosition. public static Vector2 DormMousePosition { get; } Property Value Vector2 DormMouseWorldPosition Mouse position casted to world coordinates. public static Vector2 DormMouseWorldPosition { get; } Property Value Vector2 Run Whether player is running, and how fast he is running (effective on gamepads). public static float Run { get; } Property Value float TownNavigationAxis Vector2 desired player direction public static Vector2 TownNavigationAxis { get; } Property Value Vector2"
  },
  "api/CustomInput.Exceptions.NoMainCameraException.html": {
    "href": "api/CustomInput.Exceptions.NoMainCameraException.html",
    "title": "Class NoMainCameraException | Czasoport Documentation",
    "keywords": "Class NoMainCameraException Namespace CustomInput.Exceptions public class NoMainCameraException : Exception, ISerializable Inheritance object Exception NoMainCameraException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NoMainCameraException() public NoMainCameraException() NoMainCameraException(string) public NoMainCameraException(string message) Parameters message string NoMainCameraException(string, Exception) public NoMainCameraException(string message, Exception inner) Parameters message string inner Exception"
  },
  "api/CustomInput.Exceptions.html": {
    "href": "api/CustomInput.Exceptions.html",
    "title": "Namespace CustomInput.Exceptions | Czasoport Documentation",
    "keywords": "Namespace CustomInput.Exceptions Classes NoMainCameraException"
  },
  "api/CustomInput.InputActions.AlwaysEnabledActions.html": {
    "href": "api/CustomInput.InputActions.AlwaysEnabledActions.html",
    "title": "Struct InputActions.AlwaysEnabledActions | Czasoport Documentation",
    "keywords": "Struct InputActions.AlwaysEnabledActions Namespace CustomInput public struct InputActions.AlwaysEnabledActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors AlwaysEnabledActions(InputActions) public AlwaysEnabledActions(InputActions wrapper) Parameters wrapper InputActions Properties Newaction public InputAction Newaction { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(IAlwaysEnabledActions) public void AddCallbacks(InputActions.IAlwaysEnabledActions instance) Parameters instance InputActions.IAlwaysEnabledActions Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap RemoveCallbacks(IAlwaysEnabledActions) public void RemoveCallbacks(InputActions.IAlwaysEnabledActions instance) Parameters instance InputActions.IAlwaysEnabledActions SetCallbacks(IAlwaysEnabledActions) public void SetCallbacks(InputActions.IAlwaysEnabledActions instance) Parameters instance InputActions.IAlwaysEnabledActions Operators implicit operator InputActionMap(AlwaysEnabledActions) public static implicit operator InputActionMap(InputActions.AlwaysEnabledActions set) Parameters set InputActions.AlwaysEnabledActions Returns InputActionMap"
  },
  "api/CustomInput.InputActions.DormitoryActions.html": {
    "href": "api/CustomInput.InputActions.DormitoryActions.html",
    "title": "Struct InputActions.DormitoryActions | Czasoport Documentation",
    "keywords": "Struct InputActions.DormitoryActions Namespace CustomInput public struct InputActions.DormitoryActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors DormitoryActions(InputActions) public DormitoryActions(InputActions wrapper) Parameters wrapper InputActions Properties MousePosition public InputAction MousePosition { get; } Property Value InputAction PrimaryMouseClicked public InputAction PrimaryMouseClicked { get; } Property Value InputAction SecondaryMouseClicked public InputAction SecondaryMouseClicked { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(IDormitoryActions) public void AddCallbacks(InputActions.IDormitoryActions instance) Parameters instance InputActions.IDormitoryActions Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap RemoveCallbacks(IDormitoryActions) public void RemoveCallbacks(InputActions.IDormitoryActions instance) Parameters instance InputActions.IDormitoryActions SetCallbacks(IDormitoryActions) public void SetCallbacks(InputActions.IDormitoryActions instance) Parameters instance InputActions.IDormitoryActions Operators implicit operator InputActionMap(DormitoryActions) public static implicit operator InputActionMap(InputActions.DormitoryActions set) Parameters set InputActions.DormitoryActions Returns InputActionMap"
  },
  "api/CustomInput.InputActions.IAlwaysEnabledActions.html": {
    "href": "api/CustomInput.InputActions.IAlwaysEnabledActions.html",
    "title": "Interface InputActions.IAlwaysEnabledActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IAlwaysEnabledActions Namespace CustomInput public interface InputActions.IAlwaysEnabledActions Methods OnNewaction(CallbackContext) void OnNewaction(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/CustomInput.InputActions.IDormitoryActions.html": {
    "href": "api/CustomInput.InputActions.IDormitoryActions.html",
    "title": "Interface InputActions.IDormitoryActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IDormitoryActions Namespace CustomInput public interface InputActions.IDormitoryActions Methods OnMousePosition(CallbackContext) void OnMousePosition(InputAction.CallbackContext context) Parameters context CallbackContext OnPrimaryMouseClicked(CallbackContext) void OnPrimaryMouseClicked(InputAction.CallbackContext context) Parameters context CallbackContext OnSecondaryMouseClicked(CallbackContext) void OnSecondaryMouseClicked(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/CustomInput.InputActions.IPauseMenuActions.html": {
    "href": "api/CustomInput.InputActions.IPauseMenuActions.html",
    "title": "Interface InputActions.IPauseMenuActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IPauseMenuActions Namespace CustomInput public interface InputActions.IPauseMenuActions Methods OnNewaction(CallbackContext) void OnNewaction(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/CustomInput.InputActions.ITestingActions.html": {
    "href": "api/CustomInput.InputActions.ITestingActions.html",
    "title": "Interface InputActions.ITestingActions | Czasoport Documentation",
    "keywords": "Interface InputActions.ITestingActions Namespace CustomInput public interface InputActions.ITestingActions Methods OnSaveGame(CallbackContext) void OnSaveGame(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/CustomInput.InputActions.ITownActions.html": {
    "href": "api/CustomInput.InputActions.ITownActions.html",
    "title": "Interface InputActions.ITownActions | Czasoport Documentation",
    "keywords": "Interface InputActions.ITownActions Namespace CustomInput public interface InputActions.ITownActions Methods OnNavigation(CallbackContext) void OnNavigation(InputAction.CallbackContext context) Parameters context CallbackContext OnRun(CallbackContext) void OnRun(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/CustomInput.InputActions.PauseMenuActions.html": {
    "href": "api/CustomInput.InputActions.PauseMenuActions.html",
    "title": "Struct InputActions.PauseMenuActions | Czasoport Documentation",
    "keywords": "Struct InputActions.PauseMenuActions Namespace CustomInput public struct InputActions.PauseMenuActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PauseMenuActions(InputActions) public PauseMenuActions(InputActions wrapper) Parameters wrapper InputActions Properties Newaction public InputAction Newaction { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(IPauseMenuActions) public void AddCallbacks(InputActions.IPauseMenuActions instance) Parameters instance InputActions.IPauseMenuActions Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap RemoveCallbacks(IPauseMenuActions) public void RemoveCallbacks(InputActions.IPauseMenuActions instance) Parameters instance InputActions.IPauseMenuActions SetCallbacks(IPauseMenuActions) public void SetCallbacks(InputActions.IPauseMenuActions instance) Parameters instance InputActions.IPauseMenuActions Operators implicit operator InputActionMap(PauseMenuActions) public static implicit operator InputActionMap(InputActions.PauseMenuActions set) Parameters set InputActions.PauseMenuActions Returns InputActionMap"
  },
  "api/CustomInput.InputActions.TestingActions.html": {
    "href": "api/CustomInput.InputActions.TestingActions.html",
    "title": "Struct InputActions.TestingActions | Czasoport Documentation",
    "keywords": "Struct InputActions.TestingActions Namespace CustomInput public struct InputActions.TestingActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TestingActions(InputActions) public TestingActions(InputActions wrapper) Parameters wrapper InputActions Properties SaveGame public InputAction SaveGame { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(ITestingActions) public void AddCallbacks(InputActions.ITestingActions instance) Parameters instance InputActions.ITestingActions Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap RemoveCallbacks(ITestingActions) public void RemoveCallbacks(InputActions.ITestingActions instance) Parameters instance InputActions.ITestingActions SetCallbacks(ITestingActions) public void SetCallbacks(InputActions.ITestingActions instance) Parameters instance InputActions.ITestingActions Operators implicit operator InputActionMap(TestingActions) public static implicit operator InputActionMap(InputActions.TestingActions set) Parameters set InputActions.TestingActions Returns InputActionMap"
  },
  "api/CustomInput.InputActions.TownActions.html": {
    "href": "api/CustomInput.InputActions.TownActions.html",
    "title": "Struct InputActions.TownActions | Czasoport Documentation",
    "keywords": "Struct InputActions.TownActions Namespace CustomInput public struct InputActions.TownActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TownActions(InputActions) public TownActions(InputActions wrapper) Parameters wrapper InputActions Properties Navigation public InputAction Navigation { get; } Property Value InputAction Run public InputAction Run { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(ITownActions) public void AddCallbacks(InputActions.ITownActions instance) Parameters instance InputActions.ITownActions Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap RemoveCallbacks(ITownActions) public void RemoveCallbacks(InputActions.ITownActions instance) Parameters instance InputActions.ITownActions SetCallbacks(ITownActions) public void SetCallbacks(InputActions.ITownActions instance) Parameters instance InputActions.ITownActions Operators implicit operator InputActionMap(TownActions) public static implicit operator InputActionMap(InputActions.TownActions set) Parameters set InputActions.TownActions Returns InputActionMap"
  },
  "api/CustomInput.InputActions.html": {
    "href": "api/CustomInput.InputActions.html",
    "title": "Class InputActions | Czasoport Documentation",
    "keywords": "Class InputActions Namespace CustomInput public class InputActions : IInputActionCollection2, IDisposable Inheritance object InputActions Implements IDisposable Constructors InputActions() public InputActions() Properties AlwaysEnabled public InputActions.AlwaysEnabledActions AlwaysEnabled { get; } Property Value InputActions.AlwaysEnabledActions Dormitory public InputActions.DormitoryActions Dormitory { get; } Property Value InputActions.DormitoryActions PauseMenu public InputActions.PauseMenuActions PauseMenu { get; } Property Value InputActions.PauseMenuActions Testing public InputActions.TestingActions Testing { get; } Property Value InputActions.TestingActions Town public InputActions.TownActions Town { get; } Property Value InputActions.TownActions asset public InputActionAsset asset { get; } Property Value InputActionAsset bindingMask public InputBinding? bindingMask { get; set; } Property Value InputBinding? bindings public IEnumerable<InputBinding> bindings { get; } Property Value IEnumerable<InputBinding> controlSchemes public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value ReadOnlyArray<InputControlScheme> devices public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value ReadOnlyArray<InputDevice>? Methods Contains(InputAction) public bool Contains(InputAction action) Parameters action InputAction Returns bool Disable() public void Disable() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Enable() public void Enable() FindAction(string, bool) public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters actionNameOrId string throwIfNotFound bool Returns InputAction FindBinding(InputBinding, out InputAction) public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters bindingMask InputBinding action InputAction Returns int GetEnumerator() public IEnumerator<InputAction> GetEnumerator() Returns IEnumerator<InputAction>"
  },
  "api/CustomInput.html": {
    "href": "api/CustomInput.html",
    "title": "Namespace CustomInput | Czasoport Documentation",
    "keywords": "Namespace CustomInput Classes CInput Wrapper for automatically generated InputActions. Provides easier access to reading values from input, takes care of processing for common input values. Incorporates locking mechanism if added in the project. InputActions Structs InputActions.AlwaysEnabledActions InputActions.DormitoryActions InputActions.PauseMenuActions InputActions.TestingActions InputActions.TownActions Interfaces InputActions.IAlwaysEnabledActions InputActions.IDormitoryActions InputActions.IPauseMenuActions InputActions.ITestingActions InputActions.ITownActions"
  },
  "api/DataPersistence.Data.DormitoryData.html": {
    "href": "api/DataPersistence.Data.DormitoryData.html",
    "title": "Class DormitoryData | Czasoport Documentation",
    "keywords": "Class DormitoryData Namespace DataPersistence.Data [Serializable] public class DormitoryData Inheritance object DormitoryData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/DataPersistence.Data.GameData.html": {
    "href": "api/DataPersistence.Data.GameData.html",
    "title": "Class GameData | Czasoport Documentation",
    "keywords": "Class GameData Namespace DataPersistence.Data [Serializable] public class GameData Inheritance object GameData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields currentPlace public PlaceType currentPlace Field Value PlaceType dormData public DormitoryData dormData Field Value DormitoryData inventoryData public InventoryData inventoryData Field Value InventoryData isNewSave public bool isNewSave Field Value bool orderData public OrderData orderData Field Value OrderData townData public TownData townData Field Value TownData"
  },
  "api/DataPersistence.Data.InventoryData.html": {
    "href": "api/DataPersistence.Data.InventoryData.html",
    "title": "Class InventoryData | Czasoport Documentation",
    "keywords": "Class InventoryData Namespace DataPersistence.Data [Serializable] public class InventoryData Inheritance object InventoryData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields items public List<InventoryEntry> items Field Value List<InventoryEntry>"
  },
  "api/DataPersistence.Data.OrderData.html": {
    "href": "api/DataPersistence.Data.OrderData.html",
    "title": "Class OrderData | Czasoport Documentation",
    "keywords": "Class OrderData Namespace DataPersistence.Data [Serializable] public class OrderData Inheritance object OrderData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/DataPersistence.Data.TownData.html": {
    "href": "api/DataPersistence.Data.TownData.html",
    "title": "Class TownData | Czasoport Documentation",
    "keywords": "Class TownData Namespace DataPersistence.Data [Serializable] public class TownData Inheritance object TownData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/DataPersistence.Data.html": {
    "href": "api/DataPersistence.Data.html",
    "title": "Namespace DataPersistence.Data | Czasoport Documentation",
    "keywords": "Namespace DataPersistence.Data Classes DormitoryData GameData InventoryData OrderData TownData"
  },
  "api/DataPersistence.DataPersistenceManager.html": {
    "href": "api/DataPersistence.DataPersistenceManager.html",
    "title": "Class DataPersistenceManager | Czasoport Documentation",
    "keywords": "Class DataPersistenceManager Namespace DataPersistence public class DataPersistenceManager : Singleton<DataPersistenceManager> Inheritance object Singleton<DataPersistenceManager> DataPersistenceManager Inherited Members Singleton<DataPersistenceManager>.I Singleton<DataPersistenceManager>.Awake() Fields gameData [NonSerialized] public GameData gameData Field Value GameData Methods CreateNewGame() public void CreateNewGame() LoadSave(string) public void LoadSave(string saveName) Parameters saveName string SaveGame(string) public void SaveGame(string saveName) Parameters saveName string"
  },
  "api/DataPersistence.FileDataHandler.html": {
    "href": "api/DataPersistence.FileDataHandler.html",
    "title": "Class FileDataHandler | Czasoport Documentation",
    "keywords": "Class FileDataHandler Namespace DataPersistence public class FileDataHandler Inheritance object FileDataHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FileDataHandler(string) public FileDataHandler(string saveDirectory) Parameters saveDirectory string Methods Load(string) public GameData Load(string saveName) Parameters saveName string Returns GameData Save(GameData, string) public bool Save(GameData gameData, string saveName) Parameters gameData GameData saveName string Returns bool"
  },
  "api/DataPersistence.HelperStructures.DefaultInventoryEntries.html": {
    "href": "api/DataPersistence.HelperStructures.DefaultInventoryEntries.html",
    "title": "Class DefaultInventoryEntries | Czasoport Documentation",
    "keywords": "Class DefaultInventoryEntries Namespace DataPersistence.HelperStructures [Serializable] public class DefaultInventoryEntries Inheritance object DefaultInventoryEntries Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields startingItems public DefaultInventoryEntry[] startingItems Field Value DefaultInventoryEntry[] Methods GetEntries() public List<InventoryEntry> GetEntries() Returns List<InventoryEntry>"
  },
  "api/DataPersistence.HelperStructures.DefaultInventoryEntry.html": {
    "href": "api/DataPersistence.HelperStructures.DefaultInventoryEntry.html",
    "title": "Class DefaultInventoryEntry | Czasoport Documentation",
    "keywords": "Class DefaultInventoryEntry Namespace DataPersistence.HelperStructures [Serializable] public class DefaultInventoryEntry Inheritance object DefaultInventoryEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields item public ItemDefinition item Field Value ItemDefinition quantity public ushort quantity Field Value ushort Methods ToTuple() public (string, ushort) ToTuple() Returns (string, ushort)"
  },
  "api/DataPersistence.HelperStructures.InventoryEntry.html": {
    "href": "api/DataPersistence.HelperStructures.InventoryEntry.html",
    "title": "Class InventoryEntry | Czasoport Documentation",
    "keywords": "Class InventoryEntry Namespace DataPersistence.HelperStructures [Serializable] public class InventoryEntry Inheritance object InventoryEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InventoryEntry(string, ushort) public InventoryEntry(string assetName, ushort quantity) Parameters assetName string quantity ushort Fields assetName public string assetName Field Value string quantity public ushort quantity Field Value ushort"
  },
  "api/DataPersistence.HelperStructures.html": {
    "href": "api/DataPersistence.HelperStructures.html",
    "title": "Namespace DataPersistence.HelperStructures | Czasoport Documentation",
    "keywords": "Namespace DataPersistence.HelperStructures Classes DefaultInventoryEntries DefaultInventoryEntry InventoryEntry"
  },
  "api/DataPersistence.IDataPersistence.html": {
    "href": "api/DataPersistence.IDataPersistence.html",
    "title": "Interface IDataPersistence | Czasoport Documentation",
    "keywords": "Interface IDataPersistence Namespace DataPersistence public interface IDataPersistence Methods LoadPersistentData(GameData) void LoadPersistentData(GameData gameData) Parameters gameData GameData SavePersistentData(ref GameData) void SavePersistentData(ref GameData gameData) Parameters gameData GameData"
  },
  "api/DataPersistence.html": {
    "href": "api/DataPersistence.html",
    "title": "Namespace DataPersistence | Czasoport Documentation",
    "keywords": "Namespace DataPersistence Classes DataPersistenceManager FileDataHandler Interfaces IDataPersistence"
  },
  "api/Dialogues.ChoiceProcessing.ChoiceButton.html": {
    "href": "api/Dialogues.ChoiceProcessing.ChoiceButton.html",
    "title": "Class ChoiceButton | Czasoport Documentation",
    "keywords": "Class ChoiceButton Namespace Dialogues.ChoiceProcessing public class ChoiceButton : MonoBehaviour Inheritance object ChoiceButton Fields button public Button button Field Value Button Methods SetIcon(Sprite) public void SetIcon(Sprite newIcon) Parameters newIcon Sprite SetIcon2(Sprite) public void SetIcon2(Sprite newIcon) Parameters newIcon Sprite SetText(string) public void SetText(string newText) Parameters newText string"
  },
  "api/Dialogues.ChoiceProcessing.ChoiceContext.html": {
    "href": "api/Dialogues.ChoiceProcessing.ChoiceContext.html",
    "title": "Class ChoiceContext | Czasoport Documentation",
    "keywords": "Class ChoiceContext Namespace Dialogues.ChoiceProcessing public class ChoiceContext Inheritance object ChoiceContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GetItem public ItemDefinition GetItem { get; set; } Property Value ItemDefinition GetsItem public bool GetsItem { get; } Property Value bool GetsQuest public bool GetsQuest { get; } Property Value bool RequiredItem public ItemDefinition RequiredItem { get; set; } Property Value ItemDefinition RequiresItem public bool RequiresItem { get; } Property Value bool"
  },
  "api/Dialogues.ChoiceProcessing.ChoicesTagProcessor.html": {
    "href": "api/Dialogues.ChoiceProcessing.ChoicesTagProcessor.html",
    "title": "Class ChoicesTagProcessor | Czasoport Documentation",
    "keywords": "Class ChoicesTagProcessor Namespace Dialogues.ChoiceProcessing public static class ChoicesTagProcessor Inheritance object ChoicesTagProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ProcessTagsForChoice(string[]) public static ChoiceContext ProcessTagsForChoice(string[] tagsString) Parameters tagsString string[] Returns ChoiceContext"
  },
  "api/Dialogues.ChoiceProcessing.html": {
    "href": "api/Dialogues.ChoiceProcessing.html",
    "title": "Namespace Dialogues.ChoiceProcessing | Czasoport Documentation",
    "keywords": "Namespace Dialogues.ChoiceProcessing Classes ChoiceButton ChoiceContext ChoicesTagProcessor"
  },
  "api/Dialogues.ChoicesProcessor.html": {
    "href": "api/Dialogues.ChoicesProcessor.html",
    "title": "Class ChoicesProcessor | Czasoport Documentation",
    "keywords": "Class ChoicesProcessor Namespace Dialogues public class ChoicesProcessor Inheritance object ChoicesProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChoicesProcessor(GameObject, GameObject, Inventory) public ChoicesProcessor(GameObject choicesPanel, GameObject choicesPrefab, Inventory inventory) Parameters choicesPanel GameObject choicesPrefab GameObject inventory Inventory Methods ProcessChoices(Story) public bool ProcessChoices(Story story) Parameters story Story Returns bool"
  },
  "api/Dialogues.DialogueManager.html": {
    "href": "api/Dialogues.DialogueManager.html",
    "title": "Class DialogueManager | Czasoport Documentation",
    "keywords": "Class DialogueManager Namespace Dialogues public class DialogueManager : Singleton<DialogueManager> Inheritance object Singleton<DialogueManager> DialogueManager Inherited Members Singleton<DialogueManager>.I Fields dialogueEnded [NonSerialized] public UnityEvent dialogueEnded Field Value UnityEvent dialogueStarted [NonSerialized] public UnityEvent dialogueStarted Field Value UnityEvent Methods Awake() protected override void Awake() ContinueDialogue() Main function in the dialogue process, manages choices parsing, tag parsing and canvas updating. Will end the dialogue if there are no more lines to read. public void ContinueDialogue() EndDialogue() End the current dialogue. If there is no dialogue active, nothing will happen. Dialogue progress won't be saved. public void EndDialogue() StartDialogue(TextAsset, Action) Start new dialogue from a file. File must be provided by other Behaviour. Dialogue will only start if there is no other dialogue active. public bool StartDialogue(TextAsset storyFile, Action finishAction = null) Parameters storyFile TextAsset File from which to load the story. Must be a JSON file, generated from Ink file. finishAction Action This action will be called when dialogues ends Returns bool"
  },
  "api/Dialogues.html": {
    "href": "api/Dialogues.html",
    "title": "Namespace Dialogues | Czasoport Documentation",
    "keywords": "Namespace Dialogues Classes ChoicesProcessor DialogueManager"
  },
  "api/Dorm.Items.Item.html": {
    "href": "api/Dorm.Items.Item.html",
    "title": "Class Item | Czasoport Documentation",
    "keywords": "Class Item Namespace Dorm.Items public class Item : MonoBehaviour Inheritance object Item Fields itemDefinition public ItemDefinition itemDefinition Field Value ItemDefinition"
  },
  "api/Dorm.Items.html": {
    "href": "api/Dorm.Items.html",
    "title": "Namespace Dorm.Items | Czasoport Documentation",
    "keywords": "Namespace Dorm.Items Classes Item"
  },
  "api/Dorm.Movables.ConstrainedDraggable.html": {
    "href": "api/Dorm.Movables.ConstrainedDraggable.html",
    "title": "Class ConstrainedDraggable | Czasoport Documentation",
    "keywords": "Class ConstrainedDraggable Namespace Dorm.Movables public class ConstrainedDraggable : MonoBehaviour Inheritance object ConstrainedDraggable Fields onPlaceholderChanged [NonSerialized] public UnityEvent<Placeholder> onPlaceholderChanged Field Value UnityEvent<Placeholder> Methods OnTriggerEnter2D(Collider2D) public void OnTriggerEnter2D(Collider2D other) Parameters other Collider2D OnTriggerExit2D(Collider2D) public void OnTriggerExit2D(Collider2D other) Parameters other Collider2D"
  },
  "api/Dorm.Movables.Draggable.html": {
    "href": "api/Dorm.Movables.Draggable.html",
    "title": "Class Draggable | Czasoport Documentation",
    "keywords": "Class Draggable Namespace Dorm.Movables public class Draggable : MonoBehaviour, IPointerDownHandler Inheritance object Draggable Implements IPointerDownHandler Fields layerCount public static ushort layerCount Field Value ushort Methods InitializeInitialFollow() public void InitializeInitialFollow() OnPointerDown(PointerEventData) public void OnPointerDown(PointerEventData eventData) Parameters eventData PointerEventData OnTriggerEnter2D(Collider2D) public void OnTriggerEnter2D(Collider2D other) Parameters other Collider2D OnTriggerExit2D(Collider2D) public void OnTriggerExit2D(Collider2D other) Parameters other Collider2D"
  },
  "api/Dorm.Movables.IDragInteractable.html": {
    "href": "api/Dorm.Movables.IDragInteractable.html",
    "title": "Interface IDragInteractable | Czasoport Documentation",
    "keywords": "Interface IDragInteractable Namespace Dorm.Movables public interface IDragInteractable Methods DragInteraction(GameObject) Fired when object has been let go over a object that has this interface. bool DragInteraction(GameObject sourceObject) Parameters sourceObject GameObject Returns bool Whether object should be destroyed. EnteredPossibleDragInteraction(GameObject) void EnteredPossibleDragInteraction(GameObject sourceObject) Parameters sourceObject GameObject LeftPossibleDragInteraction(GameObject) void LeftPossibleDragInteraction(GameObject sourceObject) Parameters sourceObject GameObject"
  },
  "api/Dorm.Movables.Placeholder.html": {
    "href": "api/Dorm.Movables.Placeholder.html",
    "title": "Class Placeholder | Czasoport Documentation",
    "keywords": "Class Placeholder Namespace Dorm.Movables public class Placeholder : MonoBehaviour Inheritance object Placeholder Fields tool public GameObject tool Field Value GameObject type public PlaceholderType type Field Value PlaceholderType Methods IsFree() public bool IsFree() Returns bool RemoveTool() public void RemoveTool() SetTool(GameObject) public void SetTool(GameObject toolToSet) Parameters toolToSet GameObject"
  },
  "api/Dorm.Movables.PlaceholderType.html": {
    "href": "api/Dorm.Movables.PlaceholderType.html",
    "title": "Enum PlaceholderType | Czasoport Documentation",
    "keywords": "Enum PlaceholderType Namespace Dorm.Movables public enum PlaceholderType Fields NotUsable = 1 Usable = 0"
  },
  "api/Dorm.Movables.Tests.CorrectInteractionsTest.html": {
    "href": "api/Dorm.Movables.Tests.CorrectInteractionsTest.html",
    "title": "Class CorrectInteractionsTest | Czasoport Documentation",
    "keywords": "Class CorrectInteractionsTest Namespace Dorm.Movables.Tests public class CorrectInteractionsTest : MonoBehaviour, IDragInteractable Inheritance object CorrectInteractionsTest Implements IDragInteractable Methods DragInteraction(GameObject) Fired when object has been let go over a object that has this interface. public bool DragInteraction(GameObject sourceObject) Parameters sourceObject GameObject Returns bool Whether object should be destroyed. EnteredPossibleDragInteraction(GameObject) public void EnteredPossibleDragInteraction(GameObject sourceObject) Parameters sourceObject GameObject LeftPossibleDragInteraction(GameObject) public void LeftPossibleDragInteraction(GameObject sourceObject) Parameters sourceObject GameObject"
  },
  "api/Dorm.Movables.Tests.html": {
    "href": "api/Dorm.Movables.Tests.html",
    "title": "Namespace Dorm.Movables.Tests | Czasoport Documentation",
    "keywords": "Namespace Dorm.Movables.Tests Classes CorrectInteractionsTest"
  },
  "api/Dorm.Movables.html": {
    "href": "api/Dorm.Movables.html",
    "title": "Namespace Dorm.Movables | Czasoport Documentation",
    "keywords": "Namespace Dorm.Movables Classes ConstrainedDraggable Draggable Placeholder Interfaces IDragInteractable Enums PlaceholderType"
  },
  "api/Dorm.Tools.Barrel.html": {
    "href": "api/Dorm.Tools.Barrel.html",
    "title": "Class Barrel | Czasoport Documentation",
    "keywords": "Class Barrel Namespace Dorm.Tools public class Barrel : Tool, IDragInteractable Inheritance object Tool Barrel Implements IDragInteractable Methods Awake() protected override void Awake() DragInteraction(GameObject) Fired when object has been let go over a object that has this interface. public bool DragInteraction(GameObject sourceObject) Parameters sourceObject GameObject Returns bool Whether object should be destroyed. EnteredPossibleDragInteraction(GameObject) public void EnteredPossibleDragInteraction(GameObject sourceObject) Parameters sourceObject GameObject LeftPossibleDragInteraction(GameObject) public void LeftPossibleDragInteraction(GameObject sourceObject) Parameters sourceObject GameObject"
  },
  "api/Dorm.Tools.Tool.html": {
    "href": "api/Dorm.Tools.Tool.html",
    "title": "Class Tool | Czasoport Documentation",
    "keywords": "Class Tool Namespace Dorm.Tools public class Tool : MonoBehaviour Inheritance object Tool Derived Barrel Methods Awake() protected virtual void Awake()"
  },
  "api/Dorm.Tools.html": {
    "href": "api/Dorm.Tools.html",
    "title": "Namespace Dorm.Tools | Czasoport Documentation",
    "keywords": "Namespace Dorm.Tools Classes Barrel Tool"
  },
  "api/Global.UnityInkFileHandler.html": {
    "href": "api/Global.UnityInkFileHandler.html",
    "title": "Class UnityInkFileHandler | Czasoport Documentation",
    "keywords": "Class UnityInkFileHandler Namespace Global public class UnityInkFileHandler : IFileHandler Inheritance object UnityInkFileHandler Implements IFileHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UnityInkFileHandler(string) public UnityInkFileHandler(string rootDirectory) Parameters rootDirectory string Methods LoadInkFileContents(string) public string LoadInkFileContents(string fullFilename) Parameters fullFilename string Returns string ResolveInkFilename(string) public string ResolveInkFilename(string includeName) Parameters includeName string Returns string"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | Czasoport Documentation",
    "keywords": "Namespace Classes UnityInkFileHandler"
  },
  "api/Ink.CharacterRange.html": {
    "href": "api/Ink.CharacterRange.html",
    "title": "Class CharacterRange | Czasoport Documentation",
    "keywords": "Class CharacterRange Namespace Ink A class representing a character range. Allows for lazy-loading a corresponding character set. public sealed class CharacterRange Inheritance object CharacterRange Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties end public char end { get; } Property Value char start public char start { get; } Property Value char Methods Define(char, char, IEnumerable<char>) public static CharacterRange Define(char start, char end, IEnumerable<char> excludes = null) Parameters start char end char excludes IEnumerable<char> Returns CharacterRange ToCharacterSet() Returns a character set instance corresponding to the character range represented by the current instance. public CharacterSet ToCharacterSet() Returns CharacterSet The char set. Remarks The internal character set is created once and cached in memory."
  },
  "api/Ink.CharacterSet.html": {
    "href": "api/Ink.CharacterSet.html",
    "title": "Class CharacterSet | Czasoport Documentation",
    "keywords": "Class CharacterSet Namespace Ink public class CharacterSet : HashSet<char>, ISet<char>, ICollection<char>, IReadOnlySet<char>, IReadOnlyCollection<char>, IEnumerable<char>, IEnumerable, IDeserializationCallback, ISerializable Inheritance object HashSet<char> CharacterSet Implements ISet<char> ICollection<char> IReadOnlySet<char> IReadOnlyCollection<char> IEnumerable<char> IEnumerable IDeserializationCallback ISerializable Inherited Members HashSet<char>.Add(char) HashSet<char>.Clear() HashSet<char>.Contains(char) HashSet<char>.CopyTo(char[]) HashSet<char>.CopyTo(char[], int) HashSet<char>.CopyTo(char[], int, int) HashSet<char>.CreateSetComparer() HashSet<char>.EnsureCapacity(int) HashSet<char>.ExceptWith(IEnumerable<char>) HashSet<char>.GetEnumerator() HashSet<char>.IntersectWith(IEnumerable<char>) HashSet<char>.IsProperSubsetOf(IEnumerable<char>) HashSet<char>.IsProperSupersetOf(IEnumerable<char>) HashSet<char>.IsSubsetOf(IEnumerable<char>) HashSet<char>.IsSupersetOf(IEnumerable<char>) HashSet<char>.OnDeserialization(object) HashSet<char>.Overlaps(IEnumerable<char>) HashSet<char>.Remove(char) HashSet<char>.RemoveWhere(Predicate<char>) HashSet<char>.SetEquals(IEnumerable<char>) HashSet<char>.SymmetricExceptWith(IEnumerable<char>) HashSet<char>.TrimExcess() HashSet<char>.TryGetValue(char, out char) HashSet<char>.UnionWith(IEnumerable<char>) HashSet<char>.Comparer HashSet<char>.Count object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CharacterSet() public CharacterSet() CharacterSet(CharacterSet) public CharacterSet(CharacterSet charSetToCopy) Parameters charSetToCopy CharacterSet CharacterSet(string) public CharacterSet(string str) Parameters str string Methods AddCharacters(IEnumerable<char>) public CharacterSet AddCharacters(IEnumerable<char> chars) Parameters chars IEnumerable<char> Returns CharacterSet AddCharacters(string) public CharacterSet AddCharacters(string chars) Parameters chars string Returns CharacterSet AddRange(char, char) public CharacterSet AddRange(char start, char end) Parameters start char end char Returns CharacterSet FromRange(char, char) public static CharacterSet FromRange(char start, char end) Parameters start char end char Returns CharacterSet"
  },
  "api/Ink.CommandLineInput.html": {
    "href": "api/Ink.CommandLineInput.html",
    "title": "Class CommandLineInput | Czasoport Documentation",
    "keywords": "Class CommandLineInput Namespace Ink public class CommandLineInput Inheritance object CommandLineInput Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields choiceInput public int? choiceInput Field Value int? debugPathLookup public string debugPathLookup Field Value string debugSource public int? debugSource Field Value int? isExit public bool isExit Field Value bool isHelp public bool isHelp Field Value bool userImmediateModeStatement public object userImmediateModeStatement Field Value object"
  },
  "api/Ink.CommentEliminator.html": {
    "href": "api/Ink.CommentEliminator.html",
    "title": "Class CommentEliminator | Czasoport Documentation",
    "keywords": "Class CommentEliminator Namespace Ink Pre-pass before main ink parser runs. It actually performs two main tasks: comment elimination to simplify the parse rules in the main parser Conversion of Windows line endings (\\r\\n) to the simpler Unix style (\\n), so we don't have to worry about them later. public class CommentEliminator : StringParser Inheritance object StringParser CommentEliminator Inherited Members StringParser.ParseSuccess StringParser.numbersCharacterSet StringParser.errorHandler StringParser.currentCharacter StringParser.state StringParser.hadError StringParser.PreProcessInputString(string) StringParser.BeginRule() StringParser.FailRule(int) StringParser.CancelRule(int) StringParser.SucceedRule(int, object) StringParser.RuleDidSucceed(object, StringParserState.Element, StringParserState.Element) StringParser.Expect(StringParser.ParseRule, string, StringParser.ParseRule) StringParser.Error(string, bool) StringParser.ErrorWithParsedObject(string, Object, bool) StringParser.ErrorOnLine(string, int, bool) StringParser.Warning(string) StringParser.endOfInput StringParser.remainingString StringParser.LineRemainder() StringParser.remainingLength StringParser.inputString StringParser.lineIndex StringParser.characterInLineIndex StringParser.index StringParser.SetFlag(uint, bool) StringParser.GetFlag(uint) StringParser.ParseObject(StringParser.ParseRule) StringParser.Parse<T>(StringParser.SpecificParseRule<T>) StringParser.OneOf(params StringParser.ParseRule[]) StringParser.OneOrMore(StringParser.ParseRule) StringParser.Optional(StringParser.ParseRule) StringParser.Exclude(StringParser.ParseRule) StringParser.OptionalExclude(StringParser.ParseRule) StringParser.String(string) StringParser.Interleave<T>(StringParser.ParseRule, StringParser.ParseRule, StringParser.ParseRule, bool) StringParser.ParseString(string) StringParser.ParseSingleCharacter() StringParser.ParseUntilCharactersFromString(string, int) StringParser.ParseUntilCharactersFromCharSet(CharacterSet, int) StringParser.ParseCharactersFromString(string, int) StringParser.ParseCharactersFromString(string, bool, int) StringParser.ParseCharactersFromCharSet(CharacterSet, bool, int) StringParser.Peek(StringParser.ParseRule) StringParser.ParseUntil(StringParser.ParseRule, CharacterSet, CharacterSet) StringParser.ParseInt() StringParser.ParseFloat() StringParser.ParseNewline() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommentEliminator(string) public CommentEliminator(string input) Parameters input string Methods Process() public string Process() Returns string"
  },
  "api/Ink.Compiler.CommandLineInputResult.html": {
    "href": "api/Ink.Compiler.CommandLineInputResult.html",
    "title": "Class Compiler.CommandLineInputResult | Czasoport Documentation",
    "keywords": "Class Compiler.CommandLineInputResult Namespace Ink public class Compiler.CommandLineInputResult Inheritance object Compiler.CommandLineInputResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields choiceIdx public int choiceIdx Field Value int divertedPath public string divertedPath Field Value string output public string output Field Value string requestsExit public bool requestsExit Field Value bool"
  },
  "api/Ink.Compiler.DebugSourceRange.html": {
    "href": "api/Ink.Compiler.DebugSourceRange.html",
    "title": "Struct Compiler.DebugSourceRange | Czasoport Documentation",
    "keywords": "Struct Compiler.DebugSourceRange Namespace Ink public struct Compiler.DebugSourceRange Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields debugMetadata public DebugMetadata debugMetadata Field Value DebugMetadata length public int length Field Value int text public string text Field Value string"
  },
  "api/Ink.Compiler.Options.html": {
    "href": "api/Ink.Compiler.Options.html",
    "title": "Class Compiler.Options | Czasoport Documentation",
    "keywords": "Class Compiler.Options Namespace Ink public class Compiler.Options Inheritance object Compiler.Options Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields countAllVisits public bool countAllVisits Field Value bool errorHandler public ErrorHandler errorHandler Field Value ErrorHandler fileHandler public IFileHandler fileHandler Field Value IFileHandler pluginDirectories public List<string> pluginDirectories Field Value List<string> sourceFilename public string sourceFilename Field Value string"
  },
  "api/Ink.Compiler.html": {
    "href": "api/Ink.Compiler.html",
    "title": "Class Compiler | Czasoport Documentation",
    "keywords": "Class Compiler Namespace Ink public class Compiler Inheritance object Compiler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Compiler(string, Options) public Compiler(string inkSource, Compiler.Options options = null) Parameters inkSource string options Compiler.Options Properties parsedStory public Story parsedStory { get; } Property Value Story Methods Compile() public Story Compile() Returns Story HandleInput(CommandLineInput) public Compiler.CommandLineInputResult HandleInput(CommandLineInput inputResult) Parameters inputResult CommandLineInput Returns Compiler.CommandLineInputResult Parse() public Story Parse() Returns Story RetrieveDebugSourceForLatestContent() public void RetrieveDebugSourceForLatestContent()"
  },
  "api/Ink.DefaultFileHandler.html": {
    "href": "api/Ink.DefaultFileHandler.html",
    "title": "Class DefaultFileHandler | Czasoport Documentation",
    "keywords": "Class DefaultFileHandler Namespace Ink public class DefaultFileHandler : IFileHandler Inheritance object DefaultFileHandler Implements IFileHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LoadInkFileContents(string) public string LoadInkFileContents(string fullFilename) Parameters fullFilename string Returns string ResolveInkFilename(string) public string ResolveInkFilename(string includeName) Parameters includeName string Returns string"
  },
  "api/Ink.ErrorHandler.html": {
    "href": "api/Ink.ErrorHandler.html",
    "title": "Delegate ErrorHandler | Czasoport Documentation",
    "keywords": "Delegate ErrorHandler Namespace Ink Callback for errors throughout both the ink runtime and compiler. public delegate void ErrorHandler(string message, ErrorType type) Parameters message string Callback for errors throughout both the ink runtime and compiler. type ErrorType Callback for errors throughout both the ink runtime and compiler."
  },
  "api/Ink.ErrorType.html": {
    "href": "api/Ink.ErrorType.html",
    "title": "Enum ErrorType | Czasoport Documentation",
    "keywords": "Enum ErrorType Namespace Ink Author errors will only ever come from the compiler so don't need to be handled by your Story error handler. The \"Error\" ErrorType is by far the most common for a runtime story error (rather than compiler error), though the Warning type is also possible. public enum ErrorType Fields Author = 0 Error = 2 Warning = 1"
  },
  "api/Ink.IFileHandler.html": {
    "href": "api/Ink.IFileHandler.html",
    "title": "Interface IFileHandler | Czasoport Documentation",
    "keywords": "Interface IFileHandler Namespace Ink public interface IFileHandler Methods LoadInkFileContents(string) string LoadInkFileContents(string fullFilename) Parameters fullFilename string Returns string ResolveInkFilename(string) string ResolveInkFilename(string includeName) Parameters includeName string Returns string"
  },
  "api/Ink.IPlugin.html": {
    "href": "api/Ink.IPlugin.html",
    "title": "Interface IPlugin | Czasoport Documentation",
    "keywords": "Interface IPlugin Namespace Ink public interface IPlugin Methods PostExport(Story, ref Story) void PostExport(Story parsedStory, ref Story runtimeStory) Parameters parsedStory Story runtimeStory Story PostParse(ref Story) void PostParse(ref Story parsedStory) Parameters parsedStory Story PreParse(ref string) void PreParse(ref string storyContent) Parameters storyContent string"
  },
  "api/Ink.InkParser.CustomFlags.html": {
    "href": "api/Ink.InkParser.CustomFlags.html",
    "title": "Enum InkParser.CustomFlags | Czasoport Documentation",
    "keywords": "Enum InkParser.CustomFlags Namespace Ink protected enum InkParser.CustomFlags Fields ParsingString = 1 TagActive = 2"
  },
  "api/Ink.InkParser.FlowDecl.html": {
    "href": "api/Ink.InkParser.FlowDecl.html",
    "title": "Class InkParser.FlowDecl | Czasoport Documentation",
    "keywords": "Class InkParser.FlowDecl Namespace Ink protected class InkParser.FlowDecl Inheritance object InkParser.FlowDecl Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields arguments public List<FlowBase.Argument> arguments Field Value List<FlowBase.Argument> isFunction public bool isFunction Field Value bool name public Identifier name Field Value Identifier"
  },
  "api/Ink.InkParser.InfixOperator.html": {
    "href": "api/Ink.InkParser.InfixOperator.html",
    "title": "Class InkParser.InfixOperator | Czasoport Documentation",
    "keywords": "Class InkParser.InfixOperator Namespace Ink protected class InkParser.InfixOperator Inheritance object InkParser.InfixOperator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InfixOperator(string, int, bool) public InfixOperator(string type, int precedence, bool requireWhitespace) Parameters type string precedence int requireWhitespace bool Fields precedence public int precedence Field Value int requireWhitespace public bool requireWhitespace Field Value bool type public string type Field Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.InkParser.NameWithMetadata.html": {
    "href": "api/Ink.InkParser.NameWithMetadata.html",
    "title": "Class InkParser.NameWithMetadata | Czasoport Documentation",
    "keywords": "Class InkParser.NameWithMetadata Namespace Ink protected class InkParser.NameWithMetadata Inheritance object InkParser.NameWithMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields metadata public DebugMetadata metadata Field Value DebugMetadata name public string name Field Value string"
  },
  "api/Ink.InkParser.StatementLevel.html": {
    "href": "api/Ink.InkParser.StatementLevel.html",
    "title": "Enum InkParser.StatementLevel | Czasoport Documentation",
    "keywords": "Enum InkParser.StatementLevel Namespace Ink protected enum InkParser.StatementLevel Fields InnerBlock = 0 Knot = 2 Stitch = 1 Top = 3"
  },
  "api/Ink.InkParser.html": {
    "href": "api/Ink.InkParser.html",
    "title": "Class InkParser | Czasoport Documentation",
    "keywords": "Class InkParser Namespace Ink public class InkParser : StringParser Inheritance object StringParser InkParser Inherited Members StringParser.ParseSuccess StringParser.numbersCharacterSet StringParser.errorHandler StringParser.currentCharacter StringParser.state StringParser.hadError StringParser.BeginRule() StringParser.FailRule(int) StringParser.CancelRule(int) StringParser.SucceedRule(int, object) StringParser.Expect(StringParser.ParseRule, string, StringParser.ParseRule) StringParser.Error(string, bool) StringParser.ErrorWithParsedObject(string, Object, bool) StringParser.ErrorOnLine(string, int, bool) StringParser.Warning(string) StringParser.endOfInput StringParser.remainingString StringParser.LineRemainder() StringParser.remainingLength StringParser.inputString StringParser.lineIndex StringParser.characterInLineIndex StringParser.index StringParser.SetFlag(uint, bool) StringParser.GetFlag(uint) StringParser.ParseObject(StringParser.ParseRule) StringParser.Parse<T>(StringParser.SpecificParseRule<T>) StringParser.OneOf(params StringParser.ParseRule[]) StringParser.OneOrMore(StringParser.ParseRule) StringParser.Optional(StringParser.ParseRule) StringParser.Exclude(StringParser.ParseRule) StringParser.OptionalExclude(StringParser.ParseRule) StringParser.String(string) StringParser.Interleave<T>(StringParser.ParseRule, StringParser.ParseRule, StringParser.ParseRule, bool) StringParser.ParseString(string) StringParser.ParseSingleCharacter() StringParser.ParseUntilCharactersFromString(string, int) StringParser.ParseUntilCharactersFromCharSet(CharacterSet, int) StringParser.ParseCharactersFromString(string, int) StringParser.ParseCharactersFromString(string, bool, int) StringParser.ParseCharactersFromCharSet(CharacterSet, bool, int) StringParser.Peek(StringParser.ParseRule) StringParser.ParseUntil(StringParser.ParseRule, CharacterSet, CharacterSet) StringParser.ParseInt() StringParser.ParseFloat() StringParser.ParseNewline() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InkParser(string, string, ErrorHandler, IFileHandler) public InkParser(string str, string filenameForMetadata = null, ErrorHandler externalErrorHandler = null, IFileHandler fileHandler = null) Parameters str string filenameForMetadata string externalErrorHandler ErrorHandler fileHandler IFileHandler Fields Arabic public static readonly CharacterRange Arabic Field Value CharacterRange Armenian public static readonly CharacterRange Armenian Field Value CharacterRange Cyrillic public static readonly CharacterRange Cyrillic Field Value CharacterRange Greek public static readonly CharacterRange Greek Field Value CharacterRange Hebrew public static readonly CharacterRange Hebrew Field Value CharacterRange Korean public static readonly CharacterRange Korean Field Value CharacterRange Latin1Supplement public static readonly CharacterRange Latin1Supplement Field Value CharacterRange LatinBasic public static readonly CharacterRange LatinBasic Field Value CharacterRange LatinExtendedA public static readonly CharacterRange LatinExtendedA Field Value CharacterRange LatinExtendedB public static readonly CharacterRange LatinExtendedB Field Value CharacterRange Properties parsingStringExpression protected bool parsingStringExpression { get; set; } Property Value bool tagActive protected bool tagActive { get; set; } Property Value bool Methods AnyWhitespace() protected object AnyWhitespace() Returns object AuthorWarning() protected AuthorWarning AuthorWarning() Returns AuthorWarning BracketedKnotDeclArguments() protected List<FlowBase.Argument> BracketedKnotDeclArguments() Returns List<FlowBase.Argument> BracketedName() protected Identifier BracketedName() Returns Identifier Choice() protected Choice Choice() Returns Choice ChoiceCondition() protected Expression ChoiceCondition() Returns Expression ChoiceConditionsSpace() protected object ChoiceConditionsSpace() Returns object ChoiceSingleCondition() protected Expression ChoiceSingleCondition() Returns Expression CommandLineUserInput() public CommandLineInput CommandLineUserInput() Returns CommandLineInput ConditionExpression() protected Expression ConditionExpression() Returns Expression ConstDeclaration() protected Object ConstDeclaration() Returns Object ContentText() protected Text ContentText() Returns Text ContentTextAllowingEcapeChar() protected Text ContentTextAllowingEcapeChar() Returns Text ContentTextNoEscape() protected string ContentTextNoEscape() Returns string CreateDebugMetadata(Element, Element) protected DebugMetadata CreateDebugMetadata(StringParserState.Element stateAtStart, StringParserState.Element stateAtEnd) Parameters stateAtStart StringParserState.Element stateAtEnd StringParserState.Element Returns DebugMetadata DisallowIncrement(Object) protected void DisallowIncrement(Object expr) Parameters expr Object DivertIdentifierWithArguments() protected Divert DivertIdentifierWithArguments() Returns Divert ElseExpression() protected object ElseExpression() Returns object EndOfFile() protected object EndOfFile() Returns object EndOfLine() protected object EndOfLine() Returns object EndTagIfNecessary(ContentList) protected void EndTagIfNecessary(ContentList outputContentList) Parameters outputContentList ContentList EndTagIfNecessary(List<Object>) protected void EndTagIfNecessary(List<Object> outputContentList) Parameters outputContentList List<Object> Expression() protected Expression Expression() Returns Expression Expression(int) protected Expression Expression(int minimumPrecedence) Parameters minimumPrecedence int Returns Expression ExpressionBool() protected Number ExpressionBool() Returns Number ExpressionDivertTarget() protected Expression ExpressionDivertTarget() Returns Expression ExpressionFloat() protected Number ExpressionFloat() Returns Number ExpressionFunctionCall() protected Expression ExpressionFunctionCall() Returns Expression ExpressionFunctionCallArguments() protected List<Expression> ExpressionFunctionCallArguments() Returns List<Expression> ExpressionInfixRight(Expression, InfixOperator) protected Expression ExpressionInfixRight(Expression left, InkParser.InfixOperator op) Parameters left Expression op InkParser.InfixOperator Returns Expression ExpressionInt() protected Number ExpressionInt() Returns Number ExpressionList() protected List ExpressionList() Returns List ExpressionLiteral() protected Expression ExpressionLiteral() Returns Expression ExpressionNot() protected string ExpressionNot() Returns string ExpressionParen() protected Expression ExpressionParen() Returns Expression ExpressionString() protected StringExpression ExpressionString() Returns StringExpression ExpressionUnary() protected Expression ExpressionUnary() Returns Expression ExpressionVariableName() protected Expression ExpressionVariableName() Returns Expression ExternalDeclaration() protected ExternalDeclaration ExternalDeclaration() Returns ExternalDeclaration FlowDeclArgument() protected FlowBase.Argument FlowDeclArgument() Returns FlowBase.Argument Gather() protected Gather Gather() Returns Gather GatherDashes() protected object GatherDashes() Returns object Glue() protected Glue Glue() Returns Glue Identifier() protected string Identifier() Returns string IdentifierWithMetadata() protected Identifier IdentifierWithMetadata() Returns Identifier IncludeStatement() protected object IncludeStatement() Returns object InlineConditionalBranches() protected List<ConditionalSingleBranch> InlineConditionalBranches() Returns List<ConditionalSingleBranch> InlineLogic() protected Object InlineLogic() Returns Object InlineLogicOrGlueOrStartTag() protected Object InlineLogicOrGlueOrStartTag() Returns Object InnerConditionalContent() protected Conditional InnerConditionalContent() Returns Conditional InnerConditionalContent(Expression) protected Conditional InnerConditionalContent(Expression initialQueryExpression) Parameters initialQueryExpression Expression Returns Conditional InnerExpression() protected Object InnerExpression() Returns Object InnerInlineSequenceObjects() protected List<ContentList> InnerInlineSequenceObjects() Returns List<ContentList> InnerLogic() protected Object InnerLogic() Returns Object InnerMultilineSequenceObjects() protected List<ContentList> InnerMultilineSequenceObjects() Returns List<ContentList> InnerSequence() protected Sequence InnerSequence() Returns Sequence InnerSequenceObjects() protected List<ContentList> InnerSequenceObjects() Returns List<ContentList> KnotDeclaration() protected InkParser.FlowDecl KnotDeclaration() Returns InkParser.FlowDecl KnotDefinition() protected Knot KnotDefinition() Returns Knot KnotStitchNoContentRecoveryRule() protected object KnotStitchNoContentRecoveryRule() Returns object KnotTitleEquals() protected string KnotTitleEquals() Returns string Line(ParseRule) protected StringParser.ParseRule Line(StringParser.ParseRule inlineRule) Parameters inlineRule StringParser.ParseRule Returns StringParser.ParseRule LineOfMixedTextAndLogic() protected List<Object> LineOfMixedTextAndLogic() Returns List<Object> ListAllCharacterRanges() Gets an array of CharacterRange representing all of the currently supported non-ASCII character ranges that can be used in identifier names. public static CharacterRange[] ListAllCharacterRanges() Returns CharacterRange[] An array of CharacterRange representing all of the currently supported non-ASCII character ranges that can be used in identifier names. ListDeclaration() protected VariableAssignment ListDeclaration() Returns VariableAssignment ListDefinition() protected ListDefinition ListDefinition() Returns ListDefinition ListElementDefinition() protected ListElementDefinition ListElementDefinition() Returns ListElementDefinition ListElementDefinitionSeparator() protected string ListElementDefinitionSeparator() Returns string ListMember() protected Identifier ListMember() Returns Identifier LogicLine() protected Object LogicLine() Returns Object MixedTextAndLogic() protected List<Object> MixedTextAndLogic() Returns List<Object> MultiDivert() protected List<Object> MultiDivert() Returns List<Object> MultiSpaced(ParseRule) protected StringParser.ParseRule MultiSpaced(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns StringParser.ParseRule MultilineConditionalBranches() protected List<ConditionalSingleBranch> MultilineConditionalBranches() Returns List<ConditionalSingleBranch> MultilineWhitespace() protected object MultilineWhitespace() Returns object Newline() protected object Newline() Returns object Parse() public Story Parse() Returns Story ParseDashNotArrow() protected object ParseDashNotArrow() Returns object ParseDivertArrow() protected string ParseDivertArrow() Returns string ParseDivertArrowOrTunnelOnwards() protected string ParseDivertArrowOrTunnelOnwards() Returns string ParseTempKeyword() protected bool ParseTempKeyword() Returns bool ParseThreadArrow() protected string ParseThreadArrow() Returns string PreProcessInputString(string) protected override string PreProcessInputString(string str) Parameters str string Returns string ReturnStatement() protected Return ReturnStatement() Returns Return RuleDidSucceed(object, Element, Element) protected override void RuleDidSucceed(object result, StringParserState.Element stateAtStart, StringParserState.Element stateAtEnd) Parameters result object stateAtStart StringParserState.Element stateAtEnd StringParserState.Element SeparatedList<T>(SpecificParseRule<T>, ParseRule) protected List<T> SeparatedList<T>(StringParser.SpecificParseRule<T> mainRule, StringParser.ParseRule separatorRule) where T : class Parameters mainRule StringParser.SpecificParseRule<T> separatorRule StringParser.ParseRule Returns List<T> Type Parameters T SequenceTypeAnnotation() protected object SequenceTypeAnnotation() Returns object SequenceTypeSingleWord() protected object SequenceTypeSingleWord() Returns object SequenceTypeSymbolAnnotation() protected object SequenceTypeSymbolAnnotation() Returns object SequenceTypeWordAnnotation() protected object SequenceTypeWordAnnotation() Returns object SingleDivert() protected Divert SingleDivert() Returns Divert SingleMultilineCondition() protected ConditionalSingleBranch SingleMultilineCondition() Returns ConditionalSingleBranch SingleMultilineSequenceElement() protected ContentList SingleMultilineSequenceElement() Returns ContentList SkipToNextLine() protected object SkipToNextLine() Returns object Spaced(ParseRule) protected StringParser.ParseRule Spaced(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns StringParser.ParseRule StartTag() protected Object StartTag() Returns Object StartThread() protected Divert StartThread() Returns Divert StatementAtLevel(StatementLevel) protected object StatementAtLevel(InkParser.StatementLevel level) Parameters level InkParser.StatementLevel Returns object StatementsAtLevel(StatementLevel) protected List<Object> StatementsAtLevel(InkParser.StatementLevel level) Parameters level InkParser.StatementLevel Returns List<Object> StatementsBreakForLevel(StatementLevel) protected object StatementsBreakForLevel(InkParser.StatementLevel level) Parameters level InkParser.StatementLevel Returns object StitchDeclaration() protected InkParser.FlowDecl StitchDeclaration() Returns InkParser.FlowDecl StitchDefinition() protected object StitchDefinition() Returns object TempDeclarationOrAssignment() protected Object TempDeclarationOrAssignment() Returns Object VariableDeclaration() protected Object VariableDeclaration() Returns Object Whitespace() protected object Whitespace() Returns object"
  },
  "api/Ink.InkStringConversionExtensions.html": {
    "href": "api/Ink.InkStringConversionExtensions.html",
    "title": "Class InkStringConversionExtensions | Czasoport Documentation",
    "keywords": "Class InkStringConversionExtensions Namespace Ink public static class InkStringConversionExtensions Inheritance object InkStringConversionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToStringsArray<T>(List<T>) public static string[] ToStringsArray<T>(this List<T> list) Parameters list List<T> Returns string[] Type Parameters T"
  },
  "api/Ink.Parsed.AuthorWarning.html": {
    "href": "api/Ink.Parsed.AuthorWarning.html",
    "title": "Class AuthorWarning | Czasoport Documentation",
    "keywords": "Class AuthorWarning Namespace Ink.Parsed public class AuthorWarning : Object Inheritance object Object AuthorWarning Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthorWarning(string) public AuthorWarning(string message) Parameters message string Fields warningMessage public string warningMessage Field Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object"
  },
  "api/Ink.Parsed.BinaryExpression.html": {
    "href": "api/Ink.Parsed.BinaryExpression.html",
    "title": "Class BinaryExpression | Czasoport Documentation",
    "keywords": "Class BinaryExpression Namespace Ink.Parsed public class BinaryExpression : Expression Inheritance object Object Expression BinaryExpression Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BinaryExpression(Expression, Expression, string) public BinaryExpression(Expression left, Expression right, string opName) Parameters left Expression right Expression opName string Fields leftExpression public Expression leftExpression Field Value Expression opName public string opName Field Value string rightExpression public Expression rightExpression Field Value Expression Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Choice.html": {
    "href": "api/Ink.Parsed.Choice.html",
    "title": "Class Choice | Czasoport Documentation",
    "keywords": "Class Choice Namespace Ink.Parsed public class Choice : Object, IWeavePoint, INamedContent Inheritance object Object Choice Implements IWeavePoint INamedContent Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Choice(ContentList, ContentList, ContentList) public Choice(ContentList startContent, ContentList choiceOnlyContent, ContentList innerContent) Parameters startContent ContentList choiceOnlyContent ContentList innerContent ContentList Properties choiceOnlyContent public ContentList choiceOnlyContent { get; protected set; } Property Value ContentList condition public Expression condition { get; set; } Property Value Expression containerForCounting public override Container containerForCounting { get; } Property Value Container hasWeaveStyleInlineBrackets public bool hasWeaveStyleInlineBrackets { get; set; } Property Value bool identifier public Identifier identifier { get; set; } Property Value Identifier indentationDepth public int indentationDepth { get; set; } Property Value int innerContent public ContentList innerContent { get; protected set; } Property Value ContentList innerContentContainer public Container innerContentContainer { get; } Property Value Container isInvisibleDefault public bool isInvisibleDefault { get; set; } Property Value bool name public string name { get; } Property Value string onceOnly public bool onceOnly { get; set; } Property Value bool runtimeContainer public Container runtimeContainer { get; } Property Value Container runtimePath public override Path runtimePath { get; } Property Value Path startContent public ContentList startContent { get; protected set; } Property Value ContentList Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Conditional.html": {
    "href": "api/Ink.Parsed.Conditional.html",
    "title": "Class Conditional | Czasoport Documentation",
    "keywords": "Class Conditional Namespace Ink.Parsed public class Conditional : Object Inheritance object Object Conditional Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Conditional(Expression, List<ConditionalSingleBranch>) public Conditional(Expression condition, List<ConditionalSingleBranch> branches) Parameters condition Expression branches List<ConditionalSingleBranch> Properties branches public List<ConditionalSingleBranch> branches { get; } Property Value List<ConditionalSingleBranch> initialCondition public Expression initialCondition { get; } Property Value Expression Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.ConditionalSingleBranch.html": {
    "href": "api/Ink.Parsed.ConditionalSingleBranch.html",
    "title": "Class ConditionalSingleBranch | Czasoport Documentation",
    "keywords": "Class ConditionalSingleBranch Namespace Ink.Parsed public class ConditionalSingleBranch : Object Inheritance object Object ConditionalSingleBranch Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConditionalSingleBranch(List<Object>) public ConditionalSingleBranch(List<Object> content) Parameters content List<Object> Properties isElse public bool isElse { get; set; } Property Value bool isInline public bool isInline { get; set; } Property Value bool isTrueBranch public bool isTrueBranch { get; set; } Property Value bool matchingEquality public bool matchingEquality { get; set; } Property Value bool ownExpression public Expression ownExpression { get; set; } Property Value Expression returnDivert public Divert returnDivert { get; protected set; } Property Value Divert Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.ConstantDeclaration.html": {
    "href": "api/Ink.Parsed.ConstantDeclaration.html",
    "title": "Class ConstantDeclaration | Czasoport Documentation",
    "keywords": "Class ConstantDeclaration Namespace Ink.Parsed public class ConstantDeclaration : Object Inheritance object Object ConstantDeclaration Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConstantDeclaration(Identifier, Expression) public ConstantDeclaration(Identifier name, Expression assignedExpression) Parameters name Identifier assignedExpression Expression Properties constantIdentifier public Identifier constantIdentifier { get; protected set; } Property Value Identifier constantName public string constantName { get; } Property Value string expression public Expression expression { get; protected set; } Property Value Expression typeName public override string typeName { get; } Property Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.ContentList.html": {
    "href": "api/Ink.Parsed.ContentList.html",
    "title": "Class ContentList | Czasoport Documentation",
    "keywords": "Class ContentList Namespace Ink.Parsed public class ContentList : Object Inheritance object Object ContentList Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ContentList() public ContentList() ContentList(params Object[]) public ContentList(params Object[] objects) Parameters objects Object[] ContentList(List<Object>) public ContentList(List<Object> objects) Parameters objects List<Object> Properties dontFlatten public bool dontFlatten { get; set; } Property Value bool runtimeContainer public Container runtimeContainer { get; } Property Value Container Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. TrimTrailingWhitespace() public void TrimTrailingWhitespace()"
  },
  "api/Ink.Parsed.Divert.html": {
    "href": "api/Ink.Parsed.Divert.html",
    "title": "Class Divert | Czasoport Documentation",
    "keywords": "Class Divert Namespace Ink.Parsed public class Divert : Object Inheritance object Object Divert Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Divert(Object) public Divert(Object targetContent) Parameters targetContent Object Divert(Path, List<Expression>) public Divert(Path target, List<Expression> arguments = null) Parameters target Path arguments List<Expression> Properties arguments public List<Expression> arguments { get; protected set; } Property Value List<Expression> isDone public bool isDone { get; } Property Value bool isEmpty public bool isEmpty { get; set; } Property Value bool isEnd public bool isEnd { get; } Property Value bool isFunctionCall public bool isFunctionCall { get; set; } Property Value bool isThread public bool isThread { get; set; } Property Value bool isTunnel public bool isTunnel { get; set; } Property Value bool runtimeDivert public Divert runtimeDivert { get; protected set; } Property Value Divert target public Path target { get; protected set; } Property Value Path targetContent public Object targetContent { get; protected set; } Property Value Object Methods Error(string, Object, bool) public override void Error(string message, Object source = null, bool isWarning = false) Parameters message string source Object isWarning bool GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object PathAsVariableName() public string PathAsVariableName() Returns string ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.DivertTarget.html": {
    "href": "api/Ink.Parsed.DivertTarget.html",
    "title": "Class DivertTarget | Czasoport Documentation",
    "keywords": "Class DivertTarget Namespace Ink.Parsed public class DivertTarget : Expression Inheritance object Object Expression DivertTarget Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DivertTarget(Divert) public DivertTarget(Divert divert) Parameters divert Divert Fields divert public Divert divert Field Value Divert Methods Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.Expression.html": {
    "href": "api/Ink.Parsed.Expression.html",
    "title": "Class Expression | Czasoport Documentation",
    "keywords": "Class Expression Namespace Ink.Parsed public abstract class Expression : Object Inheritance object Object Expression Derived BinaryExpression DivertTarget FunctionCall IncDecExpression List MultipleConditionExpression Number StringExpression UnaryExpression VariableReference Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties outputWhenComplete public bool outputWhenComplete { get; set; } Property Value bool Methods GenerateConstantIntoContainer(Container) public void GenerateConstantIntoContainer(Container container) Parameters container Container GenerateIntoContainer(Container) public abstract void GenerateIntoContainer(Container container) Parameters container Container GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object"
  },
  "api/Ink.Parsed.ExternalDeclaration.html": {
    "href": "api/Ink.Parsed.ExternalDeclaration.html",
    "title": "Class ExternalDeclaration | Czasoport Documentation",
    "keywords": "Class ExternalDeclaration Namespace Ink.Parsed public class ExternalDeclaration : Object, INamedContent Inheritance object Object ExternalDeclaration Implements INamedContent Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ExternalDeclaration(Identifier, List<string>) public ExternalDeclaration(Identifier identifier, List<string> argumentNames) Parameters identifier Identifier argumentNames List<string> Properties argumentNames public List<string> argumentNames { get; set; } Property Value List<string> identifier public Identifier identifier { get; set; } Property Value Identifier name public string name { get; } Property Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object"
  },
  "api/Ink.Parsed.FlowBase.Argument.html": {
    "href": "api/Ink.Parsed.FlowBase.Argument.html",
    "title": "Class FlowBase.Argument | Czasoport Documentation",
    "keywords": "Class FlowBase.Argument Namespace Ink.Parsed public class FlowBase.Argument Inheritance object FlowBase.Argument Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields identifier public Identifier identifier Field Value Identifier isByReference public bool isByReference Field Value bool isDivertTarget public bool isDivertTarget Field Value bool"
  },
  "api/Ink.Parsed.FlowBase.VariableResolveResult.html": {
    "href": "api/Ink.Parsed.FlowBase.VariableResolveResult.html",
    "title": "Struct FlowBase.VariableResolveResult | Czasoport Documentation",
    "keywords": "Struct FlowBase.VariableResolveResult Namespace Ink.Parsed public struct FlowBase.VariableResolveResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields found public bool found Field Value bool isArgument public bool isArgument Field Value bool isGlobal public bool isGlobal Field Value bool isTemporary public bool isTemporary Field Value bool ownerFlow public FlowBase ownerFlow Field Value FlowBase"
  },
  "api/Ink.Parsed.FlowBase.html": {
    "href": "api/Ink.Parsed.FlowBase.html",
    "title": "Class FlowBase | Czasoport Documentation",
    "keywords": "Class FlowBase Namespace Ink.Parsed public abstract class FlowBase : Object, INamedContent Inheritance object Object FlowBase Implements INamedContent Derived Knot Stitch Story Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FlowBase(Identifier, List<Object>, List<Argument>, bool, bool) public FlowBase(Identifier name = null, List<Object> topLevelObjects = null, List<FlowBase.Argument> arguments = null, bool isFunction = false, bool isIncludedStory = false) Parameters name Identifier topLevelObjects List<Object> arguments List<FlowBase.Argument> isFunction bool isIncludedStory bool Fields variableDeclarations public Dictionary<string, VariableAssignment> variableDeclarations Field Value Dictionary<string, VariableAssignment> Properties arguments public List<FlowBase.Argument> arguments { get; protected set; } Property Value List<FlowBase.Argument> flowLevel public abstract FlowLevel flowLevel { get; } Property Value FlowLevel hasParameters public bool hasParameters { get; } Property Value bool identifier public Identifier identifier { get; set; } Property Value Identifier isFunction public bool isFunction { get; protected set; } Property Value bool name public string name { get; } Property Value string subFlowsByName protected Dictionary<string, FlowBase> subFlowsByName { get; } Property Value Dictionary<string, FlowBase> typeName public override string typeName { get; } Property Value string Methods ContentWithNameAtLevel(string, FlowLevel?, bool) public Object ContentWithNameAtLevel(string name, FlowLevel? level = null, bool deepSearch = false) Parameters name string level FlowLevel? deepSearch bool Returns Object GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object PreProcessTopLevelObjects(List<Object>) protected virtual void PreProcessTopLevelObjects(List<Object> topLevelObjects) Parameters topLevelObjects List<Object> ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ResolveVariableWithName(string, Object) public FlowBase.VariableResolveResult ResolveVariableWithName(string varName, Object fromNode) Parameters varName string fromNode Object Returns FlowBase.VariableResolveResult ResolveWeavePointNaming() public void ResolveWeavePointNaming() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. TryAddNewVariableDeclaration(VariableAssignment) public void TryAddNewVariableDeclaration(VariableAssignment varDecl) Parameters varDecl VariableAssignment"
  },
  "api/Ink.Parsed.FlowLevel.html": {
    "href": "api/Ink.Parsed.FlowLevel.html",
    "title": "Enum FlowLevel | Czasoport Documentation",
    "keywords": "Enum FlowLevel Namespace Ink.Parsed public enum FlowLevel Fields Knot = 1 Stitch = 2 Story = 0 WeavePoint = 3"
  },
  "api/Ink.Parsed.FunctionCall.html": {
    "href": "api/Ink.Parsed.FunctionCall.html",
    "title": "Class FunctionCall | Czasoport Documentation",
    "keywords": "Class FunctionCall Namespace Ink.Parsed public class FunctionCall : Expression Inheritance object Object Expression FunctionCall Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FunctionCall(Identifier, List<Expression>) public FunctionCall(Identifier functionName, List<Expression> arguments) Parameters functionName Identifier arguments List<Expression> Fields shouldPopReturnedValue public bool shouldPopReturnedValue Field Value bool Properties arguments public List<Expression> arguments { get; } Property Value List<Expression> isChoiceCount public bool isChoiceCount { get; } Property Value bool isListRandom public bool isListRandom { get; } Property Value bool isListRange public bool isListRange { get; } Property Value bool isRandom public bool isRandom { get; } Property Value bool isReadCount public bool isReadCount { get; } Property Value bool isSeedRandom public bool isSeedRandom { get; } Property Value bool isTurns public bool isTurns { get; } Property Value bool isTurnsSince public bool isTurnsSince { get; } Property Value bool name public string name { get; } Property Value string proxyDivert public Divert proxyDivert { get; } Property Value Divert runtimeDivert public Divert runtimeDivert { get; } Property Value Divert Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container IsBuiltIn(string) public static bool IsBuiltIn(string name) Parameters name string Returns bool ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Gather.html": {
    "href": "api/Ink.Parsed.Gather.html",
    "title": "Class Gather | Czasoport Documentation",
    "keywords": "Class Gather Namespace Ink.Parsed public class Gather : Object, IWeavePoint, INamedContent Inheritance object Object Gather Implements IWeavePoint INamedContent Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Gather(Identifier, int) public Gather(Identifier identifier, int indentationDepth) Parameters identifier Identifier indentationDepth int Properties identifier public Identifier identifier { get; set; } Property Value Identifier indentationDepth public int indentationDepth { get; protected set; } Property Value int name public string name { get; } Property Value string runtimeContainer public Container runtimeContainer { get; } Property Value Container Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.Glue.html": {
    "href": "api/Ink.Parsed.Glue.html",
    "title": "Class Glue | Czasoport Documentation",
    "keywords": "Class Glue Namespace Ink.Parsed public class Glue : Wrap<Glue> Inheritance object Object Wrap<Glue> Glue Inherited Members Wrap<Glue>.GenerateRuntimeObject() Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Glue(Glue) public Glue(Glue glue) Parameters glue Glue"
  },
  "api/Ink.Parsed.INamedContent.html": {
    "href": "api/Ink.Parsed.INamedContent.html",
    "title": "Interface INamedContent | Czasoport Documentation",
    "keywords": "Interface INamedContent Namespace Ink.Parsed public interface INamedContent Properties name string name { get; } Property Value string"
  },
  "api/Ink.Parsed.IWeavePoint.html": {
    "href": "api/Ink.Parsed.IWeavePoint.html",
    "title": "Interface IWeavePoint | Czasoport Documentation",
    "keywords": "Interface IWeavePoint Namespace Ink.Parsed public interface IWeavePoint Properties content List<Object> content { get; } Property Value List<Object> identifier Identifier identifier { get; } Property Value Identifier indentationDepth int indentationDepth { get; } Property Value int name string name { get; } Property Value string runtimeContainer Container runtimeContainer { get; } Property Value Container"
  },
  "api/Ink.Parsed.Identifier.html": {
    "href": "api/Ink.Parsed.Identifier.html",
    "title": "Class Identifier | Czasoport Documentation",
    "keywords": "Class Identifier Namespace Ink.Parsed public class Identifier Inheritance object Identifier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields Done public static Identifier Done Field Value Identifier debugMetadata public DebugMetadata debugMetadata Field Value DebugMetadata name public string name Field Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.IncDecExpression.html": {
    "href": "api/Ink.Parsed.IncDecExpression.html",
    "title": "Class IncDecExpression | Czasoport Documentation",
    "keywords": "Class IncDecExpression Namespace Ink.Parsed public class IncDecExpression : Expression Inheritance object Object Expression IncDecExpression Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IncDecExpression(Identifier, Expression, bool) public IncDecExpression(Identifier varIdentifier, Expression expression, bool isInc) Parameters varIdentifier Identifier expression Expression isInc bool IncDecExpression(Identifier, bool) public IncDecExpression(Identifier varIdentifier, bool isInc) Parameters varIdentifier Identifier isInc bool Fields expression public Expression expression Field Value Expression isInc public bool isInc Field Value bool varIdentifier public Identifier varIdentifier Field Value Identifier Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.IncludedFile.html": {
    "href": "api/Ink.Parsed.IncludedFile.html",
    "title": "Class IncludedFile | Czasoport Documentation",
    "keywords": "Class IncludedFile Namespace Ink.Parsed public class IncludedFile : Object Inheritance object Object IncludedFile Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IncludedFile(Story) public IncludedFile(Story includedStory) Parameters includedStory Story Properties includedStory public Story includedStory { get; } Property Value Story Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object"
  },
  "api/Ink.Parsed.Knot.html": {
    "href": "api/Ink.Parsed.Knot.html",
    "title": "Class Knot | Czasoport Documentation",
    "keywords": "Class Knot Namespace Ink.Parsed public class Knot : FlowBase, INamedContent Inheritance object Object FlowBase Knot Implements INamedContent Inherited Members FlowBase.name FlowBase.identifier FlowBase.arguments FlowBase.hasParameters FlowBase.variableDeclarations FlowBase.isFunction FlowBase.PreProcessTopLevelObjects(List<Object>) FlowBase.ResolveVariableWithName(string, Object) FlowBase.TryAddNewVariableDeclaration(VariableAssignment) FlowBase.ResolveWeavePointNaming() FlowBase.GenerateRuntimeObject() FlowBase.ContentWithNameAtLevel(string, FlowLevel?, bool) FlowBase.subFlowsByName FlowBase.typeName FlowBase.ToString() Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Knot(Identifier, List<Object>, List<Argument>, bool) public Knot(Identifier name, List<Object> topLevelObjects, List<FlowBase.Argument> arguments, bool isFunction) Parameters name Identifier topLevelObjects List<Object> arguments List<FlowBase.Argument> isFunction bool Properties flowLevel public override FlowLevel flowLevel { get; } Property Value FlowLevel Methods ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.LegacyTag.html": {
    "href": "api/Ink.Parsed.LegacyTag.html",
    "title": "Class LegacyTag | Czasoport Documentation",
    "keywords": "Class LegacyTag Namespace Ink.Parsed public class LegacyTag : Wrap<Tag> Inheritance object Object Wrap<Tag> LegacyTag Inherited Members Wrap<Tag>.GenerateRuntimeObject() Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LegacyTag(Tag) public LegacyTag(Tag tag) Parameters tag Tag"
  },
  "api/Ink.Parsed.List.html": {
    "href": "api/Ink.Parsed.List.html",
    "title": "Class List | Czasoport Documentation",
    "keywords": "Class List Namespace Ink.Parsed public class List : Expression Inheritance object Object Expression List Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors List(List<Identifier>) public List(List<Identifier> itemIdentifierList) Parameters itemIdentifierList List<Identifier> Fields itemIdentifierList public List<Identifier> itemIdentifierList Field Value List<Identifier> Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container"
  },
  "api/Ink.Parsed.ListDefinition.html": {
    "href": "api/Ink.Parsed.ListDefinition.html",
    "title": "Class ListDefinition | Czasoport Documentation",
    "keywords": "Class ListDefinition Namespace Ink.Parsed public class ListDefinition : Object Inheritance object Object ListDefinition Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ListDefinition(List<ListElementDefinition>) public ListDefinition(List<ListElementDefinition> elements) Parameters elements List<ListElementDefinition> Fields identifier public Identifier identifier Field Value Identifier itemDefinitions public List<ListElementDefinition> itemDefinitions Field Value List<ListElementDefinition> variableAssignment public VariableAssignment variableAssignment Field Value VariableAssignment Properties runtimeListDefinition public ListDefinition runtimeListDefinition { get; } Property Value ListDefinition typeName public override string typeName { get; } Property Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ItemNamed(string) public ListElementDefinition ItemNamed(string itemName) Parameters itemName string Returns ListElementDefinition ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.ListElementDefinition.html": {
    "href": "api/Ink.Parsed.ListElementDefinition.html",
    "title": "Class ListElementDefinition | Czasoport Documentation",
    "keywords": "Class ListElementDefinition Namespace Ink.Parsed public class ListElementDefinition : Object Inheritance object Object ListElementDefinition Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ListElementDefinition(Identifier, bool, int?) public ListElementDefinition(Identifier identifier, bool inInitialList, int? explicitValue = null) Parameters identifier Identifier inInitialList bool explicitValue int? Fields explicitValue public int? explicitValue Field Value int? identifier public Identifier identifier Field Value Identifier inInitialList public bool inInitialList Field Value bool seriesValue public int seriesValue Field Value int Properties fullName public string fullName { get; } Property Value string name public string name { get; } Property Value string typeName public override string typeName { get; } Property Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.MultipleConditionExpression.html": {
    "href": "api/Ink.Parsed.MultipleConditionExpression.html",
    "title": "Class MultipleConditionExpression | Czasoport Documentation",
    "keywords": "Class MultipleConditionExpression Namespace Ink.Parsed public class MultipleConditionExpression : Expression Inheritance object Object Expression MultipleConditionExpression Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MultipleConditionExpression(List<Expression>) public MultipleConditionExpression(List<Expression> conditionExpressions) Parameters conditionExpressions List<Expression> Properties subExpressions public List<Expression> subExpressions { get; } Property Value List<Expression> Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container"
  },
  "api/Ink.Parsed.Number.html": {
    "href": "api/Ink.Parsed.Number.html",
    "title": "Class Number | Czasoport Documentation",
    "keywords": "Class Number Namespace Ink.Parsed public class Number : Expression Inheritance object Object Expression Number Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Number(object) public Number(object value) Parameters value object Fields value public object value Field Value object Methods Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Object.FindQueryFunc-1.html": {
    "href": "api/Ink.Parsed.Object.FindQueryFunc-1.html",
    "title": "Delegate Object.FindQueryFunc<T> | Czasoport Documentation",
    "keywords": "Delegate Object.FindQueryFunc<T> Namespace Ink.Parsed public delegate bool Object.FindQueryFunc<T>(T obj) Parameters obj T Returns bool Type Parameters T"
  },
  "api/Ink.Parsed.Object.html": {
    "href": "api/Ink.Parsed.Object.html",
    "title": "Class Object | Czasoport Documentation",
    "keywords": "Class Object Namespace Ink.Parsed public abstract class Object Inheritance object Object Derived AuthorWarning Choice Conditional ConditionalSingleBranch ConstantDeclaration ContentList Divert Expression ExternalDeclaration FlowBase Gather IncludedFile ListDefinition ListElementDefinition Return Sequence Tag Text TunnelOnwards VariableAssignment Weave Wrap<T> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ancestry public List<Object> ancestry { get; } Property Value List<Object> containerForCounting public virtual Container containerForCounting { get; } Property Value Container content public List<Object> content { get; protected set; } Property Value List<Object> debugMetadata public DebugMetadata debugMetadata { get; set; } Property Value DebugMetadata descriptionOfScope public string descriptionOfScope { get; } Property Value string hasOwnDebugMetadata public bool hasOwnDebugMetadata { get; } Property Value bool parent public Object parent { get; set; } Property Value Object runtimeObject public Object runtimeObject { get; set; } Property Value Object runtimePath public virtual Path runtimePath { get; } Property Value Path story public Story story { get; } Property Value Story typeName public virtual string typeName { get; } Property Value string Methods AddContent<T>(List<T>) public void AddContent<T>(List<T> listContent) where T : Object Parameters listContent List<T> Type Parameters T AddContent<T>(T) public T AddContent<T>(T subContent) where T : Object Parameters subContent T Returns T Type Parameters T ClosestFlowBase() public FlowBase ClosestFlowBase() Returns FlowBase Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. Error(string, Object, bool) public virtual void Error(string message, Object source = null, bool isWarning = false) Parameters message string source Object isWarning bool FindAll<T>(FindQueryFunc<T>) public List<T> FindAll<T>(Object.FindQueryFunc<T> queryFunc = null) where T : class Parameters queryFunc Object.FindQueryFunc<T> Returns List<T> Type Parameters T Find<T>(FindQueryFunc<T>) public T Find<T>(Object.FindQueryFunc<T> queryFunc = null) where T : class Parameters queryFunc Object.FindQueryFunc<T> Returns T Type Parameters T GenerateRuntimeObject() public abstract Object GenerateRuntimeObject() Returns Object GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. InsertContent<T>(int, T) public T InsertContent<T>(int index, T subContent) where T : Object Parameters index int subContent T Returns T Type Parameters T PathRelativeTo(Object) public Path PathRelativeTo(Object otherObj) Parameters otherObj Object Returns Path ResolveReferences(Story) public virtual void ResolveReferences(Story context) Parameters context Story Warning(string, Object) public void Warning(string message, Object source = null) Parameters message string source Object Operators operator ==(Object, Object) public static bool operator ==(Object a, Object b) Parameters a Object b Object Returns bool implicit operator bool(Object) public static implicit operator bool(Object obj) Parameters obj Object Returns bool operator !=(Object, Object) public static bool operator !=(Object a, Object b) Parameters a Object b Object Returns bool"
  },
  "api/Ink.Parsed.Path.html": {
    "href": "api/Ink.Parsed.Path.html",
    "title": "Class Path | Czasoport Documentation",
    "keywords": "Class Path Namespace Ink.Parsed public class Path Inheritance object Path Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Path(FlowLevel, List<Identifier>) public Path(FlowLevel baseFlowLevel, List<Identifier> components) Parameters baseFlowLevel FlowLevel components List<Identifier> Path(Identifier) public Path(Identifier ambiguousName) Parameters ambiguousName Identifier Path(List<Identifier>) public Path(List<Identifier> components) Parameters components List<Identifier> Properties baseLevelIsAmbiguous public bool baseLevelIsAmbiguous { get; } Property Value bool baseTargetLevel public FlowLevel baseTargetLevel { get; } Property Value FlowLevel components public List<Identifier> components { get; } Property Value List<Identifier> dotSeparatedComponents public string dotSeparatedComponents { get; } Property Value string firstComponent public string firstComponent { get; } Property Value string numberOfComponents public int numberOfComponents { get; } Property Value int Methods ResolveFromContext(Object) public Object ResolveFromContext(Object context) Parameters context Object Returns Object ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Return.html": {
    "href": "api/Ink.Parsed.Return.html",
    "title": "Class Return | Czasoport Documentation",
    "keywords": "Class Return Namespace Ink.Parsed public class Return : Object Inheritance object Object Return Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Return(Expression) public Return(Expression returnedExpression = null) Parameters returnedExpression Expression Properties returnedExpression public Expression returnedExpression { get; protected set; } Property Value Expression Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object"
  },
  "api/Ink.Parsed.Sequence.html": {
    "href": "api/Ink.Parsed.Sequence.html",
    "title": "Class Sequence | Czasoport Documentation",
    "keywords": "Class Sequence Namespace Ink.Parsed public class Sequence : Object Inheritance object Object Sequence Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Sequence(List<ContentList>, SequenceType) public Sequence(List<ContentList> elementContentLists, SequenceType sequenceType) Parameters elementContentLists List<ContentList> sequenceType SequenceType Fields sequenceElements public List<Object> sequenceElements Field Value List<Object> sequenceType public SequenceType sequenceType Field Value SequenceType Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.SequenceType.html": {
    "href": "api/Ink.Parsed.SequenceType.html",
    "title": "Enum SequenceType | Czasoport Documentation",
    "keywords": "Enum SequenceType Namespace Ink.Parsed [Flags] public enum SequenceType Fields Cycle = 2 Once = 8 Shuffle = 4 Stopping = 1"
  },
  "api/Ink.Parsed.Stitch.html": {
    "href": "api/Ink.Parsed.Stitch.html",
    "title": "Class Stitch | Czasoport Documentation",
    "keywords": "Class Stitch Namespace Ink.Parsed public class Stitch : FlowBase, INamedContent Inheritance object Object FlowBase Stitch Implements INamedContent Inherited Members FlowBase.name FlowBase.identifier FlowBase.arguments FlowBase.hasParameters FlowBase.variableDeclarations FlowBase.isFunction FlowBase.PreProcessTopLevelObjects(List<Object>) FlowBase.ResolveVariableWithName(string, Object) FlowBase.TryAddNewVariableDeclaration(VariableAssignment) FlowBase.ResolveWeavePointNaming() FlowBase.GenerateRuntimeObject() FlowBase.ContentWithNameAtLevel(string, FlowLevel?, bool) FlowBase.ResolveReferences(Story) FlowBase.subFlowsByName FlowBase.typeName FlowBase.ToString() Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Stitch(Identifier, List<Object>, List<Argument>, bool) public Stitch(Identifier name, List<Object> topLevelObjects, List<FlowBase.Argument> arguments, bool isFunction) Parameters name Identifier topLevelObjects List<Object> arguments List<FlowBase.Argument> isFunction bool Properties flowLevel public override FlowLevel flowLevel { get; } Property Value FlowLevel"
  },
  "api/Ink.Parsed.Story.SymbolType.html": {
    "href": "api/Ink.Parsed.Story.SymbolType.html",
    "title": "Enum Story.SymbolType | Czasoport Documentation",
    "keywords": "Enum Story.SymbolType Namespace Ink.Parsed public enum Story.SymbolType : uint Fields Arg = 5 Knot = 0 List = 1 ListItem = 2 SubFlowAndWeave = 4 Temp = 6 Var = 3"
  },
  "api/Ink.Parsed.Story.html": {
    "href": "api/Ink.Parsed.Story.html",
    "title": "Class Story | Czasoport Documentation",
    "keywords": "Class Story Namespace Ink.Parsed public class Story : FlowBase, INamedContent Inheritance object Object FlowBase Story Implements INamedContent Inherited Members FlowBase.name FlowBase.identifier FlowBase.arguments FlowBase.hasParameters FlowBase.variableDeclarations FlowBase.isFunction FlowBase.ResolveVariableWithName(string, Object) FlowBase.TryAddNewVariableDeclaration(VariableAssignment) FlowBase.ResolveWeavePointNaming() FlowBase.GenerateRuntimeObject() FlowBase.ContentWithNameAtLevel(string, FlowLevel?, bool) FlowBase.ResolveReferences(Story) FlowBase.subFlowsByName FlowBase.typeName FlowBase.ToString() Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Story(List<Object>, bool) public Story(List<Object> toplevelObjects, bool isInclude = false) Parameters toplevelObjects List<Object> isInclude bool Fields constants public Dictionary<string, Expression> constants Field Value Dictionary<string, Expression> countAllVisits public bool countAllVisits Field Value bool externals public Dictionary<string, ExternalDeclaration> externals Field Value Dictionary<string, ExternalDeclaration> Properties flowLevel public override FlowLevel flowLevel { get; } Property Value FlowLevel Methods AddExternal(ExternalDeclaration) public void AddExternal(ExternalDeclaration decl) Parameters decl ExternalDeclaration CheckForNamingCollisions(Object, Identifier, SymbolType, string) public void CheckForNamingCollisions(Object obj, Identifier identifier, Story.SymbolType symbolType, string typeNameOverride = null) Parameters obj Object identifier Identifier symbolType Story.SymbolType typeNameOverride string DontFlattenContainer(Container) public void DontFlattenContainer(Container container) Parameters container Container Error(string, Object, bool) public override void Error(string message, Object source, bool isWarning) Parameters message string source Object isWarning bool ExportRuntime(ErrorHandler) public Story ExportRuntime(ErrorHandler errorHandler = null) Parameters errorHandler ErrorHandler Returns Story IsExternal(string) public bool IsExternal(string namedFuncTarget) Parameters namedFuncTarget string Returns bool IsReservedKeyword(string) public static bool IsReservedKeyword(string name) Parameters name string Returns bool PreProcessTopLevelObjects(List<Object>) protected override void PreProcessTopLevelObjects(List<Object> topLevelContent) Parameters topLevelContent List<Object> ResetError() public void ResetError() ResolveList(string) public ListDefinition ResolveList(string listName) Parameters listName string Returns ListDefinition ResolveListItem(string, string, Object) public ListElementDefinition ResolveListItem(string listName, string itemName, Object source = null) Parameters listName string itemName string source Object Returns ListElementDefinition"
  },
  "api/Ink.Parsed.StringExpression.html": {
    "href": "api/Ink.Parsed.StringExpression.html",
    "title": "Class StringExpression | Czasoport Documentation",
    "keywords": "Class StringExpression Namespace Ink.Parsed public class StringExpression : Expression Inheritance object Object Expression StringExpression Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StringExpression(List<Object>) public StringExpression(List<Object> content) Parameters content List<Object> Properties isSingleString public bool isSingleString { get; } Property Value bool Methods Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Tag.html": {
    "href": "api/Ink.Parsed.Tag.html",
    "title": "Class Tag | Czasoport Documentation",
    "keywords": "Class Tag Namespace Ink.Parsed public class Tag : Object Inheritance object Object Tag Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields inChoice public bool inChoice Field Value bool isStart public bool isStart Field Value bool Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Text.html": {
    "href": "api/Ink.Parsed.Text.html",
    "title": "Class Text | Czasoport Documentation",
    "keywords": "Class Text Namespace Ink.Parsed public class Text : Object Inheritance object Object Text Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Text(string) public Text(string str) Parameters str string Properties text public string text { get; set; } Property Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.TunnelOnwards.html": {
    "href": "api/Ink.Parsed.TunnelOnwards.html",
    "title": "Class TunnelOnwards | Czasoport Documentation",
    "keywords": "Class TunnelOnwards Namespace Ink.Parsed public class TunnelOnwards : Object Inheritance object Object TunnelOnwards Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties divertAfter public Divert divertAfter { get; set; } Property Value Divert Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.UnaryExpression.html": {
    "href": "api/Ink.Parsed.UnaryExpression.html",
    "title": "Class UnaryExpression | Czasoport Documentation",
    "keywords": "Class UnaryExpression Namespace Ink.Parsed public class UnaryExpression : Expression Inheritance object Object Expression UnaryExpression Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnaryExpression(Expression, string) public UnaryExpression(Expression inner, string op) Parameters inner Expression op string Fields innerExpression public Expression innerExpression Field Value Expression op public string op Field Value string Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WithInner(Expression, string) public static Expression WithInner(Expression inner, string op) Parameters inner Expression op string Returns Expression"
  },
  "api/Ink.Parsed.VariableAssignment.html": {
    "href": "api/Ink.Parsed.VariableAssignment.html",
    "title": "Class VariableAssignment | Czasoport Documentation",
    "keywords": "Class VariableAssignment Namespace Ink.Parsed public class VariableAssignment : Object Inheritance object Object VariableAssignment Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VariableAssignment(Identifier, Expression) public VariableAssignment(Identifier identifier, Expression assignedExpression) Parameters identifier Identifier assignedExpression Expression VariableAssignment(Identifier, ListDefinition) public VariableAssignment(Identifier identifier, ListDefinition listDef) Parameters identifier Identifier listDef ListDefinition Properties expression public Expression expression { get; protected set; } Property Value Expression isDeclaration public bool isDeclaration { get; } Property Value bool isGlobalDeclaration public bool isGlobalDeclaration { get; set; } Property Value bool isNewTemporaryDeclaration public bool isNewTemporaryDeclaration { get; set; } Property Value bool listDefinition public ListDefinition listDefinition { get; protected set; } Property Value ListDefinition typeName public override string typeName { get; } Property Value string variableIdentifier public Identifier variableIdentifier { get; protected set; } Property Value Identifier variableName public string variableName { get; } Property Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.VariableReference.html": {
    "href": "api/Ink.Parsed.VariableReference.html",
    "title": "Class VariableReference | Czasoport Documentation",
    "keywords": "Class VariableReference Namespace Ink.Parsed public class VariableReference : Expression Inheritance object Object Expression VariableReference Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VariableReference(List<Identifier>) public VariableReference(List<Identifier> pathIdentifiers) Parameters pathIdentifiers List<Identifier> Fields isConstantReference public bool isConstantReference Field Value bool isListItemReference public bool isListItemReference Field Value bool pathIdentifiers public List<Identifier> pathIdentifiers Field Value List<Identifier> Properties identifier public Identifier identifier { get; } Property Value Identifier name public string name { get; } Property Value string path public List<string> path { get; } Property Value List<string> runtimeVarRef public VariableReference runtimeVarRef { get; } Property Value VariableReference Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Weave.BadTerminationHandler.html": {
    "href": "api/Ink.Parsed.Weave.BadTerminationHandler.html",
    "title": "Delegate Weave.BadTerminationHandler | Czasoport Documentation",
    "keywords": "Delegate Weave.BadTerminationHandler Namespace Ink.Parsed public delegate void Weave.BadTerminationHandler(Object terminatingObj) Parameters terminatingObj Object"
  },
  "api/Ink.Parsed.Weave.GatherPointToResolve.html": {
    "href": "api/Ink.Parsed.Weave.GatherPointToResolve.html",
    "title": "Class Weave.GatherPointToResolve | Czasoport Documentation",
    "keywords": "Class Weave.GatherPointToResolve Namespace Ink.Parsed public class Weave.GatherPointToResolve Inheritance object Weave.GatherPointToResolve Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields divert public Divert divert Field Value Divert targetRuntimeObj public Object targetRuntimeObj Field Value Object"
  },
  "api/Ink.Parsed.Weave.html": {
    "href": "api/Ink.Parsed.Weave.html",
    "title": "Class Weave | Czasoport Documentation",
    "keywords": "Class Weave Namespace Ink.Parsed public class Weave : Object Inheritance object Object Weave Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Weave(List<Object>, int) public Weave(List<Object> cont, int indentIndex = -1) Parameters cont List<Object> indentIndex int Fields gatherPointsToResolve public List<Weave.GatherPointToResolve> gatherPointsToResolve Field Value List<Weave.GatherPointToResolve> looseEnds public List<IWeavePoint> looseEnds Field Value List<IWeavePoint> Properties baseIndentIndex public int baseIndentIndex { get; } Property Value int lastParsedSignificantObject public Object lastParsedSignificantObject { get; } Property Value Object rootContainer public Container rootContainer { get; } Property Value Container Methods AddRuntimeForNestedWeave(Weave) public void AddRuntimeForNestedWeave(Weave nestedResult) Parameters nestedResult Weave DetermineBaseIndentationFromContent(List<Object>) public int DetermineBaseIndentationFromContent(List<Object> contentList) Parameters contentList List<Object> Returns int GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ResolveWeavePointNaming() public void ResolveWeavePointNaming() ValidateTermination(BadTerminationHandler) public void ValidateTermination(Weave.BadTerminationHandler badTerminationHandler) Parameters badTerminationHandler Weave.BadTerminationHandler WeavePointNamed(string) public IWeavePoint WeavePointNamed(string name) Parameters name string Returns IWeavePoint"
  },
  "api/Ink.Parsed.Wrap-1.html": {
    "href": "api/Ink.Parsed.Wrap-1.html",
    "title": "Class Wrap<T> | Czasoport Documentation",
    "keywords": "Class Wrap<T> Namespace Ink.Parsed public class Wrap<T> : Object where T : Object Type Parameters T Inheritance object Object Wrap<T> Derived Glue LegacyTag Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Wrap(T) public Wrap(T objToWrap) Parameters objToWrap T Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object"
  },
  "api/Ink.Parsed.html": {
    "href": "api/Ink.Parsed.html",
    "title": "Namespace Ink.Parsed | Czasoport Documentation",
    "keywords": "Namespace Ink.Parsed Classes AuthorWarning BinaryExpression Choice Conditional ConditionalSingleBranch ConstantDeclaration ContentList Divert DivertTarget Expression ExternalDeclaration FlowBase FlowBase.Argument FunctionCall Gather Glue Identifier IncDecExpression IncludedFile Knot LegacyTag List ListDefinition ListElementDefinition MultipleConditionExpression Number Object Path Return Sequence Stitch Story StringExpression Tag Text TunnelOnwards UnaryExpression VariableAssignment VariableReference Weave Weave.GatherPointToResolve Wrap<T> Structs FlowBase.VariableResolveResult Interfaces INamedContent IWeavePoint Enums FlowLevel SequenceType Story.SymbolType Delegates Object.FindQueryFunc<T> Weave.BadTerminationHandler"
  },
  "api/Ink.PluginManager.html": {
    "href": "api/Ink.PluginManager.html",
    "title": "Class PluginManager | Czasoport Documentation",
    "keywords": "Class PluginManager Namespace Ink public class PluginManager Inheritance object PluginManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PluginManager(List<string>) public PluginManager(List<string> pluginDirectories) Parameters pluginDirectories List<string> Methods PostExport(Story, Story) public Story PostExport(Story parsedStory, Story runtimeStory) Parameters parsedStory Story runtimeStory Story Returns Story PostParse(Story) public Story PostParse(Story parsedStory) Parameters parsedStory Story Returns Story PreParse(string) public string PreParse(string storyContent) Parameters storyContent string Returns string"
  },
  "api/Ink.Runtime.BoolValue.html": {
    "href": "api/Ink.Runtime.BoolValue.html",
    "title": "Class BoolValue | Czasoport Documentation",
    "keywords": "Class BoolValue Namespace Ink.Runtime public class BoolValue : Value<bool> Inheritance object Object Value Value<bool> BoolValue Inherited Members Value<bool>.value Value<bool>.valueObject Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BoolValue() public BoolValue() BoolValue(bool) public BoolValue(bool boolVal) Parameters boolVal bool Properties isTruthy public override bool isTruthy { get; } Property Value bool valueType public override ValueType valueType { get; } Property Value ValueType Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.CallStack.Element.html": {
    "href": "api/Ink.Runtime.CallStack.Element.html",
    "title": "Class CallStack.Element | Czasoport Documentation",
    "keywords": "Class CallStack.Element Namespace Ink.Runtime public class CallStack.Element Inheritance object CallStack.Element Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Element(PushPopType, Pointer, bool) public Element(PushPopType type, Pointer pointer, bool inExpressionEvaluation = false) Parameters type PushPopType pointer Pointer inExpressionEvaluation bool Fields currentPointer public Pointer currentPointer Field Value Pointer evaluationStackHeightWhenPushed public int evaluationStackHeightWhenPushed Field Value int functionStartInOuputStream public int functionStartInOuputStream Field Value int inExpressionEvaluation public bool inExpressionEvaluation Field Value bool temporaryVariables public Dictionary<string, Object> temporaryVariables Field Value Dictionary<string, Object> type public PushPopType type Field Value PushPopType Methods Copy() public CallStack.Element Copy() Returns CallStack.Element"
  },
  "api/Ink.Runtime.CallStack.Thread.html": {
    "href": "api/Ink.Runtime.CallStack.Thread.html",
    "title": "Class CallStack.Thread | Czasoport Documentation",
    "keywords": "Class CallStack.Thread Namespace Ink.Runtime public class CallStack.Thread Inheritance object CallStack.Thread Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Thread() public Thread() Thread(Dictionary<string, object>, Story) public Thread(Dictionary<string, object> jThreadObj, Story storyContext) Parameters jThreadObj Dictionary<string, object> storyContext Story Fields callstack public List<CallStack.Element> callstack Field Value List<CallStack.Element> previousPointer public Pointer previousPointer Field Value Pointer threadIndex public int threadIndex Field Value int Methods Copy() public CallStack.Thread Copy() Returns CallStack.Thread WriteJson(Writer) public void WriteJson(SimpleJson.Writer writer) Parameters writer SimpleJson.Writer"
  },
  "api/Ink.Runtime.CallStack.html": {
    "href": "api/Ink.Runtime.CallStack.html",
    "title": "Class CallStack | Czasoport Documentation",
    "keywords": "Class CallStack Namespace Ink.Runtime public class CallStack Inheritance object CallStack Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CallStack(CallStack) public CallStack(CallStack toCopy) Parameters toCopy CallStack CallStack(Story) public CallStack(Story storyContext) Parameters storyContext Story Properties callStackTrace public string callStackTrace { get; } Property Value string canPop public bool canPop { get; } Property Value bool canPopThread public bool canPopThread { get; } Property Value bool currentElement public CallStack.Element currentElement { get; } Property Value CallStack.Element currentElementIndex public int currentElementIndex { get; } Property Value int currentThread public CallStack.Thread currentThread { get; set; } Property Value CallStack.Thread depth public int depth { get; } Property Value int elementIsEvaluateFromGame public bool elementIsEvaluateFromGame { get; } Property Value bool elements public List<CallStack.Element> elements { get; } Property Value List<CallStack.Element> Methods CanPop(PushPopType?) public bool CanPop(PushPopType? type = null) Parameters type PushPopType? Returns bool ContextForVariableNamed(string) public int ContextForVariableNamed(string name) Parameters name string Returns int ForkThread() public CallStack.Thread ForkThread() Returns CallStack.Thread GetTemporaryVariableWithName(string, int) public Object GetTemporaryVariableWithName(string name, int contextIndex = -1) Parameters name string contextIndex int Returns Object Pop(PushPopType?) public void Pop(PushPopType? type = null) Parameters type PushPopType? PopThread() public void PopThread() Push(PushPopType, int, int) public void Push(PushPopType type, int externalEvaluationStackHeight = 0, int outputStreamLengthWithPushed = 0) Parameters type PushPopType externalEvaluationStackHeight int outputStreamLengthWithPushed int PushThread() public void PushThread() Reset() public void Reset() SetJsonToken(Dictionary<string, object>, Story) public void SetJsonToken(Dictionary<string, object> jObject, Story storyContext) Parameters jObject Dictionary<string, object> storyContext Story SetTemporaryVariable(string, Object, bool, int) public void SetTemporaryVariable(string name, Object value, bool declareNew, int contextIndex = -1) Parameters name string value Object declareNew bool contextIndex int ThreadWithIndex(int) public CallStack.Thread ThreadWithIndex(int index) Parameters index int Returns CallStack.Thread WriteJson(Writer) public void WriteJson(SimpleJson.Writer w) Parameters w SimpleJson.Writer"
  },
  "api/Ink.Runtime.Choice.html": {
    "href": "api/Ink.Runtime.Choice.html",
    "title": "Class Choice | Czasoport Documentation",
    "keywords": "Class Choice Namespace Ink.Runtime A generated Choice from the story. A single ChoicePoint in the Story could potentially generate different Choices dynamically dependent on state, so they're separated. public class Choice : Object Inheritance object Object Choice Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Choice() public Choice() Fields isInvisibleDefault public bool isInvisibleDefault Field Value bool originalThreadIndex public int originalThreadIndex Field Value int sourcePath Get the path to the original choice point - where was this choice defined in the story? public string sourcePath Field Value string A dot separated path into the story data. tags public List<string> tags Field Value List<string> targetPath public Path targetPath Field Value Path Properties index The original index into currentChoices list on the Story when this Choice was generated, for convenience. public int index { get; set; } Property Value int pathStringOnChoice The target path that the Story should be diverted to if this Choice is chosen. public string pathStringOnChoice { get; set; } Property Value string text The main text to presented to the player for this Choice. public string text { get; set; } Property Value string threadAtGeneration public CallStack.Thread threadAtGeneration { get; set; } Property Value CallStack.Thread"
  },
  "api/Ink.Runtime.ChoicePoint.html": {
    "href": "api/Ink.Runtime.ChoicePoint.html",
    "title": "Class ChoicePoint | Czasoport Documentation",
    "keywords": "Class ChoicePoint Namespace Ink.Runtime The ChoicePoint represents the point within the Story where a Choice instance gets generated. The distinction is made because the text of the Choice can be dynamically generated. public class ChoicePoint : Object Inheritance object Object ChoicePoint Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChoicePoint() public ChoicePoint() ChoicePoint(bool) public ChoicePoint(bool onceOnly) Parameters onceOnly bool Properties choiceTarget public Container choiceTarget { get; } Property Value Container flags public int flags { get; set; } Property Value int hasChoiceOnlyContent public bool hasChoiceOnlyContent { get; set; } Property Value bool hasCondition public bool hasCondition { get; set; } Property Value bool hasStartContent public bool hasStartContent { get; set; } Property Value bool isInvisibleDefault public bool isInvisibleDefault { get; set; } Property Value bool onceOnly public bool onceOnly { get; set; } Property Value bool pathOnChoice public Path pathOnChoice { get; set; } Property Value Path pathStringOnChoice public string pathStringOnChoice { get; set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Container.CountFlags.html": {
    "href": "api/Ink.Runtime.Container.CountFlags.html",
    "title": "Enum Container.CountFlags | Czasoport Documentation",
    "keywords": "Enum Container.CountFlags Namespace Ink.Runtime [Flags] public enum Container.CountFlags Fields CountStartOnly = 4 Turns = 2 Visits = 1"
  },
  "api/Ink.Runtime.Container.html": {
    "href": "api/Ink.Runtime.Container.html",
    "title": "Class Container | Czasoport Documentation",
    "keywords": "Class Container Namespace Ink.Runtime public class Container : Object, INamedContent Inheritance object Object Container Implements INamedContent Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Container() public Container() Properties content public List<Object> content { get; set; } Property Value List<Object> countFlags public int countFlags { get; set; } Property Value int countingAtStartOnly public bool countingAtStartOnly { get; set; } Property Value bool hasValidName public bool hasValidName { get; } Property Value bool name public string name { get; set; } Property Value string namedContent public Dictionary<string, INamedContent> namedContent { get; set; } Property Value Dictionary<string, INamedContent> namedOnlyContent public Dictionary<string, Object> namedOnlyContent { get; set; } Property Value Dictionary<string, Object> pathToFirstLeafContent public Path pathToFirstLeafContent { get; } Property Value Path turnIndexShouldBeCounted public bool turnIndexShouldBeCounted { get; set; } Property Value bool visitsShouldBeCounted public bool visitsShouldBeCounted { get; set; } Property Value bool Methods AddContent(Object) public void AddContent(Object contentObj) Parameters contentObj Object AddContent(IList<Object>) public void AddContent(IList<Object> contentList) Parameters contentList IList<Object> AddContentsOfContainer(Container) public void AddContentsOfContainer(Container otherContainer) Parameters otherContainer Container AddToNamedContentOnly(INamedContent) public void AddToNamedContentOnly(INamedContent namedContentObj) Parameters namedContentObj INamedContent BuildStringOfHierarchy() public virtual string BuildStringOfHierarchy() Returns string BuildStringOfHierarchy(StringBuilder, int, Object) public void BuildStringOfHierarchy(StringBuilder sb, int indentation, Object pointedObj) Parameters sb StringBuilder indentation int pointedObj Object ContentAtPath(Path, int, int) public SearchResult ContentAtPath(Path path, int partialPathStart = 0, int partialPathLength = -1) Parameters path Path partialPathStart int partialPathLength int Returns SearchResult ContentWithPathComponent(Component) protected Object ContentWithPathComponent(Path.Component component) Parameters component Path.Component Returns Object InsertContent(Object, int) public void InsertContent(Object contentObj, int index) Parameters contentObj Object index int TryAddNamedContent(Object) public void TryAddNamedContent(Object contentObj) Parameters contentObj Object"
  },
  "api/Ink.Runtime.ControlCommand.CommandType.html": {
    "href": "api/Ink.Runtime.ControlCommand.CommandType.html",
    "title": "Enum ControlCommand.CommandType | Czasoport Documentation",
    "keywords": "Enum ControlCommand.CommandType Namespace Ink.Runtime public enum ControlCommand.CommandType Fields BeginString = 7 BeginTag = 24 ChoiceCount = 10 Done = 19 Duplicate = 3 End = 20 EndString = 8 EndTag = 25 EvalEnd = 2 EvalOutput = 1 EvalStart = 0 ListFromInt = 21 ListRandom = 23 ListRange = 22 NoOp = 9 NotSet = -1 PopEvaluatedValue = 4 PopFunction = 5 PopTunnel = 6 Random = 14 ReadCount = 13 SeedRandom = 15 SequenceShuffleIndex = 17 StartThread = 18 TOTAL_VALUES = 26 Turns = 11 TurnsSince = 12 VisitIndex = 16"
  },
  "api/Ink.Runtime.ControlCommand.html": {
    "href": "api/Ink.Runtime.ControlCommand.html",
    "title": "Class ControlCommand | Czasoport Documentation",
    "keywords": "Class ControlCommand Namespace Ink.Runtime public class ControlCommand : Object Inheritance object Object ControlCommand Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ControlCommand() public ControlCommand() ControlCommand(CommandType) public ControlCommand(ControlCommand.CommandType commandType) Parameters commandType ControlCommand.CommandType Properties commandType public ControlCommand.CommandType commandType { get; protected set; } Property Value ControlCommand.CommandType Methods BeginString() public static ControlCommand BeginString() Returns ControlCommand BeginTag() public static ControlCommand BeginTag() Returns ControlCommand ChoiceCount() public static ControlCommand ChoiceCount() Returns ControlCommand Copy() public override Object Copy() Returns Object Done() public static ControlCommand Done() Returns ControlCommand Duplicate() public static ControlCommand Duplicate() Returns ControlCommand End() public static ControlCommand End() Returns ControlCommand EndString() public static ControlCommand EndString() Returns ControlCommand EndTag() public static ControlCommand EndTag() Returns ControlCommand EvalEnd() public static ControlCommand EvalEnd() Returns ControlCommand EvalOutput() public static ControlCommand EvalOutput() Returns ControlCommand EvalStart() public static ControlCommand EvalStart() Returns ControlCommand ListFromInt() public static ControlCommand ListFromInt() Returns ControlCommand ListRandom() public static ControlCommand ListRandom() Returns ControlCommand ListRange() public static ControlCommand ListRange() Returns ControlCommand NoOp() public static ControlCommand NoOp() Returns ControlCommand PopEvaluatedValue() public static ControlCommand PopEvaluatedValue() Returns ControlCommand PopFunction() public static ControlCommand PopFunction() Returns ControlCommand PopTunnel() public static ControlCommand PopTunnel() Returns ControlCommand Random() public static ControlCommand Random() Returns ControlCommand ReadCount() public static ControlCommand ReadCount() Returns ControlCommand SeedRandom() public static ControlCommand SeedRandom() Returns ControlCommand SequenceShuffleIndex() public static ControlCommand SequenceShuffleIndex() Returns ControlCommand StartThread() public static ControlCommand StartThread() Returns ControlCommand ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Turns() public static ControlCommand Turns() Returns ControlCommand TurnsSince() public static ControlCommand TurnsSince() Returns ControlCommand VisitIndex() public static ControlCommand VisitIndex() Returns ControlCommand"
  },
  "api/Ink.Runtime.DebugMetadata.html": {
    "href": "api/Ink.Runtime.DebugMetadata.html",
    "title": "Class DebugMetadata | Czasoport Documentation",
    "keywords": "Class DebugMetadata Namespace Ink.Runtime public class DebugMetadata Inheritance object DebugMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DebugMetadata() public DebugMetadata() Fields endCharacterNumber public int endCharacterNumber Field Value int endLineNumber public int endLineNumber Field Value int fileName public string fileName Field Value string sourceName public string sourceName Field Value string startCharacterNumber public int startCharacterNumber Field Value int startLineNumber public int startLineNumber Field Value int Methods Merge(DebugMetadata) public DebugMetadata Merge(DebugMetadata dm) Parameters dm DebugMetadata Returns DebugMetadata ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Divert.html": {
    "href": "api/Ink.Runtime.Divert.html",
    "title": "Class Divert | Czasoport Documentation",
    "keywords": "Class Divert Namespace Ink.Runtime public class Divert : Object Inheritance object Object Divert Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Divert() public Divert() Divert(PushPopType) public Divert(PushPopType stackPushType) Parameters stackPushType PushPopType Fields stackPushType public PushPopType stackPushType Field Value PushPopType Properties externalArgs public int externalArgs { get; set; } Property Value int hasVariableTarget public bool hasVariableTarget { get; } Property Value bool isConditional public bool isConditional { get; set; } Property Value bool isExternal public bool isExternal { get; set; } Property Value bool pushesToStack public bool pushesToStack { get; set; } Property Value bool targetPath public Path targetPath { get; set; } Property Value Path targetPathString public string targetPathString { get; set; } Property Value string targetPointer public Pointer targetPointer { get; } Property Value Pointer variableDivertName public string variableDivertName { get; set; } Property Value string Methods Equals(object) Required for implicit bool comparison public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() Required for implicit bool comparison public override int GetHashCode() Returns int ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.DivertTargetValue.html": {
    "href": "api/Ink.Runtime.DivertTargetValue.html",
    "title": "Class DivertTargetValue | Czasoport Documentation",
    "keywords": "Class DivertTargetValue Namespace Ink.Runtime public class DivertTargetValue : Value<Path> Inheritance object Object Value Value<Path> DivertTargetValue Inherited Members Value<Path>.value Value<Path>.valueObject Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DivertTargetValue() public DivertTargetValue() DivertTargetValue(Path) public DivertTargetValue(Path targetPath) Parameters targetPath Path Properties isTruthy public override bool isTruthy { get; } Property Value bool targetPath public Path targetPath { get; set; } Property Value Path valueType public override ValueType valueType { get; } Property Value ValueType Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.FloatValue.html": {
    "href": "api/Ink.Runtime.FloatValue.html",
    "title": "Class FloatValue | Czasoport Documentation",
    "keywords": "Class FloatValue Namespace Ink.Runtime public class FloatValue : Value<float> Inheritance object Object Value Value<float> FloatValue Inherited Members Value<float>.value Value<float>.valueObject Value<float>.ToString() Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FloatValue() public FloatValue() FloatValue(float) public FloatValue(float val) Parameters val float Properties isTruthy public override bool isTruthy { get; } Property Value bool valueType public override ValueType valueType { get; } Property Value ValueType Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value"
  },
  "api/Ink.Runtime.Flow.html": {
    "href": "api/Ink.Runtime.Flow.html",
    "title": "Class Flow | Czasoport Documentation",
    "keywords": "Class Flow Namespace Ink.Runtime public class Flow Inheritance object Flow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Flow(string, Story) public Flow(string name, Story story) Parameters name string story Story Flow(string, Story, Dictionary<string, object>) public Flow(string name, Story story, Dictionary<string, object> jObject) Parameters name string story Story jObject Dictionary<string, object> Fields callStack public CallStack callStack Field Value CallStack currentChoices public List<Choice> currentChoices Field Value List<Choice> name public string name Field Value string outputStream public List<Object> outputStream Field Value List<Object> Methods LoadFlowChoiceThreads(Dictionary<string, object>, Story) public void LoadFlowChoiceThreads(Dictionary<string, object> jChoiceThreads, Story story) Parameters jChoiceThreads Dictionary<string, object> story Story WriteJson(Writer) public void WriteJson(SimpleJson.Writer writer) Parameters writer SimpleJson.Writer"
  },
  "api/Ink.Runtime.Glue.html": {
    "href": "api/Ink.Runtime.Glue.html",
    "title": "Class Glue | Czasoport Documentation",
    "keywords": "Class Glue Namespace Ink.Runtime public class Glue : Object Inheritance object Object Glue Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Glue() public Glue() Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.INamedContent.html": {
    "href": "api/Ink.Runtime.INamedContent.html",
    "title": "Interface INamedContent | Czasoport Documentation",
    "keywords": "Interface INamedContent Namespace Ink.Runtime public interface INamedContent Properties hasValidName bool hasValidName { get; } Property Value bool name string name { get; } Property Value string"
  },
  "api/Ink.Runtime.InkList.html": {
    "href": "api/Ink.Runtime.InkList.html",
    "title": "Class InkList | Czasoport Documentation",
    "keywords": "Class InkList Namespace Ink.Runtime The InkList is the underlying type that's used to store an instance of a list in ink. It's not used for the definition of the list, but for a list value that's stored in a variable. Somewhat confusingly, it's backed by a C# Dictionary, and has nothing to do with a C# List! public class InkList : Dictionary<InkListItem, int>, IDictionary<InkListItem, int>, ICollection<KeyValuePair<InkListItem, int>>, IReadOnlyDictionary<InkListItem, int>, IReadOnlyCollection<KeyValuePair<InkListItem, int>>, IEnumerable<KeyValuePair<InkListItem, int>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Inheritance object Dictionary<InkListItem, int> InkList Implements IDictionary<InkListItem, int> ICollection<KeyValuePair<InkListItem, int>> IReadOnlyDictionary<InkListItem, int> IReadOnlyCollection<KeyValuePair<InkListItem, int>> IEnumerable<KeyValuePair<InkListItem, int>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members Dictionary<InkListItem, int>.Add(InkListItem, int) Dictionary<InkListItem, int>.Clear() Dictionary<InkListItem, int>.ContainsKey(InkListItem) Dictionary<InkListItem, int>.ContainsValue(int) Dictionary<InkListItem, int>.EnsureCapacity(int) Dictionary<InkListItem, int>.GetEnumerator() Dictionary<InkListItem, int>.OnDeserialization(object) Dictionary<InkListItem, int>.Remove(InkListItem) Dictionary<InkListItem, int>.Remove(InkListItem, out int) Dictionary<InkListItem, int>.TrimExcess() Dictionary<InkListItem, int>.TrimExcess(int) Dictionary<InkListItem, int>.TryAdd(InkListItem, int) Dictionary<InkListItem, int>.TryGetValue(InkListItem, out int) Dictionary<InkListItem, int>.Comparer Dictionary<InkListItem, int>.Count Dictionary<InkListItem, int>.this[InkListItem] Dictionary<InkListItem, int>.Keys Dictionary<InkListItem, int>.Values object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InkList() Create a new empty ink list. public InkList() InkList(InkList) Create a new ink list that contains the same contents as another list. public InkList(InkList otherList) Parameters otherList InkList InkList(KeyValuePair<InkListItem, int>) public InkList(KeyValuePair<InkListItem, int> singleElement) Parameters singleElement KeyValuePair<InkListItem, int> InkList(string, Story) Create a new empty ink list that's intended to hold items from a particular origin list definition. The origin Story is needed in order to be able to look up that definition. public InkList(string singleOriginListName, Story originStory) Parameters singleOriginListName string originStory Story Fields origins public List<ListDefinition> origins Field Value List<ListDefinition> Properties all The list of all items from the original list definition, equivalent to calling LIST_ALL(list) in ink. public InkList all { get; } Property Value InkList inverse The inverse of the list, equivalent to calling LIST_INVERSE(list) in ink public InkList inverse { get; } Property Value InkList maxItem Get the maximum item in the list, equivalent to calling LIST_MAX(list) in ink. public KeyValuePair<InkListItem, int> maxItem { get; } Property Value KeyValuePair<InkListItem, int> minItem Get the minimum item in the list, equivalent to calling LIST_MIN(list) in ink. public KeyValuePair<InkListItem, int> minItem { get; } Property Value KeyValuePair<InkListItem, int> originNames public List<string> originNames { get; } Property Value List<string> originOfMaxItem public ListDefinition originOfMaxItem { get; } Property Value ListDefinition Methods AddItem(InkListItem) Adds the given item to the ink list. Note that the item must come from a list definition that is already \"known\" to this list, so that the item's value can be looked up. By \"known\", we mean that it already has items in it from that source, or it did at one point - it can't be a completely fresh empty list, or a list that only contains items from a different list definition. public void AddItem(InkListItem item) Parameters item InkListItem AddItem(string) Adds the given item to the ink list, attempting to find the origin list definition that it belongs to. The item must therefore come from a list definition that is already \"known\" to this list, so that the item's value can be looked up. By \"known\", we mean that it already has items in it from that source, or it did at one point - it can't be a completely fresh empty list, or a list that only contains items from a different list definition. public void AddItem(string itemName) Parameters itemName string Contains(InkList) Returns true if the current list contains all the items that are in the list that is passed in. Equivalent to calling (list1 ? list2) in ink. public bool Contains(InkList otherList) Parameters otherList InkList Other list. Returns bool Contains(string) Returns true if the current list contains an item matching the given name. public bool Contains(string listItemName) Parameters listItemName string Returns bool ContainsItemNamed(string) Returns true if this ink list contains an item with the given short name (ignoring the original list where it was defined). public bool ContainsItemNamed(string itemName) Parameters itemName string Returns bool Equals(object) Returns true if the passed object is also an ink list that contains the same items as the current list, false otherwise. public override bool Equals(object other) Parameters other object Returns bool FromString(string, Story) Converts a string to an ink list and returns for use in the story. public static InkList FromString(string myListItem, Story originStory) Parameters myListItem string originStory Story Origin story. Returns InkList InkList created from string list item GetHashCode() Return the hashcode for this object, used for comparisons and inserting into dictionaries. public override int GetHashCode() Returns int GreaterThan(InkList) Returns true if all the item values in the current list are greater than all the item values in the passed in list. Equivalent to calling (list1 > list2) in ink. public bool GreaterThan(InkList otherList) Parameters otherList InkList Returns bool GreaterThanOrEquals(InkList) Returns true if the item values in the current list overlap or are all greater than the item values in the passed in list. None of the item values in the current list must fall below the item values in the passed in list. Equivalent to (list1 >= list2) in ink, or LIST_MIN(list1) >= LIST_MIN(list2) && LIST_MAX(list1) >= LIST_MAX(list2). public bool GreaterThanOrEquals(InkList otherList) Parameters otherList InkList Returns bool HasIntersection(InkList) Fast test for the existence of any intersection between the current list and another public bool HasIntersection(InkList otherList) Parameters otherList InkList Returns bool Intersect(InkList) Returns a new list that is the intersection of the current list with another list that's passed in - i.e. a list of the items that are shared between the two other lists. Equivalent to calling (list1 ^ list2) in ink. public InkList Intersect(InkList otherList) Parameters otherList InkList Returns InkList LessThan(InkList) Returns true if all the item values in the current list are less than all the item values in the passed in list. Equivalent to calling (list1 < list2) in ink. public bool LessThan(InkList otherList) Parameters otherList InkList Returns bool LessThanOrEquals(InkList) Returns true if the item values in the current list overlap or are all less than the item values in the passed in list. None of the item values in the current list must go above the item values in the passed in list. Equivalent to (list1 <= list2) in ink, or LIST_MAX(list1) <= LIST_MAX(list2) && LIST_MIN(list1) <= LIST_MIN(list2). public bool LessThanOrEquals(InkList otherList) Parameters otherList InkList Returns bool ListWithSubRange(object, object) Returns a sublist with the elements given the minimum and maxmimum bounds. The bounds can either be ints which are indices into the entire (sorted) list, or they can be InkLists themselves. These are intended to be single-item lists so you can specify the upper and lower bounds. If you pass in multi-item lists, it'll use the minimum and maximum items in those lists respectively. WARNING: Calling this method requires a full sort of all the elements in the list. public InkList ListWithSubRange(object minBound, object maxBound) Parameters minBound object maxBound object Returns InkList MaxAsList() public InkList MaxAsList() Returns InkList MinAsList() public InkList MinAsList() Returns InkList SetInitialOriginName(string) public void SetInitialOriginName(string initialOriginName) Parameters initialOriginName string SetInitialOriginNames(List<string>) public void SetInitialOriginNames(List<string> initialOriginNames) Parameters initialOriginNames List<string> ToString() Returns a string in the form \"a, b, c\" with the names of the items in the list, without the origin list definition names. Equivalent to writing {list} in ink. public override string ToString() Returns string Union(InkList) Returns a new list that is the combination of the current list and one that's passed in. Equivalent to calling (list1 + list2) in ink. public InkList Union(InkList otherList) Parameters otherList InkList Returns InkList Without(InkList) Returns a new list that's the same as the current one, except with the given items removed that are in the passed in list. Equivalent to calling (list1 - list2) in ink. public InkList Without(InkList listToRemove) Parameters listToRemove InkList List to remove. Returns InkList"
  },
  "api/Ink.Runtime.InkListItem.html": {
    "href": "api/Ink.Runtime.InkListItem.html",
    "title": "Struct InkListItem | Czasoport Documentation",
    "keywords": "Struct InkListItem Namespace Ink.Runtime The underlying type for a list item in ink. It stores the original list definition name as well as the item name, but without the value of the item. When the value is stored, it's stored in a KeyValuePair of InkListItem and int. public struct InkListItem Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors InkListItem(string) Create an item from a dot-separted string of the form \"listDefinitionName.listItemName\". public InkListItem(string fullName) Parameters fullName string InkListItem(string, string) Create an item with the given original list definition name, and the name of this item. public InkListItem(string originName, string itemName) Parameters originName string itemName string Fields itemName The main name of the item as defined in ink. public readonly string itemName Field Value string originName The name of the list where the item was originally defined. public readonly string originName Field Value string Properties Null public static InkListItem Null { get; } Property Value InkListItem fullName Get the full dot-separated name of the item, in the form \"listDefinitionName.itemName\". public string fullName { get; } Property Value string isNull public bool isNull { get; } Property Value bool Methods Equals(object) Is this item the same as another item? public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() Get the hashcode for an item. public override int GetHashCode() Returns int ToString() Get the full dot-separated name of the item, in the form \"listDefinitionName.itemName\". Calls fullName internally. public override string ToString() Returns string"
  },
  "api/Ink.Runtime.IntValue.html": {
    "href": "api/Ink.Runtime.IntValue.html",
    "title": "Class IntValue | Czasoport Documentation",
    "keywords": "Class IntValue Namespace Ink.Runtime public class IntValue : Value<int> Inheritance object Object Value Value<int> IntValue Inherited Members Value<int>.value Value<int>.valueObject Value<int>.ToString() Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IntValue() public IntValue() IntValue(int) public IntValue(int intVal) Parameters intVal int Properties isTruthy public override bool isTruthy { get; } Property Value bool valueType public override ValueType valueType { get; } Property Value ValueType Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value"
  },
  "api/Ink.Runtime.Json.html": {
    "href": "api/Ink.Runtime.Json.html",
    "title": "Class Json | Czasoport Documentation",
    "keywords": "Class Json Namespace Ink.Runtime public static class Json Inheritance object Json Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods JArrayToRuntimeObjList(List<object>, bool) public static List<Object> JArrayToRuntimeObjList(List<object> jArray, bool skipLast = false) Parameters jArray List<object> skipLast bool Returns List<Object> JArrayToRuntimeObjList<T>(List<object>, bool) public static List<T> JArrayToRuntimeObjList<T>(List<object> jArray, bool skipLast = false) where T : Object Parameters jArray List<object> skipLast bool Returns List<T> Type Parameters T JObjectToDictionaryRuntimeObjs(Dictionary<string, object>) public static Dictionary<string, Object> JObjectToDictionaryRuntimeObjs(Dictionary<string, object> jObject) Parameters jObject Dictionary<string, object> Returns Dictionary<string, Object> JObjectToIntDictionary(Dictionary<string, object>) public static Dictionary<string, int> JObjectToIntDictionary(Dictionary<string, object> jObject) Parameters jObject Dictionary<string, object> Returns Dictionary<string, int> JTokenToListDefinitions(object) public static ListDefinitionsOrigin JTokenToListDefinitions(object obj) Parameters obj object Returns ListDefinitionsOrigin JTokenToRuntimeObject(object) public static Object JTokenToRuntimeObject(object token) Parameters token object Returns Object WriteChoice(Writer, Choice) public static void WriteChoice(SimpleJson.Writer writer, Choice choice) Parameters writer SimpleJson.Writer choice Choice WriteDictionaryRuntimeObjs(Writer, Dictionary<string, Object>) public static void WriteDictionaryRuntimeObjs(SimpleJson.Writer writer, Dictionary<string, Object> dictionary) Parameters writer SimpleJson.Writer dictionary Dictionary<string, Object> WriteIntDictionary(Writer, Dictionary<string, int>) public static void WriteIntDictionary(SimpleJson.Writer writer, Dictionary<string, int> dict) Parameters writer SimpleJson.Writer dict Dictionary<string, int> WriteListRuntimeObjs(Writer, List<Object>) public static void WriteListRuntimeObjs(SimpleJson.Writer writer, List<Object> list) Parameters writer SimpleJson.Writer list List<Object> WriteRuntimeContainer(Writer, Container, bool) public static void WriteRuntimeContainer(SimpleJson.Writer writer, Container container, bool withoutName = false) Parameters writer SimpleJson.Writer container Container withoutName bool WriteRuntimeObject(Writer, Object) public static void WriteRuntimeObject(SimpleJson.Writer writer, Object obj) Parameters writer SimpleJson.Writer obj Object"
  },
  "api/Ink.Runtime.ListDefinition.html": {
    "href": "api/Ink.Runtime.ListDefinition.html",
    "title": "Class ListDefinition | Czasoport Documentation",
    "keywords": "Class ListDefinition Namespace Ink.Runtime public class ListDefinition Inheritance object ListDefinition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ListDefinition(string, Dictionary<string, int>) public ListDefinition(string name, Dictionary<string, int> items) Parameters name string items Dictionary<string, int> Properties items public Dictionary<InkListItem, int> items { get; } Property Value Dictionary<InkListItem, int> name public string name { get; } Property Value string Methods ContainsItem(InkListItem) public bool ContainsItem(InkListItem item) Parameters item InkListItem Returns bool ContainsItemWithName(string) public bool ContainsItemWithName(string itemName) Parameters itemName string Returns bool TryGetItemWithValue(int, out InkListItem) public bool TryGetItemWithValue(int val, out InkListItem item) Parameters val int item InkListItem Returns bool TryGetValueForItem(InkListItem, out int) public bool TryGetValueForItem(InkListItem item, out int intVal) Parameters item InkListItem intVal int Returns bool ValueForItem(InkListItem) public int ValueForItem(InkListItem item) Parameters item InkListItem Returns int"
  },
  "api/Ink.Runtime.ListDefinitionsOrigin.html": {
    "href": "api/Ink.Runtime.ListDefinitionsOrigin.html",
    "title": "Class ListDefinitionsOrigin | Czasoport Documentation",
    "keywords": "Class ListDefinitionsOrigin Namespace Ink.Runtime public class ListDefinitionsOrigin Inheritance object ListDefinitionsOrigin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ListDefinitionsOrigin(List<ListDefinition>) public ListDefinitionsOrigin(List<ListDefinition> lists) Parameters lists List<ListDefinition> Properties lists public List<ListDefinition> lists { get; } Property Value List<ListDefinition> Methods FindSingleItemListWithName(string) public ListValue FindSingleItemListWithName(string name) Parameters name string Returns ListValue TryListGetDefinition(string, out ListDefinition) public bool TryListGetDefinition(string name, out ListDefinition def) Parameters name string def ListDefinition Returns bool"
  },
  "api/Ink.Runtime.ListValue.html": {
    "href": "api/Ink.Runtime.ListValue.html",
    "title": "Class ListValue | Czasoport Documentation",
    "keywords": "Class ListValue Namespace Ink.Runtime public class ListValue : Value<InkList> Inheritance object Object Value Value<InkList> ListValue Inherited Members Value<InkList>.value Value<InkList>.valueObject Value<InkList>.ToString() Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ListValue() public ListValue() ListValue(InkList) public ListValue(InkList list) Parameters list InkList ListValue(InkListItem, int) public ListValue(InkListItem singleItem, int singleValue) Parameters singleItem InkListItem singleValue int Properties isTruthy public override bool isTruthy { get; } Property Value bool valueType public override ValueType valueType { get; } Property Value ValueType Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value RetainListOriginsForAssignment(Object, Object) public static void RetainListOriginsForAssignment(Object oldValue, Object newValue) Parameters oldValue Object newValue Object"
  },
  "api/Ink.Runtime.NativeFunctionCall.html": {
    "href": "api/Ink.Runtime.NativeFunctionCall.html",
    "title": "Class NativeFunctionCall | Czasoport Documentation",
    "keywords": "Class NativeFunctionCall Namespace Ink.Runtime public class NativeFunctionCall : Object Inheritance object Object NativeFunctionCall Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NativeFunctionCall() public NativeFunctionCall() NativeFunctionCall(string) public NativeFunctionCall(string name) Parameters name string Fields Add public const string Add = \"+\" Field Value string All public const string All = \"LIST_ALL\" Field Value string And public const string And = \"&&\" Field Value string Ceiling public const string Ceiling = \"CEILING\" Field Value string Count public const string Count = \"LIST_COUNT\" Field Value string Divide public const string Divide = \"/\" Field Value string Equal public const string Equal = \"==\" Field Value string Float public const string Float = \"FLOAT\" Field Value string Floor public const string Floor = \"FLOOR\" Field Value string Greater public const string Greater = \">\" Field Value string GreaterThanOrEquals public const string GreaterThanOrEquals = \">=\" Field Value string Has public const string Has = \"?\" Field Value string Hasnt public const string Hasnt = \"!?\" Field Value string Int public const string Int = \"INT\" Field Value string Intersect public const string Intersect = \"^\" Field Value string Invert public const string Invert = \"LIST_INVERT\" Field Value string Less public const string Less = \"<\" Field Value string LessThanOrEquals public const string LessThanOrEquals = \"<=\" Field Value string ListMax public const string ListMax = \"LIST_MAX\" Field Value string ListMin public const string ListMin = \"LIST_MIN\" Field Value string Max public const string Max = \"MAX\" Field Value string Min public const string Min = \"MIN\" Field Value string Mod public const string Mod = \"%\" Field Value string Multiply public const string Multiply = \"*\" Field Value string Negate public const string Negate = \"_\" Field Value string Not public const string Not = \"!\" Field Value string NotEquals public const string NotEquals = \"!=\" Field Value string Or public const string Or = \"||\" Field Value string Pow public const string Pow = \"POW\" Field Value string Subtract public const string Subtract = \"-\" Field Value string ValueOfList public const string ValueOfList = \"LIST_VALUE\" Field Value string Properties name public string name { get; protected set; } Property Value string numberOfParameters public int numberOfParameters { get; protected set; } Property Value int Methods Call(List<Object>) public Object Call(List<Object> parameters) Parameters parameters List<Object> Returns Object CallExistsWithName(string) public static bool CallExistsWithName(string functionName) Parameters functionName string Returns bool CallWithName(string) public static NativeFunctionCall CallWithName(string functionName) Parameters functionName string Returns NativeFunctionCall ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Object.html": {
    "href": "api/Ink.Runtime.Object.html",
    "title": "Class Object | Czasoport Documentation",
    "keywords": "Class Object Namespace Ink.Runtime Base class for all ink runtime content. public class Object Inheritance object Object Derived Choice ChoicePoint Container ControlCommand Divert Glue NativeFunctionCall Story Tag Value VariableAssignment VariableReference Void Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Object() public Object() Properties debugMetadata public DebugMetadata debugMetadata { get; set; } Property Value DebugMetadata ownDebugMetadata public DebugMetadata ownDebugMetadata { get; } Property Value DebugMetadata parent Runtime.Objects can be included in the main Story as a hierarchy. Usually parents are Container objects. (TODO: Always?) public Object parent { get; set; } Property Value Object The parent. path public Path path { get; } Property Value Path rootContentContainer public Container rootContentContainer { get; } Property Value Container Methods CompactPathString(Path) public string CompactPathString(Path otherPath) Parameters otherPath Path Returns string ConvertPathToRelative(Path) public Path ConvertPathToRelative(Path globalPath) Parameters globalPath Path Returns Path Copy() public virtual Object Copy() Returns Object DebugLineNumberOfPath(Path) public int? DebugLineNumberOfPath(Path path) Parameters path Path Returns int? Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ResolvePath(Path) public SearchResult ResolvePath(Path path) Parameters path Path Returns SearchResult SetChild<T>(ref T, T) public void SetChild<T>(ref T obj, T value) where T : Object Parameters obj T value T Type Parameters T Operators operator ==(Object, Object) public static bool operator ==(Object a, Object b) Parameters a Object b Object Returns bool implicit operator bool(Object) public static implicit operator bool(Object obj) Parameters obj Object Returns bool operator !=(Object, Object) public static bool operator !=(Object a, Object b) Parameters a Object b Object Returns bool"
  },
  "api/Ink.Runtime.Path.Component.html": {
    "href": "api/Ink.Runtime.Path.Component.html",
    "title": "Class Path.Component | Czasoport Documentation",
    "keywords": "Class Path.Component Namespace Ink.Runtime public class Path.Component : IEquatable<Path.Component> Inheritance object Path.Component Implements IEquatable<Path.Component> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Component(int) public Component(int index) Parameters index int Component(string) public Component(string name) Parameters name string Properties index public int index { get; } Property Value int isIndex public bool isIndex { get; } Property Value bool isParent public bool isParent { get; } Property Value bool name public string name { get; } Property Value string Methods Equals(Component) Indicates whether the current object is equal to another object of the same type. public bool Equals(Path.Component otherComp) Parameters otherComp Path.Component Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. ToParent() public static Path.Component ToParent() Returns Path.Component ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Path.html": {
    "href": "api/Ink.Runtime.Path.html",
    "title": "Class Path | Czasoport Documentation",
    "keywords": "Class Path Namespace Ink.Runtime public class Path : IEquatable<Path> Inheritance object Path Implements IEquatable<Path> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Path() public Path() Path(Component, Path) public Path(Path.Component head, Path tail) Parameters head Path.Component tail Path Path(IEnumerable<Component>, bool) public Path(IEnumerable<Path.Component> components, bool relative = false) Parameters components IEnumerable<Path.Component> relative bool Path(string) public Path(string componentsString) Parameters componentsString string Properties componentsString public string componentsString { get; } Property Value string containsNamedComponent public bool containsNamedComponent { get; } Property Value bool head public Path.Component head { get; } Property Value Path.Component isRelative public bool isRelative { get; } Property Value bool lastComponent public Path.Component lastComponent { get; } Property Value Path.Component length public int length { get; } Property Value int self public static Path self { get; } Property Value Path tail public Path tail { get; } Property Value Path Methods Equals(Path) Indicates whether the current object is equal to another object of the same type. public bool Equals(Path otherPath) Parameters otherPath Path Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetComponent(int) public Path.Component GetComponent(int index) Parameters index int Returns Path.Component GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. PathByAppendingComponent(Component) public Path PathByAppendingComponent(Path.Component c) Parameters c Path.Component Returns Path PathByAppendingPath(Path) public Path PathByAppendingPath(Path pathToAppend) Parameters pathToAppend Path Returns Path ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Pointer.html": {
    "href": "api/Ink.Runtime.Pointer.html",
    "title": "Struct Pointer | Czasoport Documentation",
    "keywords": "Struct Pointer Namespace Ink.Runtime Internal structure used to point to a particular / current point in the story. Where Path is a set of components that make content fully addressable, this is a reference to the current container, and the index of the current piece of content within that container. This scheme makes it as fast and efficient as possible to increment the pointer (move the story forwards) in a way that's as native to the internal engine as possible. public struct Pointer Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Pointer(Container, int) public Pointer(Container container, int index) Parameters container Container index int Fields Null public static Pointer Null Field Value Pointer container public Container container Field Value Container index public int index Field Value int Properties isNull public bool isNull { get; } Property Value bool path public Path path { get; } Property Value Path Methods Resolve() public Object Resolve() Returns Object StartOf(Container) public static Pointer StartOf(Container container) Parameters container Container Returns Pointer ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/Ink.Runtime.ProfileNode.html": {
    "href": "api/Ink.Runtime.ProfileNode.html",
    "title": "Class ProfileNode | Czasoport Documentation",
    "keywords": "Class ProfileNode Namespace Ink.Runtime Node used in the hierarchical tree of timings used by the Profiler. Each node corresponds to a single line viewable in a UI-based representation. public class ProfileNode Inheritance object ProfileNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ProfileNode() public ProfileNode() ProfileNode(string) public ProfileNode(string key) Parameters key string Fields key The key for the node corresponds to the printable name of the callstack element. public readonly string key Field Value string openInUI Horribly hacky field only used by ink unity integration, but saves constructing an entire data structure that mirrors the one in here purely to store the state of whether each node in the UI has been opened or not /// public bool openInUI Field Value bool Properties descendingOrderedNodes Returns a sorted enumerable of the nodes in descending order of how long they took to run. public IEnumerable<KeyValuePair<string, ProfileNode>> descendingOrderedNodes { get; } Property Value IEnumerable<KeyValuePair<string, ProfileNode>> hasChildren Whether this node contains any sub-nodes - i.e. does it call anything else that has been recorded? public bool hasChildren { get; } Property Value bool true if has children; otherwise, false. ownReport Generates a string giving timing information for this single node, including total milliseconds spent on the piece of ink, the time spent within itself (v.s. spent in children), as well as the number of samples (instruction steps) recorded for both too. public string ownReport { get; } Property Value string The own report. totalMillisecs Total number of milliseconds this node has been active for. public int totalMillisecs { get; } Property Value int Methods AddSample(string[], double) public void AddSample(string[] stack, double duration) Parameters stack string[] duration double ToString() String is a report of the sub-tree from this node, but without any of the header information that's prepended by the Profiler in its Report() method. public override string ToString() Returns string"
  },
  "api/Ink.Runtime.Profiler.html": {
    "href": "api/Ink.Runtime.Profiler.html",
    "title": "Class Profiler | Czasoport Documentation",
    "keywords": "Class Profiler Namespace Ink.Runtime Simple ink profiler that logs every instruction in the story and counts frequency and timing. To use: var profiler = story.StartProfiling(), (play your story for a bit) var reportStr = profiler.Report(); story.EndProfiling(); public class Profiler Inheritance object Profiler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Profiler() public Profiler() Properties rootNode The root node in the hierarchical tree of recorded ink timings. public ProfileNode rootNode { get; } Property Value ProfileNode Methods FormatMillisecs(double) public static string FormatMillisecs(double num) Parameters num double Returns string Megalog() Create a large log of all the internal instructions that were evaluated while profiling was active. Log is in a tab-separated format, for easy loading into a spreadsheet application. public string Megalog() Returns string PostContinue() public void PostContinue() PostSnapshot() public void PostSnapshot() PostStep() public void PostStep() PreContinue() public void PreContinue() PreSnapshot() public void PreSnapshot() PreStep() public void PreStep() Report() Generate a printable report based on the data recording during profiling. public string Report() Returns string Step(CallStack) public void Step(CallStack callstack) Parameters callstack CallStack StepLengthReport() Generate a printable report specifying the average and maximum times spent stepping over different internal ink instruction types. This report type is primarily used to profile the ink engine itself rather than your own specific ink. public string StepLengthReport() Returns string"
  },
  "api/Ink.Runtime.PushPopType.html": {
    "href": "api/Ink.Runtime.PushPopType.html",
    "title": "Enum PushPopType | Czasoport Documentation",
    "keywords": "Enum PushPopType Namespace Ink.Runtime public enum PushPopType Fields Function = 1 FunctionEvaluationFromGame = 2 Tunnel = 0"
  },
  "api/Ink.Runtime.SearchResult.html": {
    "href": "api/Ink.Runtime.SearchResult.html",
    "title": "Struct SearchResult | Czasoport Documentation",
    "keywords": "Struct SearchResult Namespace Ink.Runtime public struct SearchResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields approximate public bool approximate Field Value bool obj public Object obj Field Value Object Properties container public Container container { get; } Property Value Container correctObj public Object correctObj { get; } Property Value Object"
  },
  "api/Ink.Runtime.SimpleJson.Writer.html": {
    "href": "api/Ink.Runtime.SimpleJson.Writer.html",
    "title": "Class SimpleJson.Writer | Czasoport Documentation",
    "keywords": "Class SimpleJson.Writer Namespace Ink.Runtime public class SimpleJson.Writer Inheritance object SimpleJson.Writer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Writer() public Writer() Writer(Stream) public Writer(Stream stream) Parameters stream Stream Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Write(bool) public void Write(bool b) Parameters b bool Write(int) public void Write(int i) Parameters i int Write(float) public void Write(float f) Parameters f float Write(string, bool) public void Write(string str, bool escape = true) Parameters str string escape bool WriteArrayEnd() public void WriteArrayEnd() WriteArrayStart() public void WriteArrayStart() WriteNull() public void WriteNull() WriteObject(Action<Writer>) public void WriteObject(Action<SimpleJson.Writer> inner) Parameters inner Action<SimpleJson.Writer> WriteObjectEnd() public void WriteObjectEnd() WriteObjectStart() public void WriteObjectStart() WriteProperty(int, Action<Writer>) public void WriteProperty(int id, Action<SimpleJson.Writer> inner) Parameters id int inner Action<SimpleJson.Writer> WriteProperty(string, Action<Writer>) public void WriteProperty(string name, Action<SimpleJson.Writer> inner) Parameters name string inner Action<SimpleJson.Writer> WriteProperty(string, bool) public void WriteProperty(string name, bool content) Parameters name string content bool WriteProperty(string, int) public void WriteProperty(string name, int content) Parameters name string content int WriteProperty(string, string) public void WriteProperty(string name, string content) Parameters name string content string WritePropertyEnd() public void WritePropertyEnd() WritePropertyNameEnd() public void WritePropertyNameEnd() WritePropertyNameInner(string) public void WritePropertyNameInner(string str) Parameters str string WritePropertyNameStart() public void WritePropertyNameStart() WritePropertyStart(int) public void WritePropertyStart(int id) Parameters id int WritePropertyStart(string) public void WritePropertyStart(string name) Parameters name string WriteStringEnd() public void WriteStringEnd() WriteStringInner(string, bool) public void WriteStringInner(string str, bool escape = true) Parameters str string escape bool WriteStringStart() public void WriteStringStart()"
  },
  "api/Ink.Runtime.SimpleJson.html": {
    "href": "api/Ink.Runtime.SimpleJson.html",
    "title": "Class SimpleJson | Czasoport Documentation",
    "keywords": "Class SimpleJson Namespace Ink.Runtime Simple custom JSON serialisation implementation that takes JSON-able System.Collections that are produced by the ink engine and converts to and from JSON text. public static class SimpleJson Inheritance object SimpleJson Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TextToArray(string) public static List<object> TextToArray(string text) Parameters text string Returns List<object> TextToDictionary(string) public static Dictionary<string, object> TextToDictionary(string text) Parameters text string Returns Dictionary<string, object>"
  },
  "api/Ink.Runtime.StatePatch.html": {
    "href": "api/Ink.Runtime.StatePatch.html",
    "title": "Class StatePatch | Czasoport Documentation",
    "keywords": "Class StatePatch Namespace Ink.Runtime public class StatePatch Inheritance object StatePatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StatePatch(StatePatch) public StatePatch(StatePatch toCopy) Parameters toCopy StatePatch Properties changedVariables public HashSet<string> changedVariables { get; } Property Value HashSet<string> globals public Dictionary<string, Object> globals { get; } Property Value Dictionary<string, Object> turnIndices public Dictionary<Container, int> turnIndices { get; } Property Value Dictionary<Container, int> visitCounts public Dictionary<Container, int> visitCounts { get; } Property Value Dictionary<Container, int> Methods AddChangedVariable(string) public void AddChangedVariable(string name) Parameters name string SetGlobal(string, Object) public void SetGlobal(string name, Object value) Parameters name string value Object SetTurnIndex(Container, int) public void SetTurnIndex(Container container, int index) Parameters container Container index int SetVisitCount(Container, int) public void SetVisitCount(Container container, int count) Parameters container Container count int TryGetGlobal(string, out Object) public bool TryGetGlobal(string name, out Object value) Parameters name string value Object Returns bool TryGetTurnIndex(Container, out int) public bool TryGetTurnIndex(Container container, out int index) Parameters container Container index int Returns bool TryGetVisitCount(Container, out int) public bool TryGetVisitCount(Container container, out int count) Parameters container Container count int Returns bool"
  },
  "api/Ink.Runtime.Story.ExternalFunction.html": {
    "href": "api/Ink.Runtime.Story.ExternalFunction.html",
    "title": "Delegate Story.ExternalFunction | Czasoport Documentation",
    "keywords": "Delegate Story.ExternalFunction Namespace Ink.Runtime General purpose delegate definition for bound EXTERNAL function definitions from ink. Note that this version isn't necessary if you have a function with three arguments or less - see the overloads of BindExternalFunction. public delegate object Story.ExternalFunction(object[] args) Parameters args object[] General purpose delegate definition for bound EXTERNAL function definitions from ink. Note that this version isn't necessary if you have a function with three arguments or less - see the overloads of BindExternalFunction. Returns object General purpose delegate definition for bound EXTERNAL function definitions from ink. Note that this version isn't necessary if you have a function with three arguments or less - see the overloads of BindExternalFunction."
  },
  "api/Ink.Runtime.Story.VariableObserver.html": {
    "href": "api/Ink.Runtime.Story.VariableObserver.html",
    "title": "Delegate Story.VariableObserver | Czasoport Documentation",
    "keywords": "Delegate Story.VariableObserver Namespace Ink.Runtime Delegate definition for variable observation - see ObserveVariable. public delegate void Story.VariableObserver(string variableName, object newValue) Parameters variableName string Delegate definition for variable observation - see ObserveVariable. newValue object Delegate definition for variable observation - see ObserveVariable."
  },
  "api/Ink.Runtime.Story.html": {
    "href": "api/Ink.Runtime.Story.html",
    "title": "Class Story | Czasoport Documentation",
    "keywords": "Class Story Namespace Ink.Runtime A Story is the core class that represents a complete Ink narrative, and manages the evaluation and state of it. public class Story : Object Inheritance object Object Story Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Story(Container, List<ListDefinition>) public Story(Container contentContainer, List<ListDefinition> lists = null) Parameters contentContainer Container lists List<ListDefinition> Story(string) Construct a Story object using a JSON string compiled through inklecate. public Story(string jsonString) Parameters jsonString string Fields inkVersionCurrent The current version of the ink story file format. public const int inkVersionCurrent = 21 Field Value int Properties aliveFlowNames Names of currently alive flows (not including the default flow) public List<string> aliveFlowNames { get; } Property Value List<string> allowExternalFunctionFallbacks An ink file can provide a fallback functions for when when an EXTERNAL has been left unbound by the client, and the fallback function will be called instead. Useful when testing a story in playmode, when it's not possible to write a client-side C# external function, but you don't want it to fail to run. public bool allowExternalFunctionFallbacks { get; set; } Property Value bool asyncContinueComplete If ContinueAsync was called (with milliseconds limit > 0) then this property will return false if the ink evaluation isn't yet finished, and you need to call it again in order for the Continue to fully complete. public bool asyncContinueComplete { get; } Property Value bool canContinue Check whether more content is available if you were to call Continue() - i.e. are we mid story rather than at a choice point or at the end. public bool canContinue { get; } Property Value bool true if it's possible to call Continue(). currentChoices The list of Choice objects available at the current point in the Story. This list will be populated as the Story is stepped through with the Continue() method. Once canContinue becomes false, this list will be populated, and is usually (but not always) on the final Continue() step. public List<Choice> currentChoices { get; } Property Value List<Choice> currentErrors Any errors generated during evaluation of the Story. public List<string> currentErrors { get; } Property Value List<string> currentFlowIsDefaultFlow Is the default flow currently active? By definition, will also return true if not using multi-flow functionality - see SwitchFlow public bool currentFlowIsDefaultFlow { get; } Property Value bool currentFlowName The current flow name if using multi-flow functionality - see SwitchFlow public string currentFlowName { get; } Property Value string currentTags Gets a list of tags as defined with '#' in source that were seen during the latest Continue() call. public List<string> currentTags { get; } Property Value List<string> currentText The latest line of text to be generated from a Continue() call. public string currentText { get; } Property Value string currentWarnings Any warnings generated during evaluation of the Story. public List<string> currentWarnings { get; } Property Value List<string> globalTags Get any global tags associated with the story. These are defined as hash tags defined at the very top of the story. public List<string> globalTags { get; } Property Value List<string> hasError Whether the currentErrors list contains any errors. THIS MAY BE REMOVED - you should be setting an error handler directly using Story.onError. public bool hasError { get; } Property Value bool hasWarning Whether the currentWarnings list contains any warnings. public bool hasWarning { get; } Property Value bool listDefinitions public ListDefinitionsOrigin listDefinitions { get; } Property Value ListDefinitionsOrigin mainContentContainer public Container mainContentContainer { get; } Property Value Container state The entire current state of the story including (but not limited to): Global variables Temporary variables Read/visit and turn counts The callstack and evaluation stacks The current threads public StoryState state { get; } Property Value StoryState variablesState The VariablesState object contains all the global variables in the story. However, note that there's more to the state of a Story than just the global variables. This is a convenience accessor to the full state object. public VariablesState variablesState { get; } Property Value VariablesState Methods BackgroundSaveComplete() See CopyStateForBackgroundThreadSave. This method releases the \"frozen\" save state, applying its patch that it was using internally. public void BackgroundSaveComplete() BindExternalFunction(string, Action, bool) Bind a C# Action to an ink EXTERNAL function declaration. public void BindExternalFunction(string funcName, Action act, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. act Action The C# action to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. BindExternalFunction(string, Func<object>, bool) Bind a C# function to an ink EXTERNAL function declaration. public void BindExternalFunction(string funcName, Func<object> func, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. func Func<object> The C# function to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. BindExternalFunctionGeneral(string, ExternalFunction, bool) Most general form of function binding that returns an object and takes an array of object parameters. The only way to bind a function with more than 3 arguments. public void BindExternalFunctionGeneral(string funcName, Story.ExternalFunction func, bool lookaheadSafe = true) Parameters funcName string EXTERNAL ink function name to bind to. func Story.ExternalFunction The C# function to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. BindExternalFunction<T>(string, Action<T>, bool) Bind a C# action to an ink EXTERNAL function declaration. public void BindExternalFunction<T>(string funcName, Action<T> act, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. act Action<T> The C# action to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T BindExternalFunction<T>(string, Func<T, object>, bool) Bind a C# function to an ink EXTERNAL function declaration. public void BindExternalFunction<T>(string funcName, Func<T, object> func, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. func Func<T, object> The C# function to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T BindExternalFunction<T1, T2>(string, Action<T1, T2>, bool) Bind a C# action to an ink EXTERNAL function declaration. public void BindExternalFunction<T1, T2>(string funcName, Action<T1, T2> act, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. act Action<T1, T2> The C# action to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T1 T2 BindExternalFunction<T1, T2>(string, Func<T1, T2, object>, bool) Bind a C# function to an ink EXTERNAL function declaration. public void BindExternalFunction<T1, T2>(string funcName, Func<T1, T2, object> func, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. func Func<T1, T2, object> The C# function to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T1 T2 BindExternalFunction<T1, T2, T3>(string, Action<T1, T2, T3>, bool) Bind a C# action to an ink EXTERNAL function declaration. public void BindExternalFunction<T1, T2, T3>(string funcName, Action<T1, T2, T3> act, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. act Action<T1, T2, T3> The C# action to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T1 T2 T3 BindExternalFunction<T1, T2, T3>(string, Func<T1, T2, T3, object>, bool) Bind a C# function to an ink EXTERNAL function declaration. public void BindExternalFunction<T1, T2, T3>(string funcName, Func<T1, T2, T3, object> func, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. func Func<T1, T2, T3, object> The C# function to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T1 T2 T3 BindExternalFunction<T1, T2, T3, T4>(string, Action<T1, T2, T3, T4>, bool) Bind a C# action to an ink EXTERNAL function declaration. public void BindExternalFunction<T1, T2, T3, T4>(string funcName, Action<T1, T2, T3, T4> act, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. act Action<T1, T2, T3, T4> The C# action to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T1 T2 T3 T4 BindExternalFunction<T1, T2, T3, T4>(string, Func<T1, T2, T3, T4, object>, bool) Bind a C# function to an ink EXTERNAL function declaration. public void BindExternalFunction<T1, T2, T3, T4>(string funcName, Func<T1, T2, T3, T4, object> func, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. func Func<T1, T2, T3, T4, object> The C# function to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T1 T2 T3 T4 BuildStringOfHierarchy() Useful when debugging a (very short) story, to visualise the state of the story. Add this call as a watch and open the extended text. A left-arrow mark will denote the current point of the story. It's only recommended that this is used on very short debug stories, since it can end up generate a large quantity of text otherwise. public virtual string BuildStringOfHierarchy() Returns string CallExternalFunction(string, int) public void CallExternalFunction(string funcName, int numberOfArguments) Parameters funcName string numberOfArguments int ChooseChoiceIndex(int) Chooses the Choice from the currentChoices list with the given index. Internally, this sets the current content path to that pointed to by the Choice, ready to continue story evaluation. public void ChooseChoiceIndex(int choiceIdx) Parameters choiceIdx int ChoosePath(Path, bool) public void ChoosePath(Path p, bool incrementingTurnIndex = true) Parameters p Path incrementingTurnIndex bool ChoosePathString(string, bool, params object[]) Change the current position of the story to the given path. From here you can call Continue() to evaluate the next line. The path string is a dot-separated path as used internally by the engine. These examples should work: myKnot myKnot.myStitch Note however that this won't necessarily work: myKnot.myStitch.myLabelledChoice ...because of the way that content is nested within a weave structure. By default this will reset the callstack beforehand, which means that any tunnels, threads or functions you were in at the time of calling will be discarded. This is different from the behaviour of ChooseChoiceIndex, which will always keep the callstack, since the choices are known to come from the correct state, and known their source thread. You have the option of passing false to the resetCallstack parameter if you don't want this behaviour, and will leave any active threads, tunnels or function calls in-tact. This is potentially dangerous! If you're in the middle of a tunnel, it'll redirect only the inner-most tunnel, meaning that when you tunnel-return using '->->', it'll return to where you were before. This may be what you want though. However, if you're in the middle of a function, ChoosePathString will throw an exception. public void ChoosePathString(string path, bool resetCallstack = true, params object[] arguments) Parameters path string A dot-separted path string, as specified above. resetCallstack bool Whether to reset the callstack first (see summary description). arguments object[] Optional set of arguments to pass, if path is to a knot that takes them. ContentAtPath(Path) public SearchResult ContentAtPath(Path path) Parameters path Path Returns SearchResult Continue() Continue the story for one line of content, if possible. If you're not sure if there's more content available, for example if you want to check whether you're at a choice point or at the end of the story, you should call canContinue before calling this function. public string Continue() Returns string The line of text content. ContinueAsync(float) An \"asnychronous\" version of Continue that only partially evaluates the ink, with a budget of a certain time limit. It will exit ink evaluation early if the evaluation isn't complete within the time limit, with the asyncContinueComplete property being false. This is useful if ink evaluation takes a long time, and you want to distribute it over multiple game frames for smoother animation. If you pass a limit of zero, then it will fully evaluate the ink in the same way as calling Continue (and in fact, this exactly what Continue does internally). public void ContinueAsync(float millisecsLimitAsync) Parameters millisecsLimitAsync float ContinueMaximally() Continue the story until the next choice point or until it runs out of content. This is as opposed to the Continue() method which only evaluates one line of output at a time. public string ContinueMaximally() Returns string The resulting text evaluated by the ink engine, concatenated together. CopyStateForBackgroundThreadSave() Advanced usage! If you have a large story, and saving state to JSON takes too long for your framerate, you can temporarily freeze a copy of the state for saving on a separate thread. Internally, the engine maintains a \"diff patch\". When you've finished saving your state, call BackgroundSaveComplete() and that diff patch will be applied, allowing the story to continue in its usual mode. public StoryState CopyStateForBackgroundThreadSave() Returns StoryState The state for background thread save. EndProfiling() Stop recording ink profiling information during calls to Continue on Story. To generate a report from the profiler, call public void EndProfiling() Error(string, bool) public void Error(string message, bool useEndLineNumber = false) Parameters message string useEndLineNumber bool EvaluateExpression(Container) public Object EvaluateExpression(Container exprContainer) Parameters exprContainer Container Returns Object EvaluateFunction(string, params object[]) Evaluates a function defined in ink. public object EvaluateFunction(string functionName, params object[] arguments) Parameters functionName string The name of the function as declared in ink. arguments object[] The arguments that the ink function takes, if any. Note that we don't (can't) do any validation on the number of arguments right now, so make sure you get it right! Returns object The return value as returned from the ink function with ~ return myValue, or null if nothing is returned. EvaluateFunction(string, out string, params object[]) Evaluates a function defined in ink, and gathers the possibly multi-line text as generated by the function. This text output is any text written as normal content within the function, as opposed to the return value, as returned with ~ return. public object EvaluateFunction(string functionName, out string textOutput, params object[] arguments) Parameters functionName string The name of the function as declared in ink. textOutput string The text content produced by the function via normal ink, if any. arguments object[] The arguments that the ink function takes, if any. Note that we don't (can't) do any validation on the number of arguments right now, so make sure you get it right! Returns object The return value as returned from the ink function with ~ return myValue, or null if nothing is returned. HasFunction(string) Checks if a function exists. public bool HasFunction(string functionName) Parameters functionName string The name of the function as declared in ink. Returns bool True if the function exists, else false. KnotContainerWithName(string) public Container KnotContainerWithName(string name) Parameters name string Returns Container ObserveVariable(string, VariableObserver) When the named global variable changes it's value, the observer will be called to notify it of the change. Note that if the value changes multiple times within the ink, the observer will only be called once, at the end of the ink's evaluation. If, during the evaluation, it changes and then changes back again to its original value, it will still be called. Note that the observer will also be fired if the value of the variable is changed externally to the ink, by directly setting a value in story.variablesState. public void ObserveVariable(string variableName, Story.VariableObserver observer) Parameters variableName string The name of the global variable to observe. observer Story.VariableObserver A delegate function to call when the variable changes. ObserveVariables(IList<string>, VariableObserver) Convenience function to allow multiple variables to be observed with the same observer delegate function. See the singular ObserveVariable for details. The observer will get one call for every variable that has changed. public void ObserveVariables(IList<string> variableNames, Story.VariableObserver observer) Parameters variableNames IList<string> The set of variables to observe. observer Story.VariableObserver The delegate function to call when any of the named variables change. PointerAtPath(Path) public Pointer PointerAtPath(Path path) Parameters path Path Returns Pointer RemoveFlow(string) public void RemoveFlow(string flowName) Parameters flowName string RemoveVariableObserver(VariableObserver, string) Removes the variable observer, to stop getting variable change notifications. If you pass a specific variable name, it will stop observing that particular one. If you pass null (or leave it blank, since it's optional), then the observer will be removed from all variables that it's subscribed to. If you pass in a specific variable name and null for the the observer, all observers for that variable will be removed. public void RemoveVariableObserver(Story.VariableObserver observer = null, string specificVariableName = null) Parameters observer Story.VariableObserver (Optional) The observer to stop observing. specificVariableName string (Optional) Specific variable name to stop observing. ResetCallstack() Unwinds the callstack. Useful to reset the Story's evaluation without actually changing any meaningful state, for example if you want to exit a section of story prematurely and tell it to go elsewhere with a call to ChoosePathString(...). Doing so without calling ResetCallstack() could cause unexpected issues if, for example, the Story was in a tunnel already. public void ResetCallstack() ResetState() Reset the Story back to its initial state as it was when it was first constructed. public void ResetState() StartProfiling() Start recording ink profiling information during calls to Continue on Story. Return a Profiler instance that you can request a report from when you're finished. public Profiler StartProfiling() Returns Profiler SwitchFlow(string) public void SwitchFlow(string flowName) Parameters flowName string SwitchToDefaultFlow() public void SwitchToDefaultFlow() TagsForContentAtPath(string) Gets any tags associated with a particular knot or knot.stitch. These are defined as hash tags defined at the very top of a knot or stitch. public List<string> TagsForContentAtPath(string path) Parameters path string The path of the knot or stitch, in the form \"knot\" or \"knot.stitch\". Returns List<string> ToJson() The Story itself in JSON representation. public string ToJson() Returns string ToJson(Stream) The Story itself in JSON representation. public void ToJson(Stream stream) Parameters stream Stream TryGetExternalFunction(string, out ExternalFunction) public bool TryGetExternalFunction(string functionName, out Story.ExternalFunction externalFunction) Parameters functionName string externalFunction Story.ExternalFunction Returns bool UnbindExternalFunction(string) Remove a binding for a named EXTERNAL ink function. public void UnbindExternalFunction(string funcName) Parameters funcName string ValidateExternalBindings() Check that all EXTERNAL ink functions have a valid bound C# function. Note that this is automatically called on the first call to Continue(). public void ValidateExternalBindings() Warning(string) public void Warning(string message) Parameters message string Events onChoosePathString Callback for when a path string is chosen public event Action<string, object[]> onChoosePathString Event Type Action<string, object[]> onCompleteEvaluateFunction Callback for when a function has been evaluated This is necessary because evaluating a function can cause continuing public event Action<string, object[], string, object> onCompleteEvaluateFunction Event Type Action<string, object[], string, object> onDidContinue Callback for when ContinueInternal is complete public event Action onDidContinue Event Type Action onError Error handler for all runtime errors in ink - i.e. problems with the source ink itself that are only discovered when playing the story. It's strongly recommended that you assign an error handler to your story instance to avoid getting exceptions for ink errors. public event ErrorHandler onError Event Type ErrorHandler onEvaluateFunction Callback for when a function is about to be evaluated public event Action<string, object[]> onEvaluateFunction Event Type Action<string, object[]> onMakeChoice Callback for when a choice is about to be executed public event Action<Choice> onMakeChoice Event Type Action<Choice>"
  },
  "api/Ink.Runtime.StoryException.html": {
    "href": "api/Ink.Runtime.StoryException.html",
    "title": "Class StoryException | Czasoport Documentation",
    "keywords": "Class StoryException Namespace Ink.Runtime Exception that represents an error when running a Story at runtime. An exception being thrown of this type is typically when there's a bug in your ink, rather than in the ink engine itself! public class StoryException : Exception, ISerializable Inheritance object Exception StoryException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StoryException() Constructs a default instance of a StoryException without a message. public StoryException() StoryException(string) Constructs an instance of a StoryException with a message. public StoryException(string message) Parameters message string The error message. Fields useEndLineNumber public bool useEndLineNumber Field Value bool"
  },
  "api/Ink.Runtime.StoryState.html": {
    "href": "api/Ink.Runtime.StoryState.html",
    "title": "Class StoryState | Czasoport Documentation",
    "keywords": "Class StoryState Namespace Ink.Runtime All story state information is included in the StoryState class, including global variables, read counts, the pointer to the current point in the story, the call stack (for tunnels, functions, etc), and a few other smaller bits and pieces. You can save the current state using the json serialisation functions ToJson and LoadJson. public class StoryState Inheritance object StoryState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StoryState(Story) public StoryState(Story story) Parameters story Story Fields kInkSaveStateVersion The current version of the state save file JSON-based format. public const int kInkSaveStateVersion = 10 Field Value int Properties aliveFlowNames public List<string> aliveFlowNames { get; } Property Value List<string> callStack public CallStack callStack { get; } Property Value CallStack callstackDepth public int callstackDepth { get; } Property Value int canContinue public bool canContinue { get; } Property Value bool currentChoices public List<Choice> currentChoices { get; } Property Value List<Choice> currentErrors public List<string> currentErrors { get; } Property Value List<string> currentFlowIsDefaultFlow public bool currentFlowIsDefaultFlow { get; } Property Value bool currentFlowName public string currentFlowName { get; } Property Value string currentPathString String representation of the location where the story currently is. public string currentPathString { get; } Property Value string currentPointer public Pointer currentPointer { get; set; } Property Value Pointer currentTags public List<string> currentTags { get; } Property Value List<string> currentText public string currentText { get; } Property Value string currentTurnIndex public int currentTurnIndex { get; } Property Value int currentWarnings public List<string> currentWarnings { get; } Property Value List<string> didSafeExit public bool didSafeExit { get; set; } Property Value bool divertedPointer public Pointer divertedPointer { get; set; } Property Value Pointer evaluationStack public List<Object> evaluationStack { get; } Property Value List<Object> generatedChoices public List<Choice> generatedChoices { get; } Property Value List<Choice> hasError public bool hasError { get; } Property Value bool hasWarning public bool hasWarning { get; } Property Value bool inExpressionEvaluation public bool inExpressionEvaluation { get; set; } Property Value bool inStringEvaluation public bool inStringEvaluation { get; } Property Value bool outputStream public List<Object> outputStream { get; } Property Value List<Object> outputStreamContainsContent public bool outputStreamContainsContent { get; } Property Value bool outputStreamEndsInNewline public bool outputStreamEndsInNewline { get; } Property Value bool previousPointer public Pointer previousPointer { get; set; } Property Value Pointer previousRandom public int previousRandom { get; set; } Property Value int story public Story story { get; set; } Property Value Story storySeed public int storySeed { get; set; } Property Value int variablesState public VariablesState variablesState { get; } Property Value VariablesState Methods AddError(string, bool) public void AddError(string message, bool isWarning) Parameters message string isWarning bool ApplyAnyPatch() public void ApplyAnyPatch() CleanOutputWhitespace(string) public string CleanOutputWhitespace(string str) Parameters str string Returns string CompleteFunctionEvaluationFromGame() public object CompleteFunctionEvaluationFromGame() Returns object CopyAndStartPatching() public StoryState CopyAndStartPatching() Returns StoryState ForceEnd() Ends the current ink flow, unwrapping the callstack but without affecting any variables. Useful if the ink is (say) in the middle a nested tunnel, and you want it to reset so that you can divert elsewhere using ChoosePathString(). Otherwise, after finishing the content you diverted to, it would continue where it left off. Calling this is equivalent to calling -> END in ink. public void ForceEnd() GoToStart() public void GoToStart() IncrementVisitCountForContainer(Container) public void IncrementVisitCountForContainer(Container container) Parameters container Container LoadJson(string) Loads a previously saved state in JSON format. public void LoadJson(string json) Parameters json string The JSON string to load. PassArgumentsToEvaluationStack(params object[]) public void PassArgumentsToEvaluationStack(params object[] arguments) Parameters arguments object[] PeekEvaluationStack() public Object PeekEvaluationStack() Returns Object PopCallstack(PushPopType?) public void PopCallstack(PushPopType? popType = null) Parameters popType PushPopType? PopEvaluationStack() public Object PopEvaluationStack() Returns Object PopEvaluationStack(int) public List<Object> PopEvaluationStack(int numberOfObjects) Parameters numberOfObjects int Returns List<Object> PopFromOutputStream(int) public void PopFromOutputStream(int count) Parameters count int PushEvaluationStack(Object) public void PushEvaluationStack(Object obj) Parameters obj Object PushToOutputStream(Object) public void PushToOutputStream(Object obj) Parameters obj Object RecordTurnIndexVisitToContainer(Container) public void RecordTurnIndexVisitToContainer(Container container) Parameters container Container ResetErrors() public void ResetErrors() ResetOutput(List<Object>) public void ResetOutput(List<Object> objs = null) Parameters objs List<Object> RestoreAfterPatch() public void RestoreAfterPatch() SetChosenPath(Path, bool) public void SetChosenPath(Path path, bool incrementingTurnIndex) Parameters path Path incrementingTurnIndex bool StartFunctionEvaluationFromGame(Container, params object[]) public void StartFunctionEvaluationFromGame(Container funcContainer, params object[] arguments) Parameters funcContainer Container arguments object[] ToJson() Exports the current state to json format, in order to save the game. public string ToJson() Returns string The save state in json format. ToJson(Stream) Exports the current state to json format, in order to save the game. For this overload you can pass in a custom stream, such as a FileStream. public void ToJson(Stream stream) Parameters stream Stream TryExitFunctionEvaluationFromGame() public bool TryExitFunctionEvaluationFromGame() Returns bool TurnsSinceForContainer(Container) public int TurnsSinceForContainer(Container container) Parameters container Container Returns int VisitCountAtPathString(string) Gets the visit/read count of a particular Container at the given path. For a knot or stitch, that path string will be in the form: knot knot.stitch public int VisitCountAtPathString(string pathString) Parameters pathString string The dot-separated path string of the specific knot or stitch. Returns int The number of times the specific knot or stitch has been enountered by the ink engine. VisitCountForContainer(Container) public int VisitCountForContainer(Container container) Parameters container Container Returns int Events onDidLoadState Callback for when a state is loaded public event Action onDidLoadState Event Type Action"
  },
  "api/Ink.Runtime.StringExt.html": {
    "href": "api/Ink.Runtime.StringExt.html",
    "title": "Class StringExt | Czasoport Documentation",
    "keywords": "Class StringExt Namespace Ink.Runtime public static class StringExt Inheritance object StringExt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Join<T>(string, List<T>) public static string Join<T>(string separator, List<T> objects) Parameters separator string objects List<T> Returns string Type Parameters T"
  },
  "api/Ink.Runtime.StringValue.html": {
    "href": "api/Ink.Runtime.StringValue.html",
    "title": "Class StringValue | Czasoport Documentation",
    "keywords": "Class StringValue Namespace Ink.Runtime public class StringValue : Value<string> Inheritance object Object Value Value<string> StringValue Inherited Members Value<string>.value Value<string>.valueObject Value<string>.ToString() Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StringValue() public StringValue() StringValue(string) public StringValue(string str) Parameters str string Properties isInlineWhitespace public bool isInlineWhitespace { get; } Property Value bool isNewline public bool isNewline { get; } Property Value bool isNonWhitespace public bool isNonWhitespace { get; } Property Value bool isTruthy public override bool isTruthy { get; } Property Value bool valueType public override ValueType valueType { get; } Property Value ValueType Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value"
  },
  "api/Ink.Runtime.Tag.html": {
    "href": "api/Ink.Runtime.Tag.html",
    "title": "Class Tag | Czasoport Documentation",
    "keywords": "Class Tag Namespace Ink.Runtime public class Tag : Object Inheritance object Object Tag Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Tag(string) public Tag(string tagText) Parameters tagText string Properties text public string text { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Value-1.html": {
    "href": "api/Ink.Runtime.Value-1.html",
    "title": "Class Value<T> | Czasoport Documentation",
    "keywords": "Class Value<T> Namespace Ink.Runtime public abstract class Value<T> : Value Type Parameters T Inheritance object Object Value Value<T> Derived BoolValue DivertTargetValue FloatValue IntValue ListValue StringValue VariablePointerValue Inherited Members Value.valueType Value.isTruthy Value.Cast(ValueType) Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Value(T) public Value(T val) Parameters val T Properties value public T value { get; set; } Property Value T valueObject public override object valueObject { get; } Property Value object Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Value.html": {
    "href": "api/Ink.Runtime.Value.html",
    "title": "Class Value | Czasoport Documentation",
    "keywords": "Class Value Namespace Ink.Runtime public abstract class Value : Object Inheritance object Object Value Derived Value<T> Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties isTruthy public abstract bool isTruthy { get; } Property Value bool valueObject public abstract object valueObject { get; } Property Value object valueType public abstract ValueType valueType { get; } Property Value ValueType Methods BadCastException(ValueType) protected StoryException BadCastException(ValueType targetType) Parameters targetType ValueType Returns StoryException Cast(ValueType) public abstract Value Cast(ValueType newType) Parameters newType ValueType Returns Value Copy() public override Object Copy() Returns Object Create(object) public static Value Create(object val) Parameters val object Returns Value"
  },
  "api/Ink.Runtime.ValueType.html": {
    "href": "api/Ink.Runtime.ValueType.html",
    "title": "Enum ValueType | Czasoport Documentation",
    "keywords": "Enum ValueType Namespace Ink.Runtime public enum ValueType Fields Bool = -1 DivertTarget = 4 Float = 1 Int = 0 List = 2 String = 3 VariablePointer = 5"
  },
  "api/Ink.Runtime.VariableAssignment.html": {
    "href": "api/Ink.Runtime.VariableAssignment.html",
    "title": "Class VariableAssignment | Czasoport Documentation",
    "keywords": "Class VariableAssignment Namespace Ink.Runtime public class VariableAssignment : Object Inheritance object Object VariableAssignment Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VariableAssignment() public VariableAssignment() VariableAssignment(string, bool) public VariableAssignment(string variableName, bool isNewDeclaration) Parameters variableName string isNewDeclaration bool Properties isGlobal public bool isGlobal { get; set; } Property Value bool isNewDeclaration public bool isNewDeclaration { get; protected set; } Property Value bool variableName public string variableName { get; protected set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.VariablePointerValue.html": {
    "href": "api/Ink.Runtime.VariablePointerValue.html",
    "title": "Class VariablePointerValue | Czasoport Documentation",
    "keywords": "Class VariablePointerValue Namespace Ink.Runtime public class VariablePointerValue : Value<string> Inheritance object Object Value Value<string> VariablePointerValue Inherited Members Value<string>.value Value<string>.valueObject Value.Create(object) Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VariablePointerValue() public VariablePointerValue() VariablePointerValue(string, int) public VariablePointerValue(string variableName, int contextIndex = -1) Parameters variableName string contextIndex int Properties contextIndex public int contextIndex { get; set; } Property Value int isTruthy public override bool isTruthy { get; } Property Value bool valueType public override ValueType valueType { get; } Property Value ValueType variableName public string variableName { get; set; } Property Value string Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value Copy() public override Object Copy() Returns Object ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.VariableReference.html": {
    "href": "api/Ink.Runtime.VariableReference.html",
    "title": "Class VariableReference | Czasoport Documentation",
    "keywords": "Class VariableReference Namespace Ink.Runtime public class VariableReference : Object Inheritance object Object VariableReference Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VariableReference() public VariableReference() VariableReference(string) public VariableReference(string name) Parameters name string Properties containerForCount public Container containerForCount { get; } Property Value Container name public string name { get; set; } Property Value string pathForCount public Path pathForCount { get; set; } Property Value Path pathStringForCount public string pathStringForCount { get; set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.VariablesState.VariableChanged.html": {
    "href": "api/Ink.Runtime.VariablesState.VariableChanged.html",
    "title": "Delegate VariablesState.VariableChanged | Czasoport Documentation",
    "keywords": "Delegate VariablesState.VariableChanged Namespace Ink.Runtime public delegate void VariablesState.VariableChanged(string variableName, Object newValue) Parameters variableName string newValue Object"
  },
  "api/Ink.Runtime.VariablesState.html": {
    "href": "api/Ink.Runtime.VariablesState.html",
    "title": "Class VariablesState | Czasoport Documentation",
    "keywords": "Class VariablesState Namespace Ink.Runtime Encompasses all the global variables in an ink Story, and allows binding of a VariableChanged event so that that game code can be notified whenever the global variables change. public class VariablesState : IEnumerable<string>, IEnumerable Inheritance object VariablesState Implements IEnumerable<string> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VariablesState(CallStack, ListDefinitionsOrigin) public VariablesState(CallStack callStack, ListDefinitionsOrigin listDefsOrigin) Parameters callStack CallStack listDefsOrigin ListDefinitionsOrigin Fields dontSaveDefaultValues When saving out JSON state, we can skip saving global values that remain equal to the initial values that were declared in ink. This makes the save file (potentially) much smaller assuming that at least a portion of the globals haven't changed. However, it can also take marginally longer to save in the case that the majority HAVE changed, since it has to compare all globals. It may also be useful to turn this off for testing worst case save timing. public static bool dontSaveDefaultValues Field Value bool patch public StatePatch patch Field Value StatePatch Properties this[string] Get or set the value of a named global ink variable. The types available are the standard ink types. Certain types will be implicitly casted when setting. For example, doubles to floats, longs to ints, and bools to ints. public object this[string variableName] { get; set; } Parameters variableName string Property Value object batchObservingVariableChanges public bool batchObservingVariableChanges { get; set; } Property Value bool callStack public CallStack callStack { get; set; } Property Value CallStack Methods ApplyPatch() public void ApplyPatch() Assign(VariableAssignment, Object) public void Assign(VariableAssignment varAss, Object value) Parameters varAss VariableAssignment value Object GetEnumerator() Enumerator to allow iteration over all global variables by name. public IEnumerator<string> GetEnumerator() Returns IEnumerator<string> GetVariableWithName(string) public Object GetVariableWithName(string name) Parameters name string Returns Object GlobalVariableExistsWithName(string) public bool GlobalVariableExistsWithName(string name) Parameters name string Returns bool RuntimeObjectsEqual(Object, Object) public bool RuntimeObjectsEqual(Object obj1, Object obj2) Parameters obj1 Object obj2 Object Returns bool SetGlobal(string, Object) public void SetGlobal(string variableName, Object value) Parameters variableName string value Object SetJsonToken(Dictionary<string, object>) public void SetJsonToken(Dictionary<string, object> jToken) Parameters jToken Dictionary<string, object> SnapshotDefaultGlobals() public void SnapshotDefaultGlobals() TryGetDefaultVariableValue(string) public Object TryGetDefaultVariableValue(string name) Parameters name string Returns Object ValueAtVariablePointer(VariablePointerValue) public Object ValueAtVariablePointer(VariablePointerValue pointer) Parameters pointer VariablePointerValue Returns Object WriteJson(Writer) public void WriteJson(SimpleJson.Writer writer) Parameters writer SimpleJson.Writer Events variableChangedEvent public event VariablesState.VariableChanged variableChangedEvent Event Type VariablesState.VariableChanged"
  },
  "api/Ink.Runtime.Void.html": {
    "href": "api/Ink.Runtime.Void.html",
    "title": "Class Void | Czasoport Documentation",
    "keywords": "Class Void Namespace Ink.Runtime public class Void : Object Inheritance object Object Void Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Void() public Void()"
  },
  "api/Ink.Runtime.html": {
    "href": "api/Ink.Runtime.html",
    "title": "Namespace Ink.Runtime | Czasoport Documentation",
    "keywords": "Namespace Ink.Runtime Classes BoolValue CallStack CallStack.Element CallStack.Thread Choice A generated Choice from the story. A single ChoicePoint in the Story could potentially generate different Choices dynamically dependent on state, so they're separated. ChoicePoint The ChoicePoint represents the point within the Story where a Choice instance gets generated. The distinction is made because the text of the Choice can be dynamically generated. Container ControlCommand DebugMetadata Divert DivertTargetValue FloatValue Flow Glue InkList The InkList is the underlying type that's used to store an instance of a list in ink. It's not used for the definition of the list, but for a list value that's stored in a variable. Somewhat confusingly, it's backed by a C# Dictionary, and has nothing to do with a C# List! IntValue Json ListDefinition ListDefinitionsOrigin ListValue NativeFunctionCall Object Base class for all ink runtime content. Path Path.Component ProfileNode Node used in the hierarchical tree of timings used by the Profiler. Each node corresponds to a single line viewable in a UI-based representation. Profiler Simple ink profiler that logs every instruction in the story and counts frequency and timing. To use: var profiler = story.StartProfiling(), (play your story for a bit) var reportStr = profiler.Report(); story.EndProfiling(); SimpleJson Simple custom JSON serialisation implementation that takes JSON-able System.Collections that are produced by the ink engine and converts to and from JSON text. SimpleJson.Writer StatePatch Story A Story is the core class that represents a complete Ink narrative, and manages the evaluation and state of it. StoryException Exception that represents an error when running a Story at runtime. An exception being thrown of this type is typically when there's a bug in your ink, rather than in the ink engine itself! StoryState All story state information is included in the StoryState class, including global variables, read counts, the pointer to the current point in the story, the call stack (for tunnels, functions, etc), and a few other smaller bits and pieces. You can save the current state using the json serialisation functions ToJson and LoadJson. StringExt StringValue Tag Value Value<T> VariableAssignment VariablePointerValue VariableReference VariablesState Encompasses all the global variables in an ink Story, and allows binding of a VariableChanged event so that that game code can be notified whenever the global variables change. Void Structs InkListItem The underlying type for a list item in ink. It stores the original list definition name as well as the item name, but without the value of the item. When the value is stored, it's stored in a KeyValuePair of InkListItem and int. Pointer Internal structure used to point to a particular / current point in the story. Where Path is a set of components that make content fully addressable, this is a reference to the current container, and the index of the current piece of content within that container. This scheme makes it as fast and efficient as possible to increment the pointer (move the story forwards) in a way that's as native to the internal engine as possible. SearchResult Interfaces INamedContent Enums Container.CountFlags ControlCommand.CommandType PushPopType ValueType Delegates Story.ExternalFunction General purpose delegate definition for bound EXTERNAL function definitions from ink. Note that this version isn't necessary if you have a function with three arguments or less - see the overloads of BindExternalFunction. Story.VariableObserver Delegate definition for variable observation - see ObserveVariable. VariablesState.VariableChanged"
  },
  "api/Ink.Stats.html": {
    "href": "api/Ink.Stats.html",
    "title": "Struct Stats | Czasoport Documentation",
    "keywords": "Struct Stats Namespace Ink public struct Stats Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields choices public int choices Field Value int diverts public int diverts Field Value int functions public int functions Field Value int gathers public int gathers Field Value int knots public int knots Field Value int stitches public int stitches Field Value int words public int words Field Value int Methods Generate(Story) public static Stats Generate(Story story) Parameters story Story Returns Stats"
  },
  "api/Ink.StringParser.ErrorHandler.html": {
    "href": "api/Ink.StringParser.ErrorHandler.html",
    "title": "Delegate StringParser.ErrorHandler | Czasoport Documentation",
    "keywords": "Delegate StringParser.ErrorHandler Namespace Ink public delegate void StringParser.ErrorHandler(string message, int index, int lineIndex, bool isWarning) Parameters message string index int lineIndex int isWarning bool"
  },
  "api/Ink.StringParser.ParseRule.html": {
    "href": "api/Ink.StringParser.ParseRule.html",
    "title": "Delegate StringParser.ParseRule | Czasoport Documentation",
    "keywords": "Delegate StringParser.ParseRule Namespace Ink public delegate object StringParser.ParseRule() Returns object"
  },
  "api/Ink.StringParser.ParseSuccessStruct.html": {
    "href": "api/Ink.StringParser.ParseSuccessStruct.html",
    "title": "Class StringParser.ParseSuccessStruct | Czasoport Documentation",
    "keywords": "Class StringParser.ParseSuccessStruct Namespace Ink public class StringParser.ParseSuccessStruct Inheritance object StringParser.ParseSuccessStruct Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Ink.StringParser.SpecificParseRule-1.html": {
    "href": "api/Ink.StringParser.SpecificParseRule-1.html",
    "title": "Delegate StringParser.SpecificParseRule<T> | Czasoport Documentation",
    "keywords": "Delegate StringParser.SpecificParseRule<T> Namespace Ink public delegate T StringParser.SpecificParseRule<T>() where T : class Returns T Type Parameters T"
  },
  "api/Ink.StringParser.html": {
    "href": "api/Ink.StringParser.html",
    "title": "Class StringParser | Czasoport Documentation",
    "keywords": "Class StringParser Namespace Ink public class StringParser Inheritance object StringParser Derived CommentEliminator InkParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StringParser(string) public StringParser(string str) Parameters str string Fields ParseSuccess public static StringParser.ParseSuccessStruct ParseSuccess Field Value StringParser.ParseSuccessStruct numbersCharacterSet public static CharacterSet numbersCharacterSet Field Value CharacterSet Properties characterInLineIndex public int characterInLineIndex { get; set; } Property Value int currentCharacter public char currentCharacter { get; } Property Value char endOfInput public bool endOfInput { get; } Property Value bool errorHandler protected StringParser.ErrorHandler errorHandler { get; set; } Property Value StringParser.ErrorHandler hadError public bool hadError { get; protected set; } Property Value bool index public int index { get; } Property Value int inputString public string inputString { get; } Property Value string lineIndex public int lineIndex { get; set; } Property Value int remainingLength public int remainingLength { get; } Property Value int remainingString public string remainingString { get; } Property Value string state public StringParserState state { get; } Property Value StringParserState Methods BeginRule() protected int BeginRule() Returns int CancelRule(int) protected void CancelRule(int expectedRuleId) Parameters expectedRuleId int Error(string, bool) protected void Error(string message, bool isWarning = false) Parameters message string isWarning bool ErrorOnLine(string, int, bool) protected void ErrorOnLine(string message, int lineNumber, bool isWarning) Parameters message string lineNumber int isWarning bool ErrorWithParsedObject(string, Object, bool) protected void ErrorWithParsedObject(string message, Object result, bool isWarning = false) Parameters message string result Object isWarning bool Exclude(ParseRule) public StringParser.ParseRule Exclude(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns StringParser.ParseRule Expect(ParseRule, string, ParseRule) protected object Expect(StringParser.ParseRule rule, string message = null, StringParser.ParseRule recoveryRule = null) Parameters rule StringParser.ParseRule message string recoveryRule StringParser.ParseRule Returns object FailRule(int) protected object FailRule(int expectedRuleId) Parameters expectedRuleId int Returns object GetFlag(uint) public bool GetFlag(uint flag) Parameters flag uint Returns bool Interleave<T>(ParseRule, ParseRule, ParseRule, bool) public List<T> Interleave<T>(StringParser.ParseRule ruleA, StringParser.ParseRule ruleB, StringParser.ParseRule untilTerminator = null, bool flatten = true) Parameters ruleA StringParser.ParseRule ruleB StringParser.ParseRule untilTerminator StringParser.ParseRule flatten bool Returns List<T> Type Parameters T LineRemainder() public string LineRemainder() Returns string OneOf(params ParseRule[]) public object OneOf(params StringParser.ParseRule[] array) Parameters array ParseRule[] Returns object OneOrMore(ParseRule) public List<object> OneOrMore(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns List<object> Optional(ParseRule) public StringParser.ParseRule Optional(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns StringParser.ParseRule OptionalExclude(ParseRule) public StringParser.ParseRule OptionalExclude(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns StringParser.ParseRule ParseCharactersFromCharSet(CharacterSet, bool, int) public string ParseCharactersFromCharSet(CharacterSet charSet, bool shouldIncludeChars = true, int maxCount = -1) Parameters charSet CharacterSet shouldIncludeChars bool maxCount int Returns string ParseCharactersFromString(string, bool, int) public string ParseCharactersFromString(string str, bool shouldIncludeStrChars, int maxCount = -1) Parameters str string shouldIncludeStrChars bool maxCount int Returns string ParseCharactersFromString(string, int) public string ParseCharactersFromString(string str, int maxCount = -1) Parameters str string maxCount int Returns string ParseFloat() public float? ParseFloat() Returns float? ParseInt() public int? ParseInt() Returns int? ParseNewline() protected string ParseNewline() Returns string ParseObject(ParseRule) public object ParseObject(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns object ParseSingleCharacter() public char ParseSingleCharacter() Returns char ParseString(string) public string ParseString(string str) Parameters str string Returns string ParseUntil(ParseRule, CharacterSet, CharacterSet) public string ParseUntil(StringParser.ParseRule stopRule, CharacterSet pauseCharacters = null, CharacterSet endCharacters = null) Parameters stopRule StringParser.ParseRule pauseCharacters CharacterSet endCharacters CharacterSet Returns string ParseUntilCharactersFromCharSet(CharacterSet, int) public string ParseUntilCharactersFromCharSet(CharacterSet charSet, int maxCount = -1) Parameters charSet CharacterSet maxCount int Returns string ParseUntilCharactersFromString(string, int) public string ParseUntilCharactersFromString(string str, int maxCount = -1) Parameters str string maxCount int Returns string Parse<T>(SpecificParseRule<T>) public T Parse<T>(StringParser.SpecificParseRule<T> rule) where T : class Parameters rule StringParser.SpecificParseRule<T> Returns T Type Parameters T Peek(ParseRule) public object Peek(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns object PreProcessInputString(string) protected virtual string PreProcessInputString(string str) Parameters str string Returns string RuleDidSucceed(object, Element, Element) protected virtual void RuleDidSucceed(object result, StringParserState.Element startState, StringParserState.Element endState) Parameters result object startState StringParserState.Element endState StringParserState.Element SetFlag(uint, bool) public void SetFlag(uint flag, bool trueOrFalse) Parameters flag uint trueOrFalse bool String(string) protected StringParser.ParseRule String(string str) Parameters str string Returns StringParser.ParseRule SucceedRule(int, object) protected object SucceedRule(int expectedRuleId, object result = null) Parameters expectedRuleId int result object Returns object Warning(string) protected void Warning(string message) Parameters message string"
  },
  "api/Ink.StringParserState.Element.html": {
    "href": "api/Ink.StringParserState.Element.html",
    "title": "Class StringParserState.Element | Czasoport Documentation",
    "keywords": "Class StringParserState.Element Namespace Ink public class StringParserState.Element Inheritance object StringParserState.Element Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Element() public Element() Fields characterInLineIndex public int characterInLineIndex Field Value int characterIndex public int characterIndex Field Value int customFlags public uint customFlags Field Value uint lineIndex public int lineIndex Field Value int reportedErrorInScope public bool reportedErrorInScope Field Value bool uniqueId public int uniqueId Field Value int Methods CopyFrom(Element) public void CopyFrom(StringParserState.Element fromElement) Parameters fromElement StringParserState.Element SquashFrom(Element) public void SquashFrom(StringParserState.Element fromElement) Parameters fromElement StringParserState.Element"
  },
  "api/Ink.StringParserState.html": {
    "href": "api/Ink.StringParserState.html",
    "title": "Class StringParserState | Czasoport Documentation",
    "keywords": "Class StringParserState Namespace Ink public class StringParserState Inheritance object StringParserState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StringParserState() public StringParserState() Properties characterInLineIndex public int characterInLineIndex { get; set; } Property Value int characterIndex public int characterIndex { get; set; } Property Value int currentElement protected StringParserState.Element currentElement { get; } Property Value StringParserState.Element customFlags public uint customFlags { get; set; } Property Value uint errorReportedAlreadyInScope public bool errorReportedAlreadyInScope { get; } Property Value bool lineIndex public int lineIndex { get; set; } Property Value int stackHeight public int stackHeight { get; } Property Value int Methods NoteErrorReported() public void NoteErrorReported() Peek(int) public StringParserState.Element Peek(int expectedRuleId) Parameters expectedRuleId int Returns StringParserState.Element PeekPenultimate() public StringParserState.Element PeekPenultimate() Returns StringParserState.Element Pop(int) public void Pop(int expectedRuleId) Parameters expectedRuleId int Push() public int Push() Returns int Squash() public void Squash()"
  },
  "api/Ink.UnityIntegration.ColoredBackgroundGUIStyle.html": {
    "href": "api/Ink.UnityIntegration.ColoredBackgroundGUIStyle.html",
    "title": "Class ColoredBackgroundGUIStyle | Czasoport Documentation",
    "keywords": "Class ColoredBackgroundGUIStyle Namespace Ink.UnityIntegration public class ColoredBackgroundGUIStyle Inheritance object ColoredBackgroundGUIStyle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ColoredBackgroundGUIStyle(Color) public ColoredBackgroundGUIStyle(Color color) Parameters color Color ColoredBackgroundGUIStyle(Color, Color) public ColoredBackgroundGUIStyle(Color colorFree, Color colorPro) Parameters colorFree Color colorPro Color ColoredBackgroundGUIStyle(Color, Color, Color, Color) public ColoredBackgroundGUIStyle(Color colorFree, Color colorPro, Color hoverColorFree, Color hoverColorPro) Parameters colorFree Color colorPro Color hoverColorFree Color hoverColorPro Color Fields guiStyle public GUIStyle guiStyle Field Value GUIStyle"
  },
  "api/Ink.UnityIntegration.Debugging.InkHistoryContentItem.ContentType.html": {
    "href": "api/Ink.UnityIntegration.Debugging.InkHistoryContentItem.ContentType.html",
    "title": "Enum InkHistoryContentItem.ContentType | Czasoport Documentation",
    "keywords": "Enum InkHistoryContentItem.ContentType Namespace Ink.UnityIntegration.Debugging public enum InkHistoryContentItem.ContentType Fields ChooseChoice = 1 ChoosePathString = 5 CompleteEvaluateFunction = 4 DebugNote = 8 Error = 7 EvaluateFunction = 3 PresentedChoice = 2 PresentedContent = 0 Warning = 6"
  },
  "api/Ink.UnityIntegration.Debugging.InkHistoryContentItem.html": {
    "href": "api/Ink.UnityIntegration.Debugging.InkHistoryContentItem.html",
    "title": "Class InkHistoryContentItem | Czasoport Documentation",
    "keywords": "Class InkHistoryContentItem Namespace Ink.UnityIntegration.Debugging [Serializable] public class InkHistoryContentItem Inheritance object InkHistoryContentItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields content public string content Field Value string contentType public InkHistoryContentItem.ContentType contentType Field Value InkHistoryContentItem.ContentType tags public List<string> tags Field Value List<string> Properties time public DateTime time { get; } Property Value DateTime Methods CreateForChoosePathString(string) public static InkHistoryContentItem CreateForChoosePathString(string choosePathStringText) Parameters choosePathStringText string Returns InkHistoryContentItem CreateForCompleteEvaluateFunction(string) public static InkHistoryContentItem CreateForCompleteEvaluateFunction(string functionInfoText) Parameters functionInfoText string Returns InkHistoryContentItem CreateForContent(string, List<string>) public static InkHistoryContentItem CreateForContent(string choiceText, List<string> tags) Parameters choiceText string tags List<string> Returns InkHistoryContentItem CreateForDebugNote(string) public static InkHistoryContentItem CreateForDebugNote(string noteText) Parameters noteText string Returns InkHistoryContentItem CreateForError(string) public static InkHistoryContentItem CreateForError(string errorText) Parameters errorText string Returns InkHistoryContentItem CreateForEvaluateFunction(string) public static InkHistoryContentItem CreateForEvaluateFunction(string functionInfoText) Parameters functionInfoText string Returns InkHistoryContentItem CreateForMakeChoice(Choice) public static InkHistoryContentItem CreateForMakeChoice(Choice choice) Parameters choice Choice Returns InkHistoryContentItem CreateForPresentChoice(Choice) public static InkHistoryContentItem CreateForPresentChoice(Choice choice) Parameters choice Choice Returns InkHistoryContentItem CreateForWarning(string) public static InkHistoryContentItem CreateForWarning(string warningText) Parameters warningText string Returns InkHistoryContentItem"
  },
  "api/Ink.UnityIntegration.Debugging.html": {
    "href": "api/Ink.UnityIntegration.Debugging.html",
    "title": "Namespace Ink.UnityIntegration.Debugging | Czasoport Documentation",
    "keywords": "Namespace Ink.UnityIntegration.Debugging Classes InkHistoryContentItem Enums InkHistoryContentItem.ContentType"
  },
  "api/Ink.UnityIntegration.DefaultAssetEditor.html": {
    "href": "api/Ink.UnityIntegration.DefaultAssetEditor.html",
    "title": "Class DefaultAssetEditor | Czasoport Documentation",
    "keywords": "Class DefaultAssetEditor Namespace Ink.UnityIntegration public class DefaultAssetEditor : Editor Inheritance object DefaultAssetEditor Methods OnHeaderGUI() protected override void OnHeaderGUI() OnInspectorGUI() public override void OnInspectorGUI()"
  },
  "api/Ink.UnityIntegration.DefaultAssetInspector.html": {
    "href": "api/Ink.UnityIntegration.DefaultAssetInspector.html",
    "title": "Class DefaultAssetInspector | Czasoport Documentation",
    "keywords": "Class DefaultAssetInspector Namespace Ink.UnityIntegration public abstract class DefaultAssetInspector Inheritance object DefaultAssetInspector Derived InkInspector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields editor public Editor editor Field Value Editor serializedObject public SerializedObject serializedObject Field Value SerializedObject target public Object target Field Value Object Methods IsValid(string) public abstract bool IsValid(string assetPath) Parameters assetPath string Returns bool OnDisable() public virtual void OnDisable() OnEnable() public virtual void OnEnable() OnHeaderGUI() public virtual void OnHeaderGUI() OnInspectorGUI() public virtual void OnInspectorGUI()"
  },
  "api/Ink.UnityIntegration.InkBrowserIcons.html": {
    "href": "api/Ink.UnityIntegration.InkBrowserIcons.html",
    "title": "Class InkBrowserIcons | Czasoport Documentation",
    "keywords": "Class InkBrowserIcons Namespace Ink.UnityIntegration public class InkBrowserIcons Inheritance object InkBrowserIcons Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties childIcon public static Texture2D childIcon { get; } Property Value Texture2D childIconLarge public static Texture2D childIconLarge { get; } Property Value Texture2D errorIcon public static Texture2D errorIcon { get; } Property Value Texture2D inkFileIcon public static Texture2D inkFileIcon { get; } Property Value Texture2D inkFileIconLarge public static Texture2D inkFileIconLarge { get; } Property Value Texture2D manualIcon public static Texture2D manualIcon { get; } Property Value Texture2D todoIcon public static Texture2D todoIcon { get; } Property Value Texture2D unknownFileIcon public static Texture2D unknownFileIcon { get; } Property Value Texture2D warningIcon public static Texture2D warningIcon { get; } Property Value Texture2D"
  },
  "api/Ink.UnityIntegration.InkCompiler.CompilationStackItemState.html": {
    "href": "api/Ink.UnityIntegration.InkCompiler.CompilationStackItemState.html",
    "title": "Enum InkCompiler.CompilationStackItemState | Czasoport Documentation",
    "keywords": "Enum InkCompiler.CompilationStackItemState Namespace Ink.UnityIntegration [Serializable] public enum InkCompiler.CompilationStackItemState Fields Compiling = 1 Complete = 2 Queued = 0"
  },
  "api/Ink.UnityIntegration.InkCompiler.OnCompleteInkCompliationStackEvent.html": {
    "href": "api/Ink.UnityIntegration.InkCompiler.OnCompleteInkCompliationStackEvent.html",
    "title": "Delegate InkCompiler.OnCompleteInkCompliationStackEvent | Czasoport Documentation",
    "keywords": "Delegate InkCompiler.OnCompleteInkCompliationStackEvent Namespace Ink.UnityIntegration public delegate void InkCompiler.OnCompleteInkCompliationStackEvent(InkFile[] inkFiles) Parameters inkFiles InkFile[]"
  },
  "api/Ink.UnityIntegration.InkCompiler.html": {
    "href": "api/Ink.UnityIntegration.InkCompiler.html",
    "title": "Class InkCompiler | Czasoport Documentation",
    "keywords": "Class InkCompiler Namespace Ink.UnityIntegration public class InkCompiler : ScriptableObject Inheritance object InkCompiler Constructors InkCompiler() protected InkCompiler() Properties created public static bool created { get; } Property Value bool executingCompilationStack public static bool executingCompilationStack { get; } Property Value bool instance public static InkCompiler instance { get; } Property Value InkCompiler Methods AddToPendingCompilationStack(string) public static void AddToPendingCompilationStack(string filePath) Parameters filePath string AnyOfStateInCompilationStack(CompilationStackItemState) public static bool AnyOfStateInCompilationStack(InkCompiler.CompilationStackItemState state) Parameters state InkCompiler.CompilationStackItemState Returns bool CompileInk(params InkFile[]) public static void CompileInk(params InkFile[] inkFiles) Parameters inkFiles InkFile[] CompileInk(InkFile[], bool, Action) public static void CompileInk(InkFile[] inkFiles, bool immediate, Action onComplete = null) Parameters inkFiles InkFile[] immediate bool onComplete Action CountOfStateInCompilationStack(CompilationStackItemState) public static int CountOfStateInCompilationStack(InkCompiler.CompilationStackItemState state) Parameters state InkCompiler.CompilationStackItemState Returns int GetEstimatedCompilationProgress() public static float GetEstimatedCompilationProgress() Returns float GetUniqueMasterInkFilesToCompile(List<string>) public static List<InkFile> GetUniqueMasterInkFilesToCompile(List<string> importedInkAssets) Parameters importedInkAssets List<string> Returns List<InkFile> IsInkFileOnCompilationStack(InkFile) public static bool IsInkFileOnCompilationStack(InkFile inkFile) Parameters inkFile InkFile Returns bool LoadOrCreateInstance() public static void LoadOrCreateInstance() RemoveFromPendingCompilationStack(InkFile) public static void RemoveFromPendingCompilationStack(InkFile inkFile) Parameters inkFile InkFile Save(bool) public void Save(bool saveAsText) Parameters saveAsText bool SetBuildBlocked() public static void SetBuildBlocked() ShowProgressBar() public static void ShowProgressBar() Events OnCompileInk public static event InkCompiler.OnCompleteInkCompliationStackEvent OnCompileInk Event Type InkCompiler.OnCompleteInkCompliationStackEvent"
  },
  "api/Ink.UnityIntegration.InkCompilerLog.html": {
    "href": "api/Ink.UnityIntegration.InkCompilerLog.html",
    "title": "Class InkCompilerLog | Czasoport Documentation",
    "keywords": "Class InkCompilerLog Namespace Ink.UnityIntegration [Serializable] public class InkCompilerLog Inheritance object InkCompilerLog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InkCompilerLog(ErrorType, string, string, int) public InkCompilerLog(ErrorType type, string content, string relativeFilePath, int lineNumber = -1) Parameters type ErrorType content string relativeFilePath string lineNumber int Fields content public string content Field Value string lineNumber public int lineNumber Field Value int relativeFilePath public string relativeFilePath Field Value string type public ErrorType type Field Value ErrorType Methods GetAbsoluteFilePath(InkFile) public string GetAbsoluteFilePath(InkFile masterInkFile) Parameters masterInkFile InkFile Returns string TryParse(string, out InkCompilerLog) public static bool TryParse(string rawLog, out InkCompilerLog log) Parameters rawLog string log InkCompilerLog Returns bool"
  },
  "api/Ink.UnityIntegration.InkEditorUtils.html": {
    "href": "api/Ink.UnityIntegration.InkEditorUtils.html",
    "title": "Class InkEditorUtils | Czasoport Documentation",
    "keywords": "Class InkEditorUtils Namespace Ink.UnityIntegration public static class InkEditorUtils Inheritance object InkEditorUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields inkFileExtension public const string inkFileExtension = \".ink\" Field Value string Properties inkLogoIcon public static Texture2D inkLogoIcon { get; } Property Value Texture2D Methods AbsoluteToUnityRelativePath(string) public static string AbsoluteToUnityRelativePath(string fullPath) Parameters fullPath string Returns string CheckStoryIsValid(string, out Story) public static bool CheckStoryIsValid(string storyJSON, out Story story) Parameters storyJSON string story Story Returns bool CheckStoryIsValid(string, out Exception) public static bool CheckStoryIsValid(string storyJSON, out Exception exception) Parameters storyJSON string exception Exception Returns bool CheckStoryIsValid(string, out Exception, out Story) public static bool CheckStoryIsValid(string storyJSON, out Exception exception, out Story story) Parameters storyJSON string exception Exception story Story Returns bool CheckStoryStateIsValid(string, string) public static bool CheckStoryStateIsValid(string storyJSON, string storyStateJSON) Parameters storyJSON string storyStateJSON string Returns bool CombinePaths(string, string) public static string CombinePaths(string firstPath, string secondPath) Parameters firstPath string secondPath string Returns string CreateNewInkFileAtPath(string, string) public static DefaultAsset CreateNewInkFileAtPath(string filePath, string text) Parameters filePath string text string Returns DefaultAsset CreateNewInkFileAtPathWithTemplateAndStartNameEditing(string, string) public static void CreateNewInkFileAtPathWithTemplateAndStartNameEditing(string filePath, string templateFileLocation) Parameters filePath string templateFileLocation string CreateNewInkFileAtSelectedPathWithTemplateAndStartNameEditing() public static void CreateNewInkFileAtSelectedPathWithTemplateAndStartNameEditing() CreateStoryStateTextFile(string, string, string) public static TextAsset CreateStoryStateTextFile(string jsonStoryState, string defaultPath = \"Assets/Ink\", string defaultName = \"storyState\") Parameters jsonStoryState string defaultPath string defaultName string Returns TextAsset Donate() public static void Donate() DrawStoryPropertyField(Story, GUIContent) Draws a property field for a story using GUILayout, allowing you to attach stories to the player window for debugging. public static void DrawStoryPropertyField(Story story, GUIContent label) Parameters story Story Story. label GUIContent Label. DrawStoryPropertyField(Rect, Story, GUIContent) Draws a property field for a story using GUI, allowing you to attach stories to the player window for debugging. public static void DrawStoryPropertyField(Rect position, Story story, GUIContent label) Parameters position Rect Position. story Story Story. label GUIContent Label. FindAbsolutePluginDirectory() public static string FindAbsolutePluginDirectory() Returns string FormatJson(string) public static string FormatJson(string json) Parameters json string Returns string GetPackageInfo() public static UnityEditor.PackageManager.PackageInfo GetPackageInfo() Returns PackageInfo IsInkFile(string) Checks to see if the given path is an ink file or not, regardless of extension. public static bool IsInkFile(string path) Parameters path string The path to check. Returns bool True if it's an ink file, otherwise false. OnPostprocessBuild(BuildTarget, string) public static void OnPostprocessBuild(BuildTarget target, string pathToBuiltProject) Parameters target BuildTarget pathToBuiltProject string OpenAPIDocumentation() public static void OpenAPIDocumentation() OpenAbout() public static void OpenAbout() OpenDiscord() public static void OpenDiscord() OpenInEditor(InkFile, InkCompilerLog) Opens an ink file in the associated editor at the correct line number. TODO - If the editor is inky, this code should load the master file, but immediately show the correct child file at the correct line. public static void OpenInEditor(InkFile inkFile, InkCompilerLog log) Parameters inkFile InkFile log InkCompilerLog OpenInEditor(string, string, int) Opens an ink file in the associated editor at the correct line number. TODO - If the editor is inky, this code should load the master file, but immediately show the correct child file at the correct line. public static void OpenInEditor(string masterFilePath, string subFilePath, int lineNumber) Parameters masterFilePath string subFilePath string lineNumber int OpenWritingDocumentation() public static void OpenWritingDocumentation() RebuildLibrary() public static void RebuildLibrary() RecompileAll() public static void RecompileAll() RecompileAllImmediately() public static void RecompileAllImmediately() SanitizePathString(string) public static string SanitizePathString(string path) Parameters path string Returns string StoryContainsVariables(Story) public static bool StoryContainsVariables(Story story) Parameters story Story Returns bool UnityRelativeToAbsolutePath(string) public static string UnityRelativeToAbsolutePath(string filePath) Parameters filePath string Returns string"
  },
  "api/Ink.UnityIntegration.InkFile.InkIncludeParser.html": {
    "href": "api/Ink.UnityIntegration.InkFile.InkIncludeParser.html",
    "title": "Class InkFile.InkIncludeParser | Czasoport Documentation",
    "keywords": "Class InkFile.InkIncludeParser Namespace Ink.UnityIntegration public static class InkFile.InkIncludeParser Inheritance object InkFile.InkIncludeParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ParseIncludes(string) public static IEnumerable<string> ParseIncludes(string inkContents) Parameters inkContents string Returns IEnumerable<string>"
  },
  "api/Ink.UnityIntegration.InkFile.html": {
    "href": "api/Ink.UnityIntegration.InkFile.html",
    "title": "Class InkFile | Czasoport Documentation",
    "keywords": "Class InkFile Namespace Ink.UnityIntegration [Serializable] public class InkFile Inheritance object InkFile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InkFile(DefaultAsset) public InkFile(DefaultAsset inkAsset) Parameters inkAsset DefaultAsset Fields errors public List<InkCompilerLog> errors Field Value List<InkCompilerLog> includes public List<DefaultAsset> includes Field Value List<DefaultAsset> inkAsset public DefaultAsset inkAsset Field Value DefaultAsset jsonAsset public TextAsset jsonAsset Field Value TextAsset jsonAssetDirectory public DefaultAsset jsonAssetDirectory Field Value DefaultAsset localIncludePaths public List<string> localIncludePaths Field Value List<string> masterInkAssets public List<DefaultAsset> masterInkAssets Field Value List<DefaultAsset> recursiveIncludeErrorPaths public List<string> recursiveIncludeErrorPaths Field Value List<string> todos public List<InkCompilerLog> todos Field Value List<InkCompilerLog> unhandledCompileErrors public List<string> unhandledCompileErrors Field Value List<string> warnings public List<InkCompilerLog> warnings Field Value List<InkCompilerLog> Properties absoluteFilePath public string absoluteFilePath { get; } Property Value string absoluteFolderPath public string absoluteFolderPath { get; } Property Value string absoluteJSONPath public string absoluteJSONPath { get; } Property Value string compileAutomatically public bool compileAutomatically { get; } Property Value bool filePath public string filePath { get; } Property Value string hasErrors public bool hasErrors { get; } Property Value bool hasRecursiveIncludeErrorPaths public bool hasRecursiveIncludeErrorPaths { get; } Property Value bool hasTodos public bool hasTodos { get; } Property Value bool hasUnhandledCompileErrors public bool hasUnhandledCompileErrors { get; } Property Value bool hasWarnings public bool hasWarnings { get; } Property Value bool includesInkFiles public List<InkFile> includesInkFiles { get; } Property Value List<InkFile> isIncludeFile public bool isIncludeFile { get; } Property Value bool isMarkedToCompileAsMasterFile public bool isMarkedToCompileAsMasterFile { get; } Property Value bool isMaster public bool isMaster { get; } Property Value bool jsonPath public string jsonPath { get; } Property Value string lastCompileDate Gets the last compile date of the story. public DateTime lastCompileDate { get; } Property Value DateTime The last compile date of the story. lastEditDate Gets the last edit date of the file. public DateTime lastEditDate { get; } Property Value DateTime The last edit date of the file. masterInkFiles public IEnumerable<InkFile> masterInkFiles { get; } Property Value IEnumerable<InkFile> masterInkFilesIncludingSelf public IEnumerable<InkFile> masterInkFilesIncludingSelf { get; } Property Value IEnumerable<InkFile> requiresCompile public bool requiresCompile { get; } Property Value bool Methods ClearAllHierarchyConnections() public void ClearAllHierarchyConnections() FindCompiledJSONAsset() public void FindCompiledJSONAsset() GetFileContents() public string GetFileContents() Returns string ParseContent() public void ParseContent() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.UnityIntegration.InkInspector.html": {
    "href": "api/Ink.UnityIntegration.InkInspector.html",
    "title": "Class InkInspector | Czasoport Documentation",
    "keywords": "Class InkInspector Namespace Ink.UnityIntegration public class InkInspector : DefaultAssetInspector Inheritance object DefaultAssetInspector InkInspector Inherited Members DefaultAssetInspector.editor DefaultAssetInspector.target DefaultAssetInspector.serializedObject object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DrawLayoutInkLine(InkFile, int, string) public static void DrawLayoutInkLine(InkFile inkFile, int lineNumber, string label) Parameters inkFile InkFile lineNumber int label string IsValid(string) public override bool IsValid(string assetPath) Parameters assetPath string Returns bool OnDisable() public override void OnDisable() OnEnable() public override void OnEnable() OnHeaderGUI() public override void OnHeaderGUI() OnInspectorGUI() public override void OnInspectorGUI()"
  },
  "api/Ink.UnityIntegration.InkLibrary.AssetSaver.html": {
    "href": "api/Ink.UnityIntegration.InkLibrary.AssetSaver.html",
    "title": "Class InkLibrary.AssetSaver | Czasoport Documentation",
    "keywords": "Class InkLibrary.AssetSaver Namespace Ink.UnityIntegration public class InkLibrary.AssetSaver : UnityEditor.AssetModificationProcessor Inheritance object InkLibrary.AssetSaver"
  },
  "api/Ink.UnityIntegration.InkLibrary.html": {
    "href": "api/Ink.UnityIntegration.InkLibrary.html",
    "title": "Class InkLibrary | Czasoport Documentation",
    "keywords": "Class InkLibrary Namespace Ink.UnityIntegration public class InkLibrary : ScriptableObject, IEnumerable<InkFile>, IEnumerable Inheritance object InkLibrary Implements IEnumerable<InkFile> IEnumerable Constructors InkLibrary() protected InkLibrary() Fields inkLibrary public List<InkFile> inkLibrary Field Value List<InkFile> inkVersionCurrent public static Version inkVersionCurrent Field Value Version unityIntegrationVersionCurrent public static Version unityIntegrationVersionCurrent Field Value Version Properties Count public int Count { get; } Property Value int this[int] public InkFile this[int key] { get; set; } Parameters key int Property Value InkFile created public static bool created { get; } Property Value bool instance public static InkLibrary instance { get; } Property Value InkLibrary Methods AddNewInkFile(DefaultAsset) public static InkFile AddNewInkFile(DefaultAsset asset) Parameters asset DefaultAsset Returns InkFile Clean() Removes and null references in the library public static bool Clean() Returns bool CreateOrReadUpdatedInkFiles(List<string>) public static void CreateOrReadUpdatedInkFiles(List<string> importedInkAssets) Parameters importedInkAssets List<string> DeleteUnwantedCompiledJSONAssets() public static void DeleteUnwantedCompiledJSONAssets() FilesCompiledByRecompileAll() public static IEnumerable<InkFile> FilesCompiledByRecompileAll() Returns IEnumerable<InkFile> GetFilesRequiringRecompile() public static IEnumerable<InkFile> GetFilesRequiringRecompile() Returns IEnumerable<InkFile> GetInkFileWithAbsolutePath(string) Gets the ink file with absolute path. public static InkFile GetInkFileWithAbsolutePath(string absolutePath) Parameters absolutePath string Returns InkFile The ink file with path. GetInkFileWithFile(DefaultAsset, bool) Gets the ink file from the .ink file reference. public static InkFile GetInkFileWithFile(DefaultAsset file, bool addIfMissing = false) Parameters file DefaultAsset File asset. addIfMissing bool Adds the file if missing from inkLibrary. Returns InkFile The ink file with path. GetInkFileWithJSONFile(TextAsset) public static InkFile GetInkFileWithJSONFile(TextAsset inkJSONAsset) Parameters inkJSONAsset TextAsset Returns InkFile GetInkFileWithPath(string) Gets the ink file with path relative to Assets folder, for example: \"Assets/Ink/myStory.ink\". public static InkFile GetInkFileWithPath(string path) Parameters path string Path. Returns InkFile The ink file with path. GetInkFilesMarkedToCompileAsMasterFiles() public static IEnumerable<InkFile> GetInkFilesMarkedToCompileAsMasterFiles() Returns IEnumerable<InkFile> GetMasterInkFiles() public static IEnumerable<InkFile> GetMasterInkFiles() Returns IEnumerable<InkFile> LoadOrCreateInstance() public static void LoadOrCreateInstance() Rebuild() Updates the ink library. Executed whenever an ink file is changed by InkToJSONPostProcessor Can be called manually, but incurs a performance cost. public static void Rebuild() RebuildInkFileConnections() Rebuilds which files are master files and the connections between the files. INCLUDE is always relative to the master file. This means that every file should be assumed to be a master file until proven otherwise. public static void RebuildInkFileConnections() RemoveAt(int) public static void RemoveAt(int index) Parameters index int Save(bool) public void Save(bool saveAsText) Parameters saveAsText bool Validate() Checks if the library is corrupt and rebuilds if necessary. Returns true if the library was valid public static bool Validate() Returns bool"
  },
  "api/Ink.UnityIntegration.InkPlayerHistoryItem.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerHistoryItem.html",
    "title": "Class InkPlayerHistoryItem | Czasoport Documentation",
    "keywords": "Class InkPlayerHistoryItem Namespace Ink.UnityIntegration public class InkPlayerHistoryItem Inheritance object InkPlayerHistoryItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InkPlayerHistoryItem(string, List<InkHistoryContentItem>) public InkPlayerHistoryItem(string inkStateJSON, List<InkHistoryContentItem> storyHistory) Parameters inkStateJSON string storyHistory List<InkHistoryContentItem> Fields inkStateJSON public string inkStateJSON Field Value string storyHistory public List<InkHistoryContentItem> storyHistory Field Value List<InkHistoryContentItem>"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.AutoScrollSmoothingMode.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.AutoScrollSmoothingMode.html",
    "title": "Enum InkPlayerWindow.AutoScrollSmoothingMode | Czasoport Documentation",
    "keywords": "Enum InkPlayerWindow.AutoScrollSmoothingMode Namespace Ink.UnityIntegration public enum InkPlayerWindow.AutoScrollSmoothingMode Fields NONE = 0 Smooth = 2 Snap = 1"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.BaseStoryPanelState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.BaseStoryPanelState.html",
    "title": "Class InkPlayerWindow.BaseStoryPanelState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.BaseStoryPanelState Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.BaseStoryPanelState Inheritance object InkPlayerWindow.BaseStoryPanelState Derived InkPlayerWindow.FunctionPanelState InkPlayerWindow.NamedContentPanelState InkPlayerWindow.ObservedVariablesPanelState InkPlayerWindow.StoryPanelState InkPlayerWindow.VariablesPanelState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields height public float height Field Value float showing public bool showing Field Value bool y public float y Field Value float Properties scrollPosition public Vector2 scrollPosition { get; set; } Property Value Vector2"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.ContextMenuDelegate.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.ContextMenuDelegate.html",
    "title": "Delegate InkPlayerWindow.ContextMenuDelegate | Czasoport Documentation",
    "keywords": "Delegate InkPlayerWindow.ContextMenuDelegate Namespace Ink.UnityIntegration public delegate void InkPlayerWindow.ContextMenuDelegate(GenericMenu contextMenu, InkHistoryContentItem content) Parameters contextMenu GenericMenu content InkHistoryContentItem"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.DisplayOptions.VisibilityOptions.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.DisplayOptions.VisibilityOptions.html",
    "title": "Enum InkPlayerWindow.DisplayOptions.VisibilityOptions | Czasoport Documentation",
    "keywords": "Enum InkPlayerWindow.DisplayOptions.VisibilityOptions Namespace Ink.UnityIntegration [Flags] public enum InkPlayerWindow.DisplayOptions.VisibilityOptions Fields ChoosePathString = 64 Content = 4 DebugNotes = 128 EmptyEntries = 512 Errors = 2 Function = 32 PresentedChoices = 8 SelectedChoice = 16 Tags = 1024 TimeStamp = 256 Warnings = 1"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.DisplayOptions.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.DisplayOptions.html",
    "title": "Class InkPlayerWindow.DisplayOptions | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.DisplayOptions Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.DisplayOptions Inheritance object InkPlayerWindow.DisplayOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields displayErrorsInConsole public bool displayErrorsInConsole Field Value bool displayWarningsInConsole public bool displayWarningsInConsole Field Value bool visibilityOptions public InkPlayerWindow.DisplayOptions.VisibilityOptions visibilityOptions Field Value InkPlayerWindow.DisplayOptions.VisibilityOptions"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType.html",
    "title": "Enum InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType | Czasoport Documentation",
    "keywords": "Enum InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType Namespace Ink.UnityIntegration public enum InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType Fields Bool = 3 Float = 0 InkListVariable = 5 InkVariable = 4 Int = 1 String = 2"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.html",
    "title": "Class InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput Inheritance object InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput Inherited Members object.Equals(object) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields boolValue public bool boolValue Field Value bool floatValue public float floatValue Field Value float inkListVariablePath public string inkListVariablePath Field Value string inkListVariableValue public InkList inkListVariableValue Field Value InkList inkVariablePath public string inkVariablePath Field Value string inkVariableValue public object inkVariableValue Field Value object intValue public int intValue Field Value int stringValue public string stringValue Field Value string type public InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType type Field Value InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType Methods GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. RefreshInkListVariableValue(Story) public void RefreshInkListVariableValue(Story story) Parameters story Story RefreshInkVariableValue(Story) public void RefreshInkVariableValue(Story story) Parameters story Story"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.FunctionParams.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.FunctionParams.html",
    "title": "Class InkPlayerWindow.FunctionPanelState.FunctionParams | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.FunctionPanelState.FunctionParams Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.FunctionPanelState.FunctionParams Inheritance object InkPlayerWindow.FunctionPanelState.FunctionParams Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields functionName public string functionName Field Value string inputs public List<InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput> inputs Field Value List<InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput> Methods GetInputHashCode() public int GetInputHashCode() Returns int"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.html",
    "title": "Class InkPlayerWindow.FunctionPanelState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.FunctionPanelState Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.FunctionPanelState : InkPlayerWindow.BaseStoryPanelState Inheritance object InkPlayerWindow.BaseStoryPanelState InkPlayerWindow.FunctionPanelState Inherited Members InkPlayerWindow.BaseStoryPanelState.showing InkPlayerWindow.BaseStoryPanelState.scrollPosition InkPlayerWindow.BaseStoryPanelState.y InkPlayerWindow.BaseStoryPanelState.height object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields functionParams public InkPlayerWindow.FunctionPanelState.FunctionParams functionParams Field Value InkPlayerWindow.FunctionPanelState.FunctionParams functionReturnValue public object functionReturnValue Field Value object testedFunctionHash public int testedFunctionHash Field Value int testedFunctionTime public DateTime testedFunctionTime Field Value DateTime"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.InkPlayerParams.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.InkPlayerParams.html",
    "title": "Struct InkPlayerWindow.InkPlayerParams | Czasoport Documentation",
    "keywords": "Struct InkPlayerWindow.InkPlayerParams Namespace Ink.UnityIntegration public struct InkPlayerWindow.InkPlayerParams Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields disableChoices public bool disableChoices Field Value bool disablePlayControls public bool disablePlayControls Field Value bool disableSettingVariables public bool disableSettingVariables Field Value bool disableStateLoading public bool disableStateLoading Field Value bool disableUndoHistory public bool disableUndoHistory Field Value bool profileOnStart public bool profileOnStart Field Value bool Properties DisableInteraction public static InkPlayerWindow.InkPlayerParams DisableInteraction { get; } Property Value InkPlayerWindow.InkPlayerParams Standard public static InkPlayerWindow.InkPlayerParams Standard { get; } Property Value InkPlayerWindow.InkPlayerParams"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.InkPlayerWindowState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.InkPlayerWindowState.html",
    "title": "Class InkPlayerWindow.InkPlayerWindowState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.InkPlayerWindowState Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.InkPlayerWindowState Inheritance object InkPlayerWindow.InkPlayerWindowState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields choicePanelState public InkPlayerWindow.BaseStoryPanelState choicePanelState Field Value InkPlayerWindow.BaseStoryPanelState functionPanelState public InkPlayerWindow.FunctionPanelState functionPanelState Field Value InkPlayerWindow.FunctionPanelState lastStoryJSONAssetPath public string lastStoryJSONAssetPath Field Value string lastStoryWasPlaying public bool lastStoryWasPlaying Field Value bool namedContentPanelState public InkPlayerWindow.NamedContentPanelState namedContentPanelState Field Value InkPlayerWindow.NamedContentPanelState observedVariablesPanelState public InkPlayerWindow.ObservedVariablesPanelState observedVariablesPanelState Field Value InkPlayerWindow.ObservedVariablesPanelState profilerPanelState public InkPlayerWindow.BaseStoryPanelState profilerPanelState Field Value InkPlayerWindow.BaseStoryPanelState saveLoadPanelState public InkPlayerWindow.BaseStoryPanelState saveLoadPanelState Field Value InkPlayerWindow.BaseStoryPanelState storyPanelState public InkPlayerWindow.StoryPanelState storyPanelState Field Value InkPlayerWindow.StoryPanelState storyStatePanelState public InkPlayerWindow.BaseStoryPanelState storyStatePanelState Field Value InkPlayerWindow.BaseStoryPanelState variablesPanelState public InkPlayerWindow.VariablesPanelState variablesPanelState Field Value InkPlayerWindow.VariablesPanelState Properties Instance public static InkPlayerWindow.InkPlayerWindowState Instance { get; } Property Value InkPlayerWindow.InkPlayerWindowState Methods CreateAndSave() public static void CreateAndSave() Save() public static void Save() Save(InkPlayerWindowState) public static void Save(InkPlayerWindow.InkPlayerWindowState settings) Parameters settings InkPlayerWindow.InkPlayerWindowState TryGetLastStoryJSONAsset() public TextAsset TryGetLastStoryJSONAsset() Returns TextAsset Events OnCreateOrLoad public static event Action OnCreateOrLoad Event Type Action"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.NamedContentPanelState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.NamedContentPanelState.html",
    "title": "Class InkPlayerWindow.NamedContentPanelState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.NamedContentPanelState Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.NamedContentPanelState : InkPlayerWindow.BaseStoryPanelState Inheritance object InkPlayerWindow.BaseStoryPanelState InkPlayerWindow.NamedContentPanelState Inherited Members InkPlayerWindow.BaseStoryPanelState.showing InkPlayerWindow.BaseStoryPanelState.scrollPosition InkPlayerWindow.BaseStoryPanelState.y InkPlayerWindow.BaseStoryPanelState.height object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields searchString public string searchString Field Value string"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.ObservedVariablesPanelState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.ObservedVariablesPanelState.html",
    "title": "Class InkPlayerWindow.ObservedVariablesPanelState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.ObservedVariablesPanelState Namespace Ink.UnityIntegration public class InkPlayerWindow.ObservedVariablesPanelState : InkPlayerWindow.BaseStoryPanelState Inheritance object InkPlayerWindow.BaseStoryPanelState InkPlayerWindow.ObservedVariablesPanelState Inherited Members InkPlayerWindow.BaseStoryPanelState.showing InkPlayerWindow.BaseStoryPanelState.scrollPosition InkPlayerWindow.BaseStoryPanelState.y InkPlayerWindow.BaseStoryPanelState.height object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields observedVariables public Dictionary<string, ObservedVariable> observedVariables Field Value Dictionary<string, ObservedVariable> restorableObservedVariableNames public List<string> restorableObservedVariableNames Field Value List<string>"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.PlayerOptions.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.PlayerOptions.html",
    "title": "Class InkPlayerWindow.PlayerOptions | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.PlayerOptions Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.PlayerOptions Inheritance object InkPlayerWindow.PlayerOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields chooseAutomatically public bool chooseAutomatically Field Value bool chooseAutomaticallyTimeInterval public float chooseAutomaticallyTimeInterval Field Value float continueAutomatically public bool continueAutomatically Field Value bool continueAutomaticallyTimeInterval public float continueAutomaticallyTimeInterval Field Value float"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.StoryPanelState.AutoScrollMode.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.StoryPanelState.AutoScrollMode.html",
    "title": "Enum InkPlayerWindow.StoryPanelState.AutoScrollMode | Czasoport Documentation",
    "keywords": "Enum InkPlayerWindow.StoryPanelState.AutoScrollMode Namespace Ink.UnityIntegration public enum InkPlayerWindow.StoryPanelState.AutoScrollMode Fields Always = 1 Off = 2 WhenAtBottom = 0"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.StoryPanelState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.StoryPanelState.html",
    "title": "Class InkPlayerWindow.StoryPanelState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.StoryPanelState Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.StoryPanelState : InkPlayerWindow.BaseStoryPanelState Inheritance object InkPlayerWindow.BaseStoryPanelState InkPlayerWindow.StoryPanelState Inherited Members InkPlayerWindow.BaseStoryPanelState.showing InkPlayerWindow.BaseStoryPanelState.scrollPosition InkPlayerWindow.BaseStoryPanelState.y InkPlayerWindow.BaseStoryPanelState.height object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields autoScrollMode public InkPlayerWindow.StoryPanelState.AutoScrollMode autoScrollMode Field Value InkPlayerWindow.StoryPanelState.AutoScrollMode displayOptions public InkPlayerWindow.DisplayOptions displayOptions Field Value InkPlayerWindow.DisplayOptions maxScrollRectHeight public const float maxScrollRectHeight = 480 Field Value float minScrollRectHeight public const float minScrollRectHeight = 30 Field Value float searchString public string searchString Field Value string"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.VariablesPanelState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.VariablesPanelState.html",
    "title": "Class InkPlayerWindow.VariablesPanelState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.VariablesPanelState Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.VariablesPanelState : InkPlayerWindow.BaseStoryPanelState Inheritance object InkPlayerWindow.BaseStoryPanelState InkPlayerWindow.VariablesPanelState Inherited Members InkPlayerWindow.BaseStoryPanelState.showing InkPlayerWindow.BaseStoryPanelState.scrollPosition InkPlayerWindow.BaseStoryPanelState.y InkPlayerWindow.BaseStoryPanelState.height object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields expandedVariables public List<string> expandedVariables Field Value List<string> searchString public string searchString Field Value string"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.html",
    "title": "Class InkPlayerWindow | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow Namespace Ink.UnityIntegration Ink player window. Tests stories in an editor window. Stories may be attached at runtime. InkPlayerWindow.DrawStoryPropertyField may be used for this. public class InkPlayerWindow : EditorWindow Inheritance object InkPlayerWindow Fields OnChooseChoiceIndexOverride public static Action<int> OnChooseChoiceIndexOverride Field Value Action<int> OnDidSetStory public static Action<Story> OnDidSetStory Field Value Action<Story> OnDivertLabelOverride public static Func<string, GUIContent> OnDivertLabelOverride Field Value Func<string, GUIContent> OnDivertOverride public static Action<string> OnDivertOverride Field Value Action<string> contextMenuDelegates public static List<InkPlayerWindow.ContextMenuDelegate> contextMenuDelegates Field Value List<InkPlayerWindow.ContextMenuDelegate> playerOptions public static InkPlayerWindow.PlayerOptions playerOptions Field Value InkPlayerWindow.PlayerOptions playerParams public static InkPlayerWindow.InkPlayerParams playerParams Field Value InkPlayerWindow.InkPlayerParams Properties attached public static bool attached { get; } Property Value bool isOpen public static bool isOpen { get; } Property Value bool story public static Story story { get; } Property Value Story storyStateTextAsset public static TextAsset storyStateTextAsset { get; set; } Property Value TextAsset visible public static bool visible { get; } Property Value bool Methods Attach(Story) public static void Attach(Story story) Parameters story Story Attach(Story, InkPlayerParams) public static void Attach(Story story, InkPlayerWindow.InkPlayerParams inkPlayerParams) Parameters story Story inkPlayerParams InkPlayerWindow.InkPlayerParams Detach() public static void Detach() DrawStoryPropertyField(Story, InkPlayerParams, ref bool, GUIContent, bool) public static void DrawStoryPropertyField(Story story, InkPlayerWindow.InkPlayerParams playerParams, ref bool expanded, GUIContent label, bool interactable = false) Parameters story Story playerParams InkPlayerWindow.InkPlayerParams expanded bool label GUIContent interactable bool DrawStoryPropertyField(Story, ref bool, GUIContent) Draws a property field for a story using GUILayout, allowing you to attach stories to the player window for debugging. An example of how this is used is found in the Demo scene. public static void DrawStoryPropertyField(Story story, ref bool expanded, GUIContent label) Parameters story Story Story. expanded bool label GUIContent Label. DrawStoryPropertyField(Rect, Story, GUIContent) Draws a property field for a story using GUI, allowing you to attach stories to the player window for debugging. public static void DrawStoryPropertyField(Rect position, Story story, GUIContent label) Parameters position Rect Position. story Story Story. label GUIContent Label. GetGameWindowIsMaximised() public static bool GetGameWindowIsMaximised() Returns bool GetWindow() public static InkPlayerWindow GetWindow() Returns InkPlayerWindow GetWindow(bool) public static InkPlayerWindow GetWindow(bool focus) Parameters focus bool Returns InkPlayerWindow LoadAndPlay(string, bool) public static void LoadAndPlay(string storyJSON, bool focusWindow = true) Parameters storyJSON string focusWindow bool LoadAndPlay(TextAsset, bool) public static void LoadAndPlay(TextAsset storyJSONTextAsset, bool focusWindow = true) Parameters storyJSONTextAsset TextAsset focusWindow bool"
  },
  "api/Ink.UnityIntegration.InkPostProcessor.html": {
    "href": "api/Ink.UnityIntegration.InkPostProcessor.html",
    "title": "Class InkPostProcessor | Czasoport Documentation",
    "keywords": "Class InkPostProcessor Namespace Ink.UnityIntegration public class InkPostProcessor : AssetPostprocessor Inheritance object InkPostProcessor Fields compileImmediatelyOnImport public static bool compileImmediatelyOnImport Field Value bool disabled public static bool disabled Field Value bool"
  },
  "api/Ink.UnityIntegration.InkSettings.AssetSaver.html": {
    "href": "api/Ink.UnityIntegration.InkSettings.AssetSaver.html",
    "title": "Class InkSettings.AssetSaver | Czasoport Documentation",
    "keywords": "Class InkSettings.AssetSaver Namespace Ink.UnityIntegration public class InkSettings.AssetSaver : UnityEditor.AssetModificationProcessor Inheritance object InkSettings.AssetSaver"
  },
  "api/Ink.UnityIntegration.InkSettings.html": {
    "href": "api/Ink.UnityIntegration.InkSettings.html",
    "title": "Class InkSettings | Czasoport Documentation",
    "keywords": "Class InkSettings Namespace Ink.UnityIntegration public class InkSettings : ScriptableObject Inheritance object InkSettings Fields compileAllFilesAutomatically public bool compileAllFilesAutomatically Field Value bool compileTimeout public int compileTimeout Field Value int defaultJsonAssetPath public DefaultAsset defaultJsonAssetPath Field Value DefaultAsset delayInPlayMode public bool delayInPlayMode Field Value bool filesToCompileAutomatically public List<DefaultAsset> filesToCompileAutomatically Field Value List<DefaultAsset> handleJSONFilesAutomatically public bool handleJSONFilesAutomatically Field Value bool includeFilesToCompileAsMasterFiles public List<DefaultAsset> includeFilesToCompileAsMasterFiles Field Value List<DefaultAsset> printInkLogsInConsoleOnCompile public bool printInkLogsInConsoleOnCompile Field Value bool suppressStartupWindow public bool suppressStartupWindow Field Value bool templateFile public DefaultAsset templateFile Field Value DefaultAsset Properties created public static bool created { get; } Property Value bool instance public static InkSettings instance { get; } Property Value InkSettings templateFilePath public string templateFilePath { get; } Property Value string Methods Save(bool) public void Save(bool saveAsText) Parameters saveAsText bool SaveStatic(bool) public static void SaveStatic(bool saveAsText) Parameters saveAsText bool ShouldCompileInkFileAutomatically(InkFile) public bool ShouldCompileInkFileAutomatically(InkFile inkFile) Parameters inkFile InkFile Returns bool"
  },
  "api/Ink.UnityIntegration.InkSettingsEditor.html": {
    "href": "api/Ink.UnityIntegration.InkSettingsEditor.html",
    "title": "Class InkSettingsEditor | Czasoport Documentation",
    "keywords": "Class InkSettingsEditor Namespace Ink.UnityIntegration public class InkSettingsEditor : Editor Inheritance object InkSettingsEditor Fields data protected InkSettings data Field Value InkSettings Methods OnEnable() public void OnEnable() OnInspectorGUI() public override void OnInspectorGUI()"
  },
  "api/Ink.UnityIntegration.InkUnityIntegrationStartupWindow.html": {
    "href": "api/Ink.UnityIntegration.InkUnityIntegrationStartupWindow.html",
    "title": "Class InkUnityIntegrationStartupWindow | Czasoport Documentation",
    "keywords": "Class InkUnityIntegrationStartupWindow Namespace Ink.UnityIntegration public class InkUnityIntegrationStartupWindow : EditorWindow Inheritance object InkUnityIntegrationStartupWindow Methods ShowWindow() public static void ShowWindow()"
  },
  "api/Ink.UnityIntegration.ObservedVariable.ObservedVariableState.html": {
    "href": "api/Ink.UnityIntegration.ObservedVariable.ObservedVariableState.html",
    "title": "Class ObservedVariable.ObservedVariableState | Czasoport Documentation",
    "keywords": "Class ObservedVariable.ObservedVariableState Namespace Ink.UnityIntegration public class ObservedVariable.ObservedVariableState Inheritance object ObservedVariable.ObservedVariableState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ObservedVariableState(object) public ObservedVariableState(object state) Parameters state object Fields dateTime public DateTime dateTime Field Value DateTime state public object state Field Value object"
  },
  "api/Ink.UnityIntegration.ObservedVariable.html": {
    "href": "api/Ink.UnityIntegration.ObservedVariable.html",
    "title": "Class ObservedVariable | Czasoport Documentation",
    "keywords": "Class ObservedVariable Namespace Ink.UnityIntegration public class ObservedVariable Inheritance object ObservedVariable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ObservedVariable(string) public ObservedVariable(string variable) Parameters variable string Fields expanded public bool expanded Field Value bool scrollPosition public Vector2 scrollPosition Field Value Vector2 values public List<ObservedVariable.ObservedVariableState> values Field Value List<ObservedVariable.ObservedVariableState> variable public string variable Field Value string variableObserver public Story.VariableObserver variableObserver Field Value Story.VariableObserver Methods AddValueState(object) public void AddValueState(object value) Parameters value object"
  },
  "api/Ink.UnityIntegration.UndoHistory-1.OnChangeHistoryIndexEvent.html": {
    "href": "api/Ink.UnityIntegration.UndoHistory-1.OnChangeHistoryIndexEvent.html",
    "title": "Delegate UndoHistory<T>.OnChangeHistoryIndexEvent | Czasoport Documentation",
    "keywords": "Delegate UndoHistory<T>.OnChangeHistoryIndexEvent Namespace Ink.UnityIntegration public delegate void UndoHistory<T>.OnChangeHistoryIndexEvent(T historyItem) Parameters historyItem T"
  },
  "api/Ink.UnityIntegration.UndoHistory-1.OnChangeUndoHistoryEvent.html": {
    "href": "api/Ink.UnityIntegration.UndoHistory-1.OnChangeUndoHistoryEvent.html",
    "title": "Delegate UndoHistory<T>.OnChangeUndoHistoryEvent | Czasoport Documentation",
    "keywords": "Delegate UndoHistory<T>.OnChangeUndoHistoryEvent Namespace Ink.UnityIntegration public delegate void UndoHistory<T>.OnChangeUndoHistoryEvent()"
  },
  "api/Ink.UnityIntegration.UndoHistory-1.OnRedoEvent.html": {
    "href": "api/Ink.UnityIntegration.UndoHistory-1.OnRedoEvent.html",
    "title": "Delegate UndoHistory<T>.OnRedoEvent | Czasoport Documentation",
    "keywords": "Delegate UndoHistory<T>.OnRedoEvent Namespace Ink.UnityIntegration public delegate void UndoHistory<T>.OnRedoEvent(T historyItem) Parameters historyItem T"
  },
  "api/Ink.UnityIntegration.UndoHistory-1.OnUndoEvent.html": {
    "href": "api/Ink.UnityIntegration.UndoHistory-1.OnUndoEvent.html",
    "title": "Delegate UndoHistory<T>.OnUndoEvent | Czasoport Documentation",
    "keywords": "Delegate UndoHistory<T>.OnUndoEvent Namespace Ink.UnityIntegration public delegate void UndoHistory<T>.OnUndoEvent(T historyItem) Parameters historyItem T"
  },
  "api/Ink.UnityIntegration.UndoHistory-1.html": {
    "href": "api/Ink.UnityIntegration.UndoHistory-1.html",
    "title": "Class UndoHistory<T> | Czasoport Documentation",
    "keywords": "Class UndoHistory<T> Namespace Ink.UnityIntegration [Serializable] public class UndoHistory<T> where T : class Type Parameters T Inheritance object UndoHistory<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UndoHistory() public UndoHistory() UndoHistory(int) public UndoHistory(int maxHistoryItems) Parameters maxHistoryItems int Fields maxHistoryItems public int maxHistoryItems Field Value int undoHistory public List<T> undoHistory Field Value List<T> Properties canRedo public bool canRedo { get; } Property Value bool canUndo public bool canUndo { get; } Property Value bool undoHistoryIndex public int undoHistoryIndex { get; set; } Property Value int Methods AddToUndoHistory(T) public virtual void AddToUndoHistory(T state) Parameters state T ApplyHistoryItem(T) protected virtual void ApplyHistoryItem(T historyItem) Parameters historyItem T Clear() public virtual void Clear() Redo() public virtual T Redo() Returns T Undo() public virtual T Undo() Returns T Events OnChangeHistoryIndex public event UndoHistory<T>.OnChangeHistoryIndexEvent OnChangeHistoryIndex Event Type UndoHistory<T>.OnChangeHistoryIndexEvent OnChangeUndoHistory public event UndoHistory<T>.OnChangeUndoHistoryEvent OnChangeUndoHistory Event Type UndoHistory<T>.OnChangeUndoHistoryEvent OnRedo public event UndoHistory<T>.OnRedoEvent OnRedo Event Type UndoHistory<T>.OnRedoEvent OnUndo public event UndoHistory<T>.OnUndoEvent OnUndo Event Type UndoHistory<T>.OnUndoEvent"
  },
  "api/Ink.UnityIntegration.html": {
    "href": "api/Ink.UnityIntegration.html",
    "title": "Namespace Ink.UnityIntegration | Czasoport Documentation",
    "keywords": "Namespace Ink.UnityIntegration Classes ColoredBackgroundGUIStyle DefaultAssetEditor DefaultAssetInspector InkBrowserIcons InkCompiler InkCompilerLog InkEditorUtils InkFile InkFile.InkIncludeParser InkInspector InkLibrary InkLibrary.AssetSaver InkPlayerHistoryItem InkPlayerWindow Ink player window. Tests stories in an editor window. Stories may be attached at runtime. InkPlayerWindow.DrawStoryPropertyField may be used for this. InkPlayerWindow.BaseStoryPanelState InkPlayerWindow.DisplayOptions InkPlayerWindow.FunctionPanelState InkPlayerWindow.FunctionPanelState.FunctionParams InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput InkPlayerWindow.InkPlayerWindowState InkPlayerWindow.NamedContentPanelState InkPlayerWindow.ObservedVariablesPanelState InkPlayerWindow.PlayerOptions InkPlayerWindow.StoryPanelState InkPlayerWindow.VariablesPanelState InkPostProcessor InkSettings InkSettings.AssetSaver InkSettingsEditor InkUnityIntegrationStartupWindow ObservedVariable ObservedVariable.ObservedVariableState UndoHistory<T> Structs InkPlayerWindow.InkPlayerParams Enums InkCompiler.CompilationStackItemState InkPlayerWindow.AutoScrollSmoothingMode InkPlayerWindow.DisplayOptions.VisibilityOptions InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType InkPlayerWindow.StoryPanelState.AutoScrollMode Delegates InkCompiler.OnCompleteInkCompliationStackEvent InkPlayerWindow.ContextMenuDelegate UndoHistory<T>.OnChangeHistoryIndexEvent UndoHistory<T>.OnChangeUndoHistoryEvent UndoHistory<T>.OnRedoEvent UndoHistory<T>.OnUndoEvent"
  },
  "api/Ink.html": {
    "href": "api/Ink.html",
    "title": "Namespace Ink | Czasoport Documentation",
    "keywords": "Namespace Ink Classes CharacterRange A class representing a character range. Allows for lazy-loading a corresponding character set. CharacterSet CommandLineInput CommentEliminator Pre-pass before main ink parser runs. It actually performs two main tasks: comment elimination to simplify the parse rules in the main parser Conversion of Windows line endings (\\r\\n) to the simpler Unix style (\\n), so we don't have to worry about them later. Compiler Compiler.CommandLineInputResult Compiler.Options DefaultFileHandler InkParser InkParser.FlowDecl InkParser.InfixOperator InkParser.NameWithMetadata InkStringConversionExtensions PluginManager StringParser StringParser.ParseSuccessStruct StringParserState StringParserState.Element Structs Compiler.DebugSourceRange Stats Interfaces IFileHandler IPlugin Enums ErrorType Author errors will only ever come from the compiler so don't need to be handled by your Story error handler. The \"Error\" ErrorType is by far the most common for a runtime story error (rather than compiler error), though the Warning type is also possible. InkParser.CustomFlags InkParser.StatementLevel Delegates ErrorHandler Callback for errors throughout both the ink runtime and compiler. StringParser.ErrorHandler StringParser.ParseRule StringParser.SpecificParseRule<T>"
  },
  "api/InventoryBackend.Exceptions.InvBadValueException.html": {
    "href": "api/InventoryBackend.Exceptions.InvBadValueException.html",
    "title": "Class InvBadValueException | Czasoport Documentation",
    "keywords": "Class InvBadValueException Namespace InventoryBackend.Exceptions public class InvBadValueException : Exception, ISerializable Inheritance object Exception InvBadValueException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InvBadValueException() public InvBadValueException() InvBadValueException(string) public InvBadValueException(string message) Parameters message string InvBadValueException(string, Exception) public InvBadValueException(string message, Exception inner) Parameters message string inner Exception"
  },
  "api/InventoryBackend.Exceptions.html": {
    "href": "api/InventoryBackend.Exceptions.html",
    "title": "Namespace InventoryBackend.Exceptions | Czasoport Documentation",
    "keywords": "Namespace InventoryBackend.Exceptions Classes InvBadValueException"
  },
  "api/InventoryBackend.Inventory.html": {
    "href": "api/InventoryBackend.Inventory.html",
    "title": "Class Inventory | Czasoport Documentation",
    "keywords": "Class Inventory Namespace InventoryBackend public class Inventory : MonoBehaviour, IDataPersistence Inheritance object Inventory Implements IDataPersistence Fields inventoryUpdated Fires always when content of inventory changes. public UnityEvent inventoryUpdated Field Value UnityEvent Methods GetAllItems() Get all items stored in inventory. public Dictionary<ItemDefinition, ushort> GetAllItems() Returns Dictionary<ItemDefinition, ushort> GetItemCount(ItemDefinition) How many of specific item does player has. public ushort GetItemCount(ItemDefinition item) Parameters item ItemDefinition Item to check. Returns ushort Number of items of this type in inventory. InsertItem(ItemDefinition, ushort) Inserts new item into inventory or updates count of this item in the inventory. public void InsertItem(ItemDefinition item, ushort count) Parameters item ItemDefinition What item to put into the inventory. count ushort How many items to put into the inventory. LoadPersistentData(GameData) public void LoadPersistentData(GameData gameData) Parameters gameData GameData RemoveItem(ItemDefinition, ushort) Remove specific count of items from the inventory. Count cannot be less than stored amount of items. When number of items after the operation drops to 0, item will be removed. public bool RemoveItem(ItemDefinition item, ushort count) Parameters item ItemDefinition What item to remove. count ushort How many items to remove. Returns bool True if operation was successful and items were removed, false if number of items requested to remove was greater than number of stored items or in case of any other failure. Exceptions InvBadValueException SavePersistentData(ref GameData) public void SavePersistentData(ref GameData gameData) Parameters gameData GameData"
  },
  "api/InventoryBackend.Test.TestInventory.html": {
    "href": "api/InventoryBackend.Test.TestInventory.html",
    "title": "Class TestInventory | Czasoport Documentation",
    "keywords": "Class TestInventory Namespace InventoryBackend.Test public class TestInventory : MonoBehaviour Inheritance object TestInventory Fields item1 public ItemDefinition item1 Field Value ItemDefinition item2 public ItemDefinition item2 Field Value ItemDefinition testLoad public bool testLoad Field Value bool testSave public bool testSave Field Value bool Methods Awake() public void Awake()"
  },
  "api/InventoryBackend.Test.html": {
    "href": "api/InventoryBackend.Test.html",
    "title": "Namespace InventoryBackend.Test | Czasoport Documentation",
    "keywords": "Namespace InventoryBackend.Test Classes TestInventory"
  },
  "api/InventoryBackend.html": {
    "href": "api/InventoryBackend.html",
    "title": "Namespace InventoryBackend | Czasoport Documentation",
    "keywords": "Namespace InventoryBackend Classes Inventory"
  },
  "api/InventoryUI.InventoryItemButton.html": {
    "href": "api/InventoryUI.InventoryItemButton.html",
    "title": "Class InventoryItemButton | Czasoport Documentation",
    "keywords": "Class InventoryItemButton Namespace InventoryUI public class InventoryItemButton : MonoBehaviour, IPointerDownHandler Inheritance object InventoryItemButton Implements IPointerDownHandler Methods OnPointerDown(PointerEventData) public void OnPointerDown(PointerEventData eventData) Parameters eventData PointerEventData SetupButton(KeyValuePair<ItemDefinition, ushort>, Inventory, GameObject) public void SetupButton(KeyValuePair<ItemDefinition, ushort> item, Inventory inventory, GameObject itemHolderTransform) Parameters item KeyValuePair<ItemDefinition, ushort> inventory Inventory itemHolderTransform GameObject"
  },
  "api/InventoryUI.InventoryUI.html": {
    "href": "api/InventoryUI.InventoryUI.html",
    "title": "Class InventoryUI | Czasoport Documentation",
    "keywords": "Class InventoryUI Namespace InventoryUI public class InventoryUI : MonoBehaviour Inheritance object InventoryUI Methods OnInventoryUpdated() public void OnInventoryUpdated()"
  },
  "api/InventoryUI.html": {
    "href": "api/InventoryUI.html",
    "title": "Namespace InventoryUI | Czasoport Documentation",
    "keywords": "Namespace InventoryUI Classes InventoryItemButton InventoryUI"
  },
  "api/Items.IngredientDefinition.html": {
    "href": "api/Items.IngredientDefinition.html",
    "title": "Class IngredientDefinition | Czasoport Documentation",
    "keywords": "Class IngredientDefinition Namespace Items public class IngredientDefinition : ItemDefinition Inheritance object ItemDefinition IngredientDefinition Inherited Members ItemDefinition.type ItemDefinition.itemName ItemDefinition.description ItemDefinition.prefab ItemDefinition.uiImage ItemDefinition.ToString()"
  },
  "api/Items.ItemDefinition.html": {
    "href": "api/Items.ItemDefinition.html",
    "title": "Class ItemDefinition | Czasoport Documentation",
    "keywords": "Class ItemDefinition Namespace Items public class ItemDefinition : ScriptableObject Inheritance object ItemDefinition Derived IngredientDefinition Fields description public string description Field Value string itemName public string itemName Field Value string prefab public GameObject prefab Field Value GameObject type public ItemType type Field Value ItemType uiImage public Sprite uiImage Field Value Sprite Methods ToString() public override string ToString() Returns string"
  },
  "api/Items.ItemType.html": {
    "href": "api/Items.ItemType.html",
    "title": "Enum ItemType | Czasoport Documentation",
    "keywords": "Enum ItemType Namespace Items public enum ItemType Fields Beer = 0 Ingredient = 1 Supply = 2"
  },
  "api/Items.html": {
    "href": "api/Items.html",
    "title": "Namespace Items | Czasoport Documentation",
    "keywords": "Namespace Items Classes IngredientDefinition ItemDefinition Enums ItemType"
  },
  "api/MainMenu.MainMenuManager.html": {
    "href": "api/MainMenu.MainMenuManager.html",
    "title": "Class MainMenuManager | Czasoport Documentation",
    "keywords": "Class MainMenuManager Namespace MainMenu public class MainMenuManager : MonoBehaviour Inheritance object MainMenuManager"
  },
  "api/MainMenu.html": {
    "href": "api/MainMenu.html",
    "title": "Namespace MainMenu | Czasoport Documentation",
    "keywords": "Namespace MainMenu Classes MainMenuManager"
  },
  "api/Recipes.RecipeChecker.html": {
    "href": "api/Recipes.RecipeChecker.html",
    "title": "Class RecipeChecker | Czasoport Documentation",
    "keywords": "Class RecipeChecker Namespace Recipes public static class RecipeChecker Inheritance object RecipeChecker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FindRecipe(ItemDefinition[], out RecipeDefinition) public static bool FindRecipe(ItemDefinition[] ingredients, out RecipeDefinition recipe) Parameters ingredients ItemDefinition[] recipe RecipeDefinition Returns bool"
  },
  "api/Recipes.RecipeDefinition.html": {
    "href": "api/Recipes.RecipeDefinition.html",
    "title": "Class RecipeDefinition | Czasoport Documentation",
    "keywords": "Class RecipeDefinition Namespace Recipes public class RecipeDefinition : ScriptableObject Inheritance object RecipeDefinition Fields neededIngredients public ItemDefinition[] neededIngredients Field Value ItemDefinition[] recipeHash public string recipeHash Field Value string result public ItemDefinition result Field Value ItemDefinition Methods CalculateRecipeHash() public void CalculateRecipeHash() ToString() public override string ToString() Returns string"
  },
  "api/Recipes.RecipeDefinitionEditor.html": {
    "href": "api/Recipes.RecipeDefinitionEditor.html",
    "title": "Class RecipeDefinitionEditor | Czasoport Documentation",
    "keywords": "Class RecipeDefinitionEditor Namespace Recipes public class RecipeDefinitionEditor : Editor Inheritance object RecipeDefinitionEditor Methods OnInspectorGUI() public override void OnInspectorGUI()"
  },
  "api/Recipes.RecipeHash.html": {
    "href": "api/Recipes.RecipeHash.html",
    "title": "Class RecipeHash | Czasoport Documentation",
    "keywords": "Class RecipeHash Namespace Recipes public static class RecipeHash Inheritance object RecipeHash Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CalculateRecipeHash(ItemDefinition[]) public static string CalculateRecipeHash(ItemDefinition[] neededIngredients) Parameters neededIngredients ItemDefinition[] Returns string"
  },
  "api/Recipes.Tests.RecipeTest.html": {
    "href": "api/Recipes.Tests.RecipeTest.html",
    "title": "Class RecipeTest | Czasoport Documentation",
    "keywords": "Class RecipeTest Namespace Recipes.Tests public class RecipeTest : MonoBehaviour Inheritance object RecipeTest"
  },
  "api/Recipes.Tests.RecipeUnitTest.html": {
    "href": "api/Recipes.Tests.RecipeUnitTest.html",
    "title": "Class RecipeUnitTest | Czasoport Documentation",
    "keywords": "Class RecipeUnitTest Namespace Recipes.Tests [Serializable] public class RecipeUnitTest Inheritance object RecipeUnitTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields expectedResult public RecipeDefinition expectedResult Field Value RecipeDefinition neededIngredients public ItemDefinition[] neededIngredients Field Value ItemDefinition[] shouldBeFound public bool shouldBeFound Field Value bool"
  },
  "api/Recipes.Tests.html": {
    "href": "api/Recipes.Tests.html",
    "title": "Namespace Recipes.Tests | Czasoport Documentation",
    "keywords": "Namespace Recipes.Tests Classes RecipeTest RecipeUnitTest"
  },
  "api/Recipes.html": {
    "href": "api/Recipes.html",
    "title": "Namespace Recipes | Czasoport Documentation",
    "keywords": "Namespace Recipes Classes RecipeChecker RecipeDefinition RecipeDefinitionEditor RecipeHash"
  },
  "api/Settings.AppSettingsDefinition.html": {
    "href": "api/Settings.AppSettingsDefinition.html",
    "title": "Class AppSettingsDefinition | Czasoport Documentation",
    "keywords": "Class AppSettingsDefinition Namespace Settings public class AppSettingsDefinition : ScriptableObject Inheritance object AppSettingsDefinition Fields defaultSaveName public string defaultSaveName Field Value string dormitorySceneName public string dormitorySceneName Field Value string firstSceneName public string firstSceneName Field Value string gameManagerSceneName public string gameManagerSceneName Field Value string itemsResPath public string itemsResPath Field Value string mainMenuSceneName public string mainMenuSceneName Field Value string recipesResPath public string recipesResPath Field Value string townSceneName public string townSceneName Field Value string"
  },
  "api/Settings.DefaultSaveDataDefinition.html": {
    "href": "api/Settings.DefaultSaveDataDefinition.html",
    "title": "Class DefaultSaveDataDefinition | Czasoport Documentation",
    "keywords": "Class DefaultSaveDataDefinition Namespace Settings Default values for when the new game is created. public class DefaultSaveDataDefinition : ScriptableObject Inheritance object DefaultSaveDataDefinition Fields currentPlace public PlaceType currentPlace Field Value PlaceType startingItems public DefaultInventoryEntries startingItems Field Value DefaultInventoryEntries"
  },
  "api/Settings.DevSet.html": {
    "href": "api/Settings.DevSet.html",
    "title": "Class DevSet | Czasoport Documentation",
    "keywords": "Class DevSet Namespace Settings public class DevSet : Singleton<DevSet> Inheritance object Singleton<DevSet> DevSet Inherited Members Singleton<DevSet>.I Singleton<DevSet>.Awake() Fields appSettings public AppSettingsDefinition appSettings Field Value AppSettingsDefinition defSaveData public DefaultSaveDataDefinition defSaveData Field Value DefaultSaveDataDefinition dormSettings public DormSettingsDefinition dormSettings Field Value DormSettingsDefinition townSettings public TownSettingsDefinition townSettings Field Value TownSettingsDefinition"
  },
  "api/Settings.DormSettingsDefinition.html": {
    "href": "api/Settings.DormSettingsDefinition.html",
    "title": "Class DormSettingsDefinition | Czasoport Documentation",
    "keywords": "Class DormSettingsDefinition Namespace Settings public class DormSettingsDefinition : ScriptableObject Inheritance object DormSettingsDefinition Fields draggableMouseFollowSpeed public float draggableMouseFollowSpeed Field Value float draggableThrowForce public float draggableThrowForce Field Value float draggablesMoveSpeed public float draggablesMoveSpeed Field Value float"
  },
  "api/Settings.TownSettingsDefinition.html": {
    "href": "api/Settings.TownSettingsDefinition.html",
    "title": "Class TownSettingsDefinition | Czasoport Documentation",
    "keywords": "Class TownSettingsDefinition Namespace Settings public class TownSettingsDefinition : ScriptableObject Inheritance object TownSettingsDefinition Fields interactionRadius public float interactionRadius Field Value float movementSpeed public float movementSpeed Field Value float"
  },
  "api/Settings.html": {
    "href": "api/Settings.html",
    "title": "Namespace Settings | Czasoport Documentation",
    "keywords": "Namespace Settings Classes AppSettingsDefinition DefaultSaveDataDefinition Default values for when the new game is created. DevSet DormSettingsDefinition TownSettingsDefinition"
  },
  "api/Town.CameraFollowPlayerComponent.html": {
    "href": "api/Town.CameraFollowPlayerComponent.html",
    "title": "Class CameraFollowPlayerComponent | Czasoport Documentation",
    "keywords": "Class CameraFollowPlayerComponent Namespace Town public class CameraFollowPlayerComponent : MonoBehaviour Inheritance object CameraFollowPlayerComponent Fields player public Transform player Field Value Transform"
  },
  "api/Town.IInteractable.html": {
    "href": "api/Town.IInteractable.html",
    "title": "Interface IInteractable | Czasoport Documentation",
    "keywords": "Interface IInteractable Namespace Town public interface IInteractable Methods EnteredInteractionRange() void EnteredInteractionRange() LeftInteractionRange() void LeftInteractionRange()"
  },
  "api/Town.PlayerInteractions.html": {
    "href": "api/Town.PlayerInteractions.html",
    "title": "Class PlayerInteractions | Czasoport Documentation",
    "keywords": "Class PlayerInteractions Namespace Town public class PlayerInteractions : MonoBehaviour Inheritance object PlayerInteractions Fields dialogue public TextAsset dialogue Field Value TextAsset"
  },
  "api/Town.PlayerMovement.html": {
    "href": "api/Town.PlayerMovement.html",
    "title": "Class PlayerMovement | Czasoport Documentation",
    "keywords": "Class PlayerMovement Namespace Town public class PlayerMovement : MonoBehaviour Inheritance object PlayerMovement"
  },
  "api/Town.Town.TrashCan.html": {
    "href": "api/Town.Town.TrashCan.html",
    "title": "Class TrashCan | Czasoport Documentation",
    "keywords": "Class TrashCan Namespace Town.Town public class TrashCan : MonoBehaviour, IInteractable Inheritance object TrashCan Implements IInteractable Methods EnteredInteractionRange() public void EnteredInteractionRange() LeftInteractionRange() public void LeftInteractionRange()"
  },
  "api/Town.Town.html": {
    "href": "api/Town.Town.html",
    "title": "Namespace Town.Town | Czasoport Documentation",
    "keywords": "Namespace Town.Town Classes TrashCan"
  },
  "api/Town.html": {
    "href": "api/Town.html",
    "title": "Namespace Town | Czasoport Documentation",
    "keywords": "Namespace Town Classes CameraFollowPlayerComponent PlayerInteractions PlayerMovement Interfaces IInteractable"
  },
  "api/Utils.Attributes.ObjectIdentifierAttribute.html": {
    "href": "api/Utils.Attributes.ObjectIdentifierAttribute.html",
    "title": "Class ObjectIdentifierAttribute | Czasoport Documentation",
    "keywords": "Class ObjectIdentifierAttribute Namespace Utils.Attributes public class ObjectIdentifierAttribute : PropertyAttribute Inheritance object ObjectIdentifierAttribute"
  },
  "api/Utils.Attributes.ObjectIdentifierDrawer.html": {
    "href": "api/Utils.Attributes.ObjectIdentifierDrawer.html",
    "title": "Class ObjectIdentifierDrawer | Czasoport Documentation",
    "keywords": "Class ObjectIdentifierDrawer Namespace Utils.Attributes public class ObjectIdentifierDrawer : PropertyDrawer Inheritance object ObjectIdentifierDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters property SerializedProperty label GUIContent Returns float OnGUI(Rect, SerializedProperty, GUIContent) public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters position Rect property SerializedProperty label GUIContent"
  },
  "api/Utils.Attributes.ReadOnlyAttribute.html": {
    "href": "api/Utils.Attributes.ReadOnlyAttribute.html",
    "title": "Class ReadOnlyAttribute | Czasoport Documentation",
    "keywords": "Class ReadOnlyAttribute Namespace Utils.Attributes public class ReadOnlyAttribute : PropertyAttribute Inheritance object ReadOnlyAttribute"
  },
  "api/Utils.Attributes.ReadOnlyDrawer.html": {
    "href": "api/Utils.Attributes.ReadOnlyDrawer.html",
    "title": "Class ReadOnlyDrawer | Czasoport Documentation",
    "keywords": "Class ReadOnlyDrawer Namespace Utils.Attributes public class ReadOnlyDrawer : PropertyDrawer Inheritance object ReadOnlyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters property SerializedProperty label GUIContent Returns float OnGUI(Rect, SerializedProperty, GUIContent) public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters position Rect property SerializedProperty label GUIContent"
  },
  "api/Utils.Attributes.html": {
    "href": "api/Utils.Attributes.html",
    "title": "Namespace Utils.Attributes | Czasoport Documentation",
    "keywords": "Namespace Utils.Attributes Classes ObjectIdentifierAttribute ObjectIdentifierDrawer ReadOnlyAttribute ReadOnlyDrawer"
  },
  "api/Utils.DoNotDestroy.html": {
    "href": "api/Utils.DoNotDestroy.html",
    "title": "Class DoNotDestroy | Czasoport Documentation",
    "keywords": "Class DoNotDestroy Namespace Utils public class DoNotDestroy : MonoBehaviour Inheritance object DoNotDestroy"
  },
  "api/Utils.Globals.PlaceType.html": {
    "href": "api/Utils.Globals.PlaceType.html",
    "title": "Enum PlaceType | Czasoport Documentation",
    "keywords": "Enum PlaceType Namespace Utils.Globals public enum PlaceType Fields Dormitory = 0 Town = 1"
  },
  "api/Utils.Globals.html": {
    "href": "api/Utils.Globals.html",
    "title": "Namespace Utils.Globals | Czasoport Documentation",
    "keywords": "Namespace Utils.Globals Enums PlaceType"
  },
  "api/Utils.Loggers.LoggerType.html": {
    "href": "api/Utils.Loggers.LoggerType.html",
    "title": "Enum Loggers.LoggerType | Czasoport Documentation",
    "keywords": "Enum Loggers.LoggerType Namespace Utils public enum Loggers.LoggerType Fields APPLICATION = 1 DATA_PERSISTENCE = 2 DIALOGUES = 4 INVENTORY = 3 RECIPES = 5 UTILS = 0"
  },
  "api/Utils.Loggers.html": {
    "href": "api/Utils.Loggers.html",
    "title": "Class Loggers | Czasoport Documentation",
    "keywords": "Class Loggers Namespace Utils public static class Loggers Inheritance object Loggers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LoggersList public static Dictionary<Loggers.LoggerType, CLogger> LoggersList Field Value Dictionary<Loggers.LoggerType, CLogger>"
  },
  "api/Utils.Singleton.Singleton-1.html": {
    "href": "api/Utils.Singleton.Singleton-1.html",
    "title": "Class Singleton<T> | Czasoport Documentation",
    "keywords": "Class Singleton<T> Namespace Utils.Singleton public class Singleton<T> : MonoBehaviour where T : MonoBehaviour Type Parameters T Inheritance object Singleton<T> Derived DataPersistenceManager DialogueManager DevSet Properties I public static T I { get; } Property Value T Methods Awake() protected virtual void Awake()"
  },
  "api/Utils.Singleton.SingletonOverrideException.html": {
    "href": "api/Utils.Singleton.SingletonOverrideException.html",
    "title": "Class SingletonOverrideException | Czasoport Documentation",
    "keywords": "Class SingletonOverrideException Namespace Utils.Singleton public class SingletonOverrideException : Exception, ISerializable Inheritance object Exception SingletonOverrideException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SingletonOverrideException() public SingletonOverrideException() SingletonOverrideException(string) public SingletonOverrideException(string message) Parameters message string SingletonOverrideException(string, Exception) public SingletonOverrideException(string message, Exception inner) Parameters message string inner Exception"
  },
  "api/Utils.Singleton.html": {
    "href": "api/Utils.Singleton.html",
    "title": "Namespace Utils.Singleton | Czasoport Documentation",
    "keywords": "Namespace Utils.Singleton Classes SingletonOverrideException Singleton<T>"
  },
  "api/Utils.Statistics.StatOperation.html": {
    "href": "api/Utils.Statistics.StatOperation.html",
    "title": "Enum StatOperation | Czasoport Documentation",
    "keywords": "Enum StatOperation Namespace Utils.Statistics public enum StatOperation Fields Addition = 0 Multiplication = 1"
  },
  "api/Utils.Statistics.Statistic.html": {
    "href": "api/Utils.Statistics.Statistic.html",
    "title": "Class Statistic | Czasoport Documentation",
    "keywords": "Class Statistic Namespace Utils.Statistics public class Statistic Inheritance object Statistic Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Statistic(string, float, float, float) public Statistic(string name, float defaultValue, float min, float max) Parameters name string defaultValue float min float max float Properties Value public float Value { get; set; } Property Value float Methods AddModifier(StatOperation, float, string) public string AddModifier(StatOperation operation, float value, string identifier = null) Parameters operation StatOperation value float identifier string Returns string RemoveModifier(string) public void RemoveModifier(string identifier) Parameters identifier string Operators implicit operator float(Statistic) public static implicit operator float(Statistic statistic) Parameters statistic Statistic Returns float"
  },
  "api/Utils.Statistics.html": {
    "href": "api/Utils.Statistics.html",
    "title": "Namespace Utils.Statistics | Czasoport Documentation",
    "keywords": "Namespace Utils.Statistics Classes Statistic Enums StatOperation"
  },
  "api/Utils.UniqueScriptableObject.html": {
    "href": "api/Utils.UniqueScriptableObject.html",
    "title": "Class UniqueScriptableObject | Czasoport Documentation",
    "keywords": "Class UniqueScriptableObject Namespace Utils public class UniqueScriptableObject : ScriptableObject Inheritance object UniqueScriptableObject Fields uniqueId public string uniqueId Field Value string Methods GenerateUniqueId() public void GenerateUniqueId()"
  },
  "api/Utils.html": {
    "href": "api/Utils.html",
    "title": "Namespace Utils | Czasoport Documentation",
    "keywords": "Namespace Utils Classes DoNotDestroy Loggers UniqueScriptableObject Enums Loggers.LoggerType"
  },
  "gdd/fabula/fabula.html": {
    "href": "gdd/fabula/fabula.html",
    "title": "Fabuła | Czasoport Documentation",
    "keywords": "Fabuła Motyw Jesteś biednym studentem alkoholikiem który jedyny cel jaki sobie wyznaczył na studiach to za wszelką cenę zdanie, i przy okazji takie tam upichcenie niebiańskiego trunku którego nikt jeszcze nie osiągnął. Główna Historia Legendy głoszą, iż dawno temu żył sobie student, który posiadał niewyobrażalną dla zwykłego śmiertelnika wiedzę o browarach. Potrafił z niczego wyczarować trunek który zadowolił niejednego konesera. Podobno student po wypiciu jego wytworu dostawał boost do inteligencji, odwagi i szczęścia. Tajemniczy żak okrzyknięty został zaklinaczem chmielu, a czasy jego działania nazywane były przez studentów „złotą” erą. Od zawsze marzył on, aby stworzyć napój doskonały – taki który kopie jak rasowy ogier, a jednocześnie dostarcza nieziemskich wrażeń smakowych. Po wielu latach zdobył wszystkie potrzebne składniki i wystarczającą wiedzę do stworzenia tego arcydzieła, jednak proces (niezwykle niebezpieczny) nie poszedł po jego myśli i był fatalny w skutkach. Po tym wydarzeniu słuch po nim zaginął i nikt nie wie do dziś co się z nim stało. Od tego momentu społeczność studencka popadła w marazm, a co gorsza - zdawalność kolosów i egzaminów drastycznie spadła. Los wszystkich studentów spoczywa na twoich dłoniach! A no tak, sam chcesz się upić w trupa, nieważne... Progresja Historii Student odnajduje zapiski z pamiętnika zaklinacza (z początku swego rodzaju tutorial/wprowadzenie do mechanik, później delkatne wskazówki do browarnictwa i fabuły) które stanowią dla niego podstawę do osiągnięcia swojego celu. Gracz pozyskuje przedmioty poprzez zbieranie, wymiany z innymi studentami, zakupy w sklepie itp. Miejsca Akcji akademik, pokój, kuchnia uczelnia, sale wykładowe, laboratoria kampus, sklepy, boiska, siłownie Lore Myślę, że dobrym pomysłem będzie, gdy gracz dowie się w trakcie, że zaklinaczem był jego ojciec/brat/inny istotny członek rodziny, co jeszcze bardziej zdeterminuje go w jego działaniach."
  },
  "gdd/grafika/grafika.html": {
    "href": "gdd/grafika/grafika.html",
    "title": "Grafika | Czasoport Documentation",
    "keywords": "Grafika Grafiki Koncepcyjne Świata ... Grafiki Koncepcyjne Postaci Postać 1 Szkic Postaci lub model ... Animacja ... Grafiki Koncepcyjne Wrogów Wróg 1 Szkic Wroga lub model ... Animacja ... ... Grafiki Interfejsu Użytkownika ... Tekstury ... Użyte Shadery ..."
  },
  "gdd/interfejs/interfejs.html": {
    "href": "gdd/interfejs/interfejs.html",
    "title": "Interfejs Użytkownika | Czasoport Documentation",
    "keywords": "Interfejs Użytkownika Podczas gry - minimalistyczny, casualowy interfejs (taski, data, minimalistyczne staty np. głodu, snu, promili we krwi) Podczas craftingu - bardziej zaawansowany interfejs, mimo wszystko nadal minimalistyczny (po bokach do wyciągnięcia ekwipunek, notatki zaklinacza) Rozgrywka Szkic interfejsu gry Jak wiele zakrywa interfejs użytkownika Około 10-20% ekranu, tak aby gracz zbytnio nie rozpraszał się podczas gry Jakie Statystyki będą wyświetlane i gdzie Głód, sen, promile. Na dole ekranu. Jakie zdarzenia mają się wykonywać po naciśnięciu odpowiednich przycisków ... Szkic interfejsu craftingu IDLE EKWIPUNEK NOTATKI Jak wiele zakrywa interfejs użytkownika Około 10% ekranu przed rozwinięciem, znaczna większość po rozwinięciu Menu Szkic interfejsu ... Jakie zdarzenia mają się wykonywać po naciśnięciu odpowiednich przycisków ... Sklep ..."
  },
  "gdd/marketing/marketing_monetyzacja.html": {
    "href": "gdd/marketing/marketing_monetyzacja.html",
    "title": "Marketing i Monetyzacja | Czasoport Documentation",
    "keywords": "Marketing i Monetyzacja Rodzaj Dystrybucji: Darmowa, Płatna ... Grupa Docelowa Zakres grupy ... Do kogo zwracamy się z naszą ofertą ... Czemu nie da się zwiększyć grupy docelowej ... Platformy wydania Gry PC Wielkość grupy docelowej ... Cena Produktu ... ... Jak i Gdzie gra zostanie upubliczniona Lista Platform Google Facebook ... W jaki sposób zamierzamy reklamować Grę ... Maksymalna ilość środków przeznaczona na Reklamę ... Szacunek Odniesionych z niech przychodów ..."
  },
  "gdd/muzyka/muzyka.html": {
    "href": "gdd/muzyka/muzyka.html",
    "title": "Muzyka | Czasoport Documentation",
    "keywords": "Muzyka Jak na grę RPG przystało, podchodząca pod 8-bit. Chciałbym osiągnąć efekt podobny do tego, jaki Toby Fox uzyskał w Undertale/Deltarune. Muzyka podczas rozgrywki Muzyka odpowiednia do akcji. Spokojna podczas standardowej gry, casualowa/\"epicka\" podczas craftu, bardziej dynamiczna podczas ważniejszych wyborów. Dźwięki efektów środowiskowych W akademiku - cisza i spokój, czasem słychać jakieś szurnięcie krzesłem, tupnięcie, bardzo rzadko jakieś stuknięcie garnkiem albo zbicie szklanki. Na uczelni - gwar ludzi Na campusie - podobnie gwar ludzi, czasem jakieś krzyki emocji (szczególnie wieczorem) W sklepie/windzie/itp. - standardowa muzyka jaka leci w sklepach/windach/itp. Dialogi postaci Styl Undertale/Deltarune - podczas dialogów pojawia się box, w którym literka po literce pojawiają się zdania, każdej literce towarzyszy jakiś subtelny dźwięk. Dźwięki efektów interfejsu użytkownika Raczej brak, ewentualne subtelne swooshe albo piknięcia."
  },
  "gdd/opis_techniczny/opis_techniczny.html": {
    "href": "gdd/opis_techniczny/opis_techniczny.html",
    "title": "Opis Techniczny | Czasoport Documentation",
    "keywords": "Opis Techniczny Używany silnik graficzny Unity 2022.3.10f1 Język Programowania C# Użyte technologie ... Programy Potrzebne do Pracy na grą Unity, IDE, Photoshop, Ableton Live Trial Platformy wydania gry Windows, Linux, MacOS Jeśli pozwolą możliwości - Android Komunikacja sieciowa jeżeli jest Brak, multiplayer nie implementowany. Komunikacja z Bazą danych Brak, postęp zapisywany na cliencie."
  },
  "gdd/postacie_obiekty/postacie_obiekty.html": {
    "href": "gdd/postacie_obiekty/postacie_obiekty.html",
    "title": "Postacie i obiekty | Czasoport Documentation",
    "keywords": "Postacie i obiekty Postacie występujące w Grze (Ostateczny wygląd zależny od grafików, jednak stylizowany na życie studenckie) Protagonista - Imię do ustalenia Jaka jest jego rola Gracz i główny bohater opowieści. Historia Postaci Biedny student alkoholik, jeszcze nie wie co to studia, ale fajnie brzmi i rodzice kazali więc no... Płeć i wiek Mężczyna, 18 lat Ubiór Standardowy student - bluza lub koszula w kratę. Dziurawe skarpety, jeśli efekt ten będzie możliwy w pixelarcie. Współlokator - Imię do ustalenia Jaka jest jego rola Najlepszy przyjaciel Protagonisty, pomoc w trudnych chwilach, decyduje się na współudział w projekcie PIWO. Historia Postaci Podobnie jak Protagonista, po tygodniu studiów zastanawia się co on najlepszego zrobił decydując się na uczelnię wyższą - mógł przewracać kotlety w Maku, jednak jego rodzice nie byli zachwyceni tym pomysłem. Płeć i wiek Mężczyna, 18 lat Ubiór Podobnie jak Protagonista Reszta TBD Przedmioty Piwo \"138\" Klasyczek pośród klasyczków, pierwszy trunek wyprodukowany samodzielnie przez Protagonistę. Podobno zaspokaja cały głód, daje chwilową euforię i +10 do szczęścia."
  },
  "gdd/poziomy/poziomy.html": {
    "href": "gdd/poziomy/poziomy.html",
    "title": "Poziomy | Czasoport Documentation",
    "keywords": "Poziomy Przykładowe poziomy (Ostateczny wygląd zależny od grafików, jednak stylizowany na życie studenckie) Gra W zamyśle gra nie posiada poszczególnych poziomów, lecz sama w sobie jest jedynym poziomem. Rozbudowana mapa, podzielona na trzy sektory: akademik, kampus i budynki uczelni."
  },
  "gdd/rozgrywka/rozgrywka.html": {
    "href": "gdd/rozgrywka/rozgrywka.html",
    "title": "Rozgrywka | Czasoport Documentation",
    "keywords": "Rozgrywka Cel Gry Gra w zamyśle będzie miała kilka zakończeń, takich jak np. good ending - wytworzenie niebiańskiego trunku/odnalezienie zaklinacza, bad ending - powtórka akcji z zaklinaczem albo zaniedbanie studiów i wydalenie, real ending - urżnięcie się w trupa przez protagonistę. Na wersję demo planowane są na pewno real(najkrótsze) i good(główne) zakończenie. Progresja gry Życie studenta, jednak ulepszone o produkcję piwa. Taski (zarówno główne jak i poboczne) będą wymagały rozwiązywania coraz to trudniejszych zagadek i wciągnięcia się w fabułę, wszystko abu osiągnąć cel. Umiejętności Gracza Gracz nabywa umiejętności wraz ze zdobywaniem kolejnych notatek zaklinacza oraz praktyki craftingu. Mechanika Aby uważyć piwo gracz musi pozyskać wszystkie potrzebne przedmioty. Zadanie jest o tyle ciężkie, że do bardziej wymagających wyrobów składniki są trudne do zdobycia (np. trudne wymiany z innymi studentami lub wysoka cena w sklepie). Sam system craftingu też wymaga chwilę na oswojenie się z nim. Ulepszenie oraz Przedmioty Ulepszanie będzie polegać na samodzielnej naprawie klej pałą, szarą taśmą i na ślinę - jak na studenta przystało. Przedmioty będą dostępne np. w sklepach, u studentów, a te mniej wyszukane - w koszach na śmieci, na drzewach a nawet na ulicy. Kiedy następuje przegrana Gdy głód spadnie poniżej dopuszczalnego poziomu, gdy przeholujemy z promilami lub gdy zostaniemy pobici."
  },
  "index.html": {
    "href": "index.html",
    "title": "Nazwa Gry: Projekt PIWO:od zera do brewer'a | Czasoport Documentation",
    "keywords": "Nazwa Gry: Projekt PIWO:od zera do brewer'a Opis świata Gry Akcja rozgrywa się w 3 głównych lokalizacjach: pokój w akademiku - główne miejsce robienia piwa, jest to jedna klatka z pokoju z akademika z beczkami, składnikami, butelkami itd. kampus - miejsce w którym można pozyskać podstawowe surowce na robienie piwa, spotkać się z innymi studentami, dostać zamówienia, kupić akcesoria do robienia piwa budynki uczelni - miejsce side questów, \"zdobywania wiedzy\" i również pozysku surowców Główny Bohater Biedny student alkoholik, który jedyny cel jaki sobie wyznaczył na studiach to jakkolwiek zdać. Znaduje on niekompletny notatnik zaklinacza piwa i postanawia pójść w jego ślady. Z biegiem czasu uczy się jak tworzyć coraz to lepsze trunki, odnajdując kolejne brakujące strony pamiętnika oraz polegając na swoim doświadczeniu. Grafiki koncepcyjne Narazie brak :( Gatunek oraz Styl Gatunek - RPG z elementami łamigłówek, simulator Rodzaj Grafiki - 2D Widok - top-down poza pokojem, pierwszoosobowy w pokoju Mechanika wyróżniająca grę Zaawansowany system craftingu browara, uzwględniający planowanie do przodu i odkrywanie nowych kombinacji. Ukazanie perspektywy (nie)codziennego życia studenta. Używane Technologie Silnik: Unity 2022.3.10f1 Edytor Graficzny: Zależne od grafików Marketing oraz Monetyzacja Grupa Docelowa - Gen Z, studenci Monetyzacja - brak"
  },
  "manual/manuals/cinput-manual.html": {
    "href": "manual/manuals/cinput-manual.html",
    "title": "Custom Input System | Czasoport Documentation",
    "keywords": "Custom Input System"
  },
  "manual/tutorials-info/generating-docs.html": {
    "href": "manual/tutorials-info/generating-docs.html",
    "title": "Generating Documentation Manually | Czasoport Documentation",
    "keywords": "Generating Documentation Manually Project uses DocFX to generate documentation. GitHub will generate documentation automatically on each push to master branch. However, before merging branch you are currently working to master, it is recommended to generate documentation locally and check if everything is fine. Note Updating the documentation after making relevant changes is required by anyone working on the project. Installing DocFX Please follow steps described in section Create New Website in DocFX installation guide. Czasoport documentation structure Two important folders in Documentation folder are: manual and resources. Manual folder contains Markdown files, that are basically standalone articles published on the site. In order to add new article, create new .md file in one of the subfolders and add link to it in manual/toc.yml file. Structure of toc.yml file is self-explanatory. Resources folder contains images and other files that are used in articles. Folder structure should follow structure of manual folder, but resources for each article should be placed in additional folder with the name of the article. Please check how this picture of a cute cat is placed in the folders in order to understand how it works: ![Cute cat](~/resources/tutorials-info/generating-docs/cat.jpg)"
  },
  "manual/tutorials-info/workflow.html": {
    "href": "manual/tutorials-info/workflow.html",
    "title": "Workflow | Czasoport Documentation",
    "keywords": "Workflow Git Branches Pushes to master branch are protected. Each change, addition, hotfix etc. must be done on separate branch and then merged to master via pull request. Branch names must follow this pattern: type/short-description. For example: feature/adding-new-weapon. Available types are: feature - new addition, system, interaction, item, etc. bugfix - fixing a known bug, error, etc. hotfix - fixing a bug that is critical and needs to be fixed as soon as possible refactor - refactoring code, changing code structure, etc. documentation - adding new documentation, changing existing documentation, etc. spike - trying out new idea, testing new system, etc. short-description must be short, but descriptive. For example: feature/adding-new-weapon is good, but feature/weapon is not. Only kebab-case is allowed. Commits There are no enforced rules on commit messages, but please use descriptive ones. Pull Requests Please provide good name and at least short description of your pull request. If you are adding new feature, describe it as good as you can. If you are fixing a bug, describe what was the bug and how did you fix it. Pull Requests must be approved by at least one code owner. Code owners are automatically added to each pull request. Merge commits are disabled. Each pull request must be merged via squash and merge. Resolving conflicts If you are resolving conflicts, please use rebase instead of merge. This will keep commit history clean. If you are not sure how to do it, please ask for help. Pair programming If you are working on the same branch with someone else, please also use rebase instead of normal pull."
  }
}